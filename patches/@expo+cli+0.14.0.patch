diff --git a/node_modules/@expo/cli/build/bin/cli b/node_modules/@expo/cli/build/bin/cli
index 249c1a1..5b0b13b 100755
--- a/node_modules/@expo/cli/build/bin/cli
+++ b/node_modules/@expo/cli/build/bin/cli
@@ -195,7 +195,7 @@ if (!isSubcommand) {
         "client:install:ios": "npx expo start --ios",
         "client:install:android": "npx expo start --android",
         doctor: "npx expo-doctor",
-        upgrade: "expo-cli upgrade",
+        upgrade: "https://docs.expo.dev/workflow/upgrading-expo-sdk-walkthrough/",
         "customize:web": "npx expo customize",
         publish: "eas update",
         "publish:set": "eas update",
@@ -227,7 +227,8 @@ if (!isSubcommand) {
     if (subcommand in migrationMap) {
         const replacement = migrationMap[subcommand];
         console.log();
-        console.log(_chalk.default.yellow`  {gray $} {bold expo ${subcommand}} is not supported in the local CLI, please use {bold ${replacement}} instead`);
+        const instruction = subcommand === "upgrade" ? "follow this guide" : "use";
+        console.log(_chalk.default.yellow`  {gray $} {bold expo ${subcommand}} is not supported in the local CLI, please ${instruction} {bold ${replacement}} instead`);
         console.log();
         process.exit(1);
     }
diff --git a/node_modules/@expo/cli/build/bin/cli.map b/node_modules/@expo/cli/build/bin/cli.map
index 39f4cbf..9c15d4f 100755
--- a/node_modules/@expo/cli/build/bin/cli.map
+++ b/node_modules/@expo/cli/build/bin/cli.map
@@ -1 +1 @@
-{"version":3,"sources":["../../bin/cli.ts"],"sourcesContent":["#!/usr/bin/env node\nimport arg from 'arg';\nimport chalk from 'chalk';\nimport Debug from 'debug';\nimport { boolish } from 'getenv';\n\n// Setup before requiring `debug`.\nif (boolish('EXPO_DEBUG', false)) {\n  Debug.enable('expo:*');\n} else if (Debug.enabled('expo:')) {\n  process.env.EXPO_DEBUG = '1';\n}\n\nconst defaultCmd = 'start';\n\nexport type Command = (argv?: string[]) => void;\n\nconst commands: { [command: string]: () => Promise<Command> } = {\n  // Add a new command here\n  // NOTE(EvanBacon): Ensure every bundler-related command sets `NODE_ENV` as expected for the command.\n  'run:ios': () => import('../src/run/ios/index.js').then((i) => i.expoRunIos),\n  'run:android': () => import('../src/run/android/index.js').then((i) => i.expoRunAndroid),\n  start: () => import('../src/start/index.js').then((i) => i.expoStart),\n  prebuild: () => import('../src/prebuild/index.js').then((i) => i.expoPrebuild),\n  config: () => import('../src/config/index.js').then((i) => i.expoConfig),\n  export: () => import('../src/export/index.js').then((i) => i.expoExport),\n  'export:web': () => import('../src/export/web/index.js').then((i) => i.expoExportWeb),\n  'export:embed': () => import('../src/export/embed/index.js').then((i) => i.expoExportEmbed),\n\n  // Auxiliary commands\n  install: () => import('../src/install/index.js').then((i) => i.expoInstall),\n  add: () => import('../src/install/index.js').then((i) => i.expoInstall),\n  customize: () => import('../src/customize/index.js').then((i) => i.expoCustomize),\n\n  // Auth\n  login: () => import('../src/login/index.js').then((i) => i.expoLogin),\n  logout: () => import('../src/logout/index.js').then((i) => i.expoLogout),\n  register: () => import('../src/register/index.js').then((i) => i.expoRegister),\n  whoami: () => import('../src/whoami/index.js').then((i) => i.expoWhoami),\n};\n\nconst args = arg(\n  {\n    // Types\n    '--version': Boolean,\n    '--help': Boolean,\n    // NOTE(EvanBacon): This is here to silence warnings from processes that\n    // expect the global expo-cli.\n    '--non-interactive': Boolean,\n\n    // Aliases\n    '-v': '--version',\n    '-h': '--help',\n  },\n  {\n    permissive: true,\n  }\n);\n\nif (args['--version']) {\n  // Version is added in the build script.\n  console.log(process.env.__EXPO_VERSION);\n  process.exit(0);\n}\n\nif (args['--non-interactive']) {\n  console.warn(chalk.yellow`  {bold --non-interactive} is not supported, use {bold $CI=1} instead`);\n}\n\n// Check if we are running `npx expo <subcommand>` or `npx expo`\nconst isSubcommand = Boolean(commands[args._[0]]);\n\n// Handle `--help` flag\nif (!isSubcommand && args['--help']) {\n  const {\n    login,\n    logout,\n    whoami,\n    register,\n    start,\n    install,\n    add,\n    export: _export,\n    config,\n    customize,\n    prebuild,\n    'run:ios': runIos,\n    'run:android': runAndroid,\n    // NOTE(EvanBacon): Don't document this command as it's a temporary\n    // workaround until we can use `expo export` for all production bundling.\n    // https://github.com/expo/expo/pull/21396/files#r1121025873\n    'export:embed': exportEmbed_unused,\n    ...others\n  } = commands;\n\n  console.log(chalk`\n  {bold Usage}\n    {dim $} npx expo <command>\n\n  {bold Commands}\n    ${Object.keys({ start, export: _export, ...others }).join(', ')}\n    ${Object.keys({ 'run:ios': runIos, 'run:android': runAndroid, prebuild }).join(', ')}\n    ${Object.keys({ install, customize, config }).join(', ')}\n    {dim ${Object.keys({ login, logout, whoami, register }).join(', ')}}\n\n  {bold Options}\n    --version, -v   Version number\n    --help, -h      Usage info\n\n  For more info run a command with the {bold --help} flag\n    {dim $} npx expo start --help\n`);\n\n  process.exit(0);\n}\n\n// NOTE(EvanBacon): Squat some directory names to help with migration,\n// users can still use folders named \"send\" or \"eject\" by using the fully qualified `npx expo start ./send`.\nif (!isSubcommand) {\n  const migrationMap: Record<string, string> = {\n    init: 'npx create-expo-app',\n    eject: 'npx expo prebuild',\n    web: 'npx expo start --web',\n    'start:web': 'npx expo start --web',\n    'build:ios': 'eas build -p ios',\n    'build:android': 'eas build -p android',\n    'client:install:ios': 'npx expo start --ios',\n    'client:install:android': 'npx expo start --android',\n    doctor: 'npx expo-doctor',\n    upgrade: 'expo-cli upgrade',\n    'customize:web': 'npx expo customize',\n\n    publish: 'eas update',\n    'publish:set': 'eas update',\n    'publish:rollback': 'eas update',\n    'publish:history': 'eas update',\n    'publish:details': 'eas update',\n\n    'build:web': 'npx expo export:web',\n\n    'credentials:manager': `eas credentials`,\n    'fetch:ios:certs': `eas credentials`,\n    'fetch:android:keystore': `eas credentials`,\n    'fetch:android:hashes': `eas credentials`,\n    'fetch:android:upload-cert': `eas credentials`,\n    'push:android:upload': `eas credentials`,\n    'push:android:show': `eas credentials`,\n    'push:android:clear': `eas credentials`,\n    url: `eas build:list`,\n    'url:ipa': `eas build:list`,\n    'url:apk': `eas build:list`,\n    webhooks: `eas webhook`,\n    'webhooks:add': `eas webhook:create`,\n    'webhooks:remove': `eas webhook:delete`,\n    'webhooks:update': `eas webhook:update`,\n\n    'build:status': `eas build:list`,\n    'upload:android': `eas submit -p android`,\n    'upload:ios': `eas submit -p ios`,\n  };\n\n  // TODO: Log telemetry about invalid command used.\n  const subcommand = args._[0];\n  if (subcommand in migrationMap) {\n    const replacement = migrationMap[subcommand];\n    console.log();\n    console.log(\n      chalk.yellow`  {gray $} {bold expo ${subcommand}} is not supported in the local CLI, please use {bold ${replacement}} instead`\n    );\n    console.log();\n    process.exit(1);\n  }\n  const deprecated = ['send', 'client:ios'];\n  if (deprecated.includes(subcommand)) {\n    console.log();\n    console.log(chalk.yellow`  {gray $} {bold expo ${subcommand}} is deprecated`);\n    console.log();\n    process.exit(1);\n  }\n}\n\nconst command = isSubcommand ? args._[0] : defaultCmd;\nconst commandArgs = isSubcommand ? args._.slice(1) : args._;\n\n// Push the help flag to the subcommand args.\nif (args['--help']) {\n  commandArgs.push('--help');\n}\n\n// Install exit hooks\nprocess.on('SIGINT', () => process.exit(0));\nprocess.on('SIGTERM', () => process.exit(0));\n\ncommands[command]().then((exec) => {\n  exec(commandArgs);\n\n  if (!boolish('EXPO_NO_TELEMETRY', false)) {\n    // NOTE(EvanBacon): Track some basic telemetry events indicating the command\n    // that was run. This can be disabled with the $EXPO_NO_TELEMETRY environment variable.\n    // We do this to determine how well deprecations are going before removing a command.\n    const { logEventAsync } =\n      require('../src/utils/analytics/rudderstackClient') as typeof import('../src/utils/analytics/rudderstackClient');\n    logEventAsync('action', {\n      action: `expo ${command}`,\n      source: 'expo/cli',\n      source_version: process.env.__EXPO_VERSION,\n    });\n  }\n});\n"],"names":["boolish","Debug","enable","enabled","process","env","EXPO_DEBUG","defaultCmd","commands","then","i","expoRunIos","expoRunAndroid","start","expoStart","prebuild","expoPrebuild","config","expoConfig","export","expoExport","expoExportWeb","expoExportEmbed","install","expoInstall","add","customize","expoCustomize","login","expoLogin","logout","expoLogout","register","expoRegister","whoami","expoWhoami","args","arg","Boolean","permissive","console","log","__EXPO_VERSION","exit","warn","chalk","yellow","isSubcommand","_","_export","runIos","runAndroid","exportEmbed_unused","others","Object","keys","join","migrationMap","init","eject","web","doctor","upgrade","publish","url","webhooks","subcommand","replacement","deprecated","includes","command","commandArgs","slice","push","on","exec","logEventAsync","require","action","source","source_version"],"mappings":"AAAA;;AACgB,IAAA,IAAK,kCAAL,KAAK,EAAA;AACH,IAAA,MAAO,kCAAP,OAAO,EAAA;AACP,IAAA,MAAO,kCAAP,OAAO,EAAA;AACD,IAAA,OAAQ,WAAR,QAAQ,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhC,kCAAkC;AAClC,IAAIA,CAAAA,GAAAA,OAAO,AAAqB,CAAA,QAArB,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;IAChCC,MAAK,QAAA,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;CACxB,MAAM,IAAID,MAAK,QAAA,CAACE,OAAO,CAAC,OAAO,CAAC,EAAE;IACjCC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,CAAC;CAC9B;AAED,MAAMC,UAAU,GAAG,OAAO,AAAC;AAI3B,MAAMC,QAAQ,GAAkD;IAC9D,yBAAyB;IACzB,qGAAqG;IACrG,SAAS,EAAE,IAAM;mDAAO,yBAAyB;UAAC,CAACC,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACC,UAAU;QAAA,CAAC;IAAA;IAC5E,aAAa,EAAE,IAAM;mDAAO,6BAA6B;UAAC,CAACF,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACE,cAAc;QAAA,CAAC;IAAA;IACxFC,KAAK,EAAE,IAAM;mDAAO,uBAAuB;UAAC,CAACJ,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACI,SAAS;QAAA,CAAC;IAAA;IACrEC,QAAQ,EAAE,IAAM;mDAAO,0BAA0B;UAAC,CAACN,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACM,YAAY;QAAA,CAAC;IAAA;IAC9EC,MAAM,EAAE,IAAM;mDAAO,wBAAwB;UAAC,CAACR,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACQ,UAAU;QAAA,CAAC;IAAA;IACxEC,MAAM,EAAE,IAAM;mDAAO,wBAAwB;UAAC,CAACV,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACU,UAAU;QAAA,CAAC;IAAA;IACxE,YAAY,EAAE,IAAM;mDAAO,4BAA4B;UAAC,CAACX,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACW,aAAa;QAAA,CAAC;IAAA;IACrF,cAAc,EAAE,IAAM;mDAAO,8BAA8B;UAAC,CAACZ,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACY,eAAe;QAAA,CAAC;IAAA;IAE3F,qBAAqB;IACrBC,OAAO,EAAE,IAAM;mDAAO,yBAAyB;UAAC,CAACd,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACc,WAAW;QAAA,CAAC;IAAA;IAC3EC,GAAG,EAAE,IAAM;mDAAO,yBAAyB;UAAC,CAAChB,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACc,WAAW;QAAA,CAAC;IAAA;IACvEE,SAAS,EAAE,IAAM;mDAAO,2BAA2B;UAAC,CAACjB,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACiB,aAAa;QAAA,CAAC;IAAA;IAEjF,OAAO;IACPC,KAAK,EAAE,IAAM;mDAAO,uBAAuB;UAAC,CAACnB,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACmB,SAAS;QAAA,CAAC;IAAA;IACrEC,MAAM,EAAE,IAAM;mDAAO,wBAAwB;UAAC,CAACrB,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACqB,UAAU;QAAA,CAAC;IAAA;IACxEC,QAAQ,EAAE,IAAM;mDAAO,0BAA0B;UAAC,CAACvB,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACuB,YAAY;QAAA,CAAC;IAAA;IAC9EC,MAAM,EAAE,IAAM;mDAAO,wBAAwB;UAAC,CAACzB,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACyB,UAAU;QAAA,CAAC;CACzE,AAAC;AAEF,MAAMC,IAAI,GAAGC,CAAAA,GAAAA,IAAG,AAgBf,CAAA,QAhBe,CACd;IACE,QAAQ;IACR,WAAW,EAAEC,OAAO;IACpB,QAAQ,EAAEA,OAAO;IACjB,wEAAwE;IACxE,8BAA8B;IAC9B,mBAAmB,EAAEA,OAAO;IAE5B,UAAU;IACV,IAAI,EAAE,WAAW;IACjB,IAAI,EAAE,QAAQ;CACf,EACD;IACEC,UAAU,EAAE,IAAI;CACjB,CACF,AAAC;AAEF,IAAIH,IAAI,CAAC,WAAW,CAAC,EAAE;IACrB,wCAAwC;IACxCI,OAAO,CAACC,GAAG,CAACrC,OAAO,CAACC,GAAG,CAACqC,cAAc,CAAC,CAAC;IACxCtC,OAAO,CAACuC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;AAED,IAAIP,IAAI,CAAC,mBAAmB,CAAC,EAAE;IAC7BI,OAAO,CAACI,IAAI,CAACC,MAAK,QAAA,CAACC,MAAM,CAAC,qEAAqE,CAAC,CAAC,CAAC;CACnG;AAED,gEAAgE;AAChE,MAAMC,YAAY,GAAGT,OAAO,CAAC9B,QAAQ,CAAC4B,IAAI,CAACY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;AAElD,uBAAuB;AACvB,IAAI,CAACD,YAAY,IAAIX,IAAI,CAAC,QAAQ,CAAC,EAAE;IACnC,MAAM,EACJR,KAAK,CAAA,EACLE,MAAM,CAAA,EACNI,MAAM,CAAA,EACNF,QAAQ,CAAA,EACRnB,KAAK,CAAA,EACLU,OAAO,CAAA,EACPE,GAAG,CAAA,EACHN,MAAM,EAAE8B,OAAO,CAAA,EACfhC,MAAM,CAAA,EACNS,SAAS,CAAA,EACTX,QAAQ,CAAA,EACR,SAAS,EAAEmC,MAAM,CAAA,EACjB,aAAa,EAAEC,UAAU,CAAA,EACzB,mEAAmE;IACnE,yEAAyE;IACzE,4DAA4D;IAC5D,cAAc,EAAEC,kBAAkB,CAAA,EAClC,GAAGC,MAAM,EACV,GAAG7C,QAAQ,AAAC;IAEbgC,OAAO,CAACC,GAAG,CAACI,MAAK,QAAA,CAAC;;;;;IAKhB,EAAES,MAAM,CAACC,IAAI,CAAC;QAAE1C,KAAK;QAAEM,MAAM,EAAE8B,OAAO;QAAE,GAAGI,MAAM;KAAE,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,EAAEF,MAAM,CAACC,IAAI,CAAC;QAAE,SAAS,EAAEL,MAAM;QAAE,aAAa,EAAEC,UAAU;QAAEpC,QAAQ;KAAE,CAAC,CAACyC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrF,EAAEF,MAAM,CAACC,IAAI,CAAC;QAAEhC,OAAO;QAAEG,SAAS;QAAET,MAAM;KAAE,CAAC,CAACuC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpD,EAAEF,MAAM,CAACC,IAAI,CAAC;QAAE3B,KAAK;QAAEE,MAAM;QAAEI,MAAM;QAAEF,QAAQ;KAAE,CAAC,CAACwB,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;;;;AAQvE,CAAC,CAAC,CAAC;IAEDpD,OAAO,CAACuC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;AAED,sEAAsE;AACtE,4GAA4G;AAC5G,IAAI,CAACI,YAAY,EAAE;IACjB,MAAMU,YAAY,GAA2B;QAC3CC,IAAI,EAAE,qBAAqB;QAC3BC,KAAK,EAAE,mBAAmB;QAC1BC,GAAG,EAAE,sBAAsB;QAC3B,WAAW,EAAE,sBAAsB;QACnC,WAAW,EAAE,kBAAkB;QAC/B,eAAe,EAAE,sBAAsB;QACvC,oBAAoB,EAAE,sBAAsB;QAC5C,wBAAwB,EAAE,0BAA0B;QACpDC,MAAM,EAAE,iBAAiB;QACzBC,OAAO,EAAE,kBAAkB;QAC3B,eAAe,EAAE,oBAAoB;QAErCC,OAAO,EAAE,YAAY;QACrB,aAAa,EAAE,YAAY;QAC3B,kBAAkB,EAAE,YAAY;QAChC,iBAAiB,EAAE,YAAY;QAC/B,iBAAiB,EAAE,YAAY;QAE/B,WAAW,EAAE,qBAAqB;QAElC,qBAAqB,EAAE,CAAC,eAAe,CAAC;QACxC,iBAAiB,EAAE,CAAC,eAAe,CAAC;QACpC,wBAAwB,EAAE,CAAC,eAAe,CAAC;QAC3C,sBAAsB,EAAE,CAAC,eAAe,CAAC;QACzC,2BAA2B,EAAE,CAAC,eAAe,CAAC;QAC9C,qBAAqB,EAAE,CAAC,eAAe,CAAC;QACxC,mBAAmB,EAAE,CAAC,eAAe,CAAC;QACtC,oBAAoB,EAAE,CAAC,eAAe,CAAC;QACvCC,GAAG,EAAE,CAAC,cAAc,CAAC;QACrB,SAAS,EAAE,CAAC,cAAc,CAAC;QAC3B,SAAS,EAAE,CAAC,cAAc,CAAC;QAC3BC,QAAQ,EAAE,CAAC,WAAW,CAAC;QACvB,cAAc,EAAE,CAAC,kBAAkB,CAAC;QACpC,iBAAiB,EAAE,CAAC,kBAAkB,CAAC;QACvC,iBAAiB,EAAE,CAAC,kBAAkB,CAAC;QAEvC,cAAc,EAAE,CAAC,cAAc,CAAC;QAChC,gBAAgB,EAAE,CAAC,qBAAqB,CAAC;QACzC,YAAY,EAAE,CAAC,iBAAiB,CAAC;KAClC,AAAC;IAEF,kDAAkD;IAClD,MAAMC,UAAU,GAAG9B,IAAI,CAACY,CAAC,CAAC,CAAC,CAAC,AAAC;IAC7B,IAAIkB,UAAU,IAAIT,YAAY,EAAE;QAC9B,MAAMU,WAAW,GAAGV,YAAY,CAACS,UAAU,CAAC,AAAC;QAC7C1B,OAAO,CAACC,GAAG,EAAE,CAAC;QACdD,OAAO,CAACC,GAAG,CACTI,MAAK,QAAA,CAACC,MAAM,CAAC,sBAAsB,EAAEoB,UAAU,CAAC,sDAAsD,EAAEC,WAAW,CAAC,SAAS,CAAC,CAC/H,CAAC;QACF3B,OAAO,CAACC,GAAG,EAAE,CAAC;QACdrC,OAAO,CAACuC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,MAAMyB,UAAU,GAAG;QAAC,MAAM;QAAE,YAAY;KAAC,AAAC;IAC1C,IAAIA,UAAU,CAACC,QAAQ,CAACH,UAAU,CAAC,EAAE;QACnC1B,OAAO,CAACC,GAAG,EAAE,CAAC;QACdD,OAAO,CAACC,GAAG,CAACI,MAAK,QAAA,CAACC,MAAM,CAAC,sBAAsB,EAAEoB,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;QAC9E1B,OAAO,CAACC,GAAG,EAAE,CAAC;QACdrC,OAAO,CAACuC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;CACF;AAED,MAAM2B,OAAO,GAAGvB,YAAY,GAAGX,IAAI,CAACY,CAAC,CAAC,CAAC,CAAC,GAAGzC,UAAU,AAAC;AACtD,MAAMgE,WAAW,GAAGxB,YAAY,GAAGX,IAAI,CAACY,CAAC,CAACwB,KAAK,CAAC,CAAC,CAAC,GAAGpC,IAAI,CAACY,CAAC,AAAC;AAE5D,6CAA6C;AAC7C,IAAIZ,IAAI,CAAC,QAAQ,CAAC,EAAE;IAClBmC,WAAW,CAACE,IAAI,CAAC,QAAQ,CAAC,CAAC;CAC5B;AAED,qBAAqB;AACrBrE,OAAO,CAACsE,EAAE,CAAC,QAAQ,EAAE,IAAMtE,OAAO,CAACuC,IAAI,CAAC,CAAC,CAAC;AAAA,CAAC,CAAC;AAC5CvC,OAAO,CAACsE,EAAE,CAAC,SAAS,EAAE,IAAMtE,OAAO,CAACuC,IAAI,CAAC,CAAC,CAAC;AAAA,CAAC,CAAC;AAE7CnC,QAAQ,CAAC8D,OAAO,CAAC,EAAE,CAAC7D,IAAI,CAAC,CAACkE,IAAI,GAAK;IACjCA,IAAI,CAACJ,WAAW,CAAC,CAAC;IAElB,IAAI,CAACvE,CAAAA,GAAAA,OAAO,AAA4B,CAAA,QAA5B,CAAC,mBAAmB,EAAE,KAAK,CAAC,EAAE;QACxC,4EAA4E;QAC5E,uFAAuF;QACvF,qFAAqF;QACrF,MAAM,EAAE4E,aAAa,CAAA,EAAE,GACrBC,OAAO,CAAC,0CAA0C,CAAC,AAA6D,AAAC;QACnHD,aAAa,CAAC,QAAQ,EAAE;YACtBE,MAAM,EAAE,CAAC,KAAK,EAAER,OAAO,CAAC,CAAC;YACzBS,MAAM,EAAE,UAAU;YAClBC,cAAc,EAAE5E,OAAO,CAACC,GAAG,CAACqC,cAAc;SAC3C,CAAC,CAAC;KACJ;CACF,CAAC,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["../../bin/cli.ts"],"sourcesContent":["#!/usr/bin/env node\nimport arg from 'arg';\nimport chalk from 'chalk';\nimport Debug from 'debug';\nimport { boolish } from 'getenv';\n\n// Setup before requiring `debug`.\nif (boolish('EXPO_DEBUG', false)) {\n  Debug.enable('expo:*');\n} else if (Debug.enabled('expo:')) {\n  process.env.EXPO_DEBUG = '1';\n}\n\nconst defaultCmd = 'start';\n\nexport type Command = (argv?: string[]) => void;\n\nconst commands: { [command: string]: () => Promise<Command> } = {\n  // Add a new command here\n  // NOTE(EvanBacon): Ensure every bundler-related command sets `NODE_ENV` as expected for the command.\n  'run:ios': () => import('../src/run/ios/index.js').then((i) => i.expoRunIos),\n  'run:android': () => import('../src/run/android/index.js').then((i) => i.expoRunAndroid),\n  start: () => import('../src/start/index.js').then((i) => i.expoStart),\n  prebuild: () => import('../src/prebuild/index.js').then((i) => i.expoPrebuild),\n  config: () => import('../src/config/index.js').then((i) => i.expoConfig),\n  export: () => import('../src/export/index.js').then((i) => i.expoExport),\n  'export:web': () => import('../src/export/web/index.js').then((i) => i.expoExportWeb),\n  'export:embed': () => import('../src/export/embed/index.js').then((i) => i.expoExportEmbed),\n\n  // Auxiliary commands\n  install: () => import('../src/install/index.js').then((i) => i.expoInstall),\n  add: () => import('../src/install/index.js').then((i) => i.expoInstall),\n  customize: () => import('../src/customize/index.js').then((i) => i.expoCustomize),\n\n  // Auth\n  login: () => import('../src/login/index.js').then((i) => i.expoLogin),\n  logout: () => import('../src/logout/index.js').then((i) => i.expoLogout),\n  register: () => import('../src/register/index.js').then((i) => i.expoRegister),\n  whoami: () => import('../src/whoami/index.js').then((i) => i.expoWhoami),\n};\n\nconst args = arg(\n  {\n    // Types\n    '--version': Boolean,\n    '--help': Boolean,\n    // NOTE(EvanBacon): This is here to silence warnings from processes that\n    // expect the global expo-cli.\n    '--non-interactive': Boolean,\n\n    // Aliases\n    '-v': '--version',\n    '-h': '--help',\n  },\n  {\n    permissive: true,\n  }\n);\n\nif (args['--version']) {\n  // Version is added in the build script.\n  console.log(process.env.__EXPO_VERSION);\n  process.exit(0);\n}\n\nif (args['--non-interactive']) {\n  console.warn(chalk.yellow`  {bold --non-interactive} is not supported, use {bold $CI=1} instead`);\n}\n\n// Check if we are running `npx expo <subcommand>` or `npx expo`\nconst isSubcommand = Boolean(commands[args._[0]]);\n\n// Handle `--help` flag\nif (!isSubcommand && args['--help']) {\n  const {\n    login,\n    logout,\n    whoami,\n    register,\n    start,\n    install,\n    add,\n    export: _export,\n    config,\n    customize,\n    prebuild,\n    'run:ios': runIos,\n    'run:android': runAndroid,\n    // NOTE(EvanBacon): Don't document this command as it's a temporary\n    // workaround until we can use `expo export` for all production bundling.\n    // https://github.com/expo/expo/pull/21396/files#r1121025873\n    'export:embed': exportEmbed_unused,\n    ...others\n  } = commands;\n\n  console.log(chalk`\n  {bold Usage}\n    {dim $} npx expo <command>\n\n  {bold Commands}\n    ${Object.keys({ start, export: _export, ...others }).join(', ')}\n    ${Object.keys({ 'run:ios': runIos, 'run:android': runAndroid, prebuild }).join(', ')}\n    ${Object.keys({ install, customize, config }).join(', ')}\n    {dim ${Object.keys({ login, logout, whoami, register }).join(', ')}}\n\n  {bold Options}\n    --version, -v   Version number\n    --help, -h      Usage info\n\n  For more info run a command with the {bold --help} flag\n    {dim $} npx expo start --help\n`);\n\n  process.exit(0);\n}\n\n// NOTE(EvanBacon): Squat some directory names to help with migration,\n// users can still use folders named \"send\" or \"eject\" by using the fully qualified `npx expo start ./send`.\nif (!isSubcommand) {\n  const migrationMap: Record<string, string> = {\n    init: 'npx create-expo-app',\n    eject: 'npx expo prebuild',\n    web: 'npx expo start --web',\n    'start:web': 'npx expo start --web',\n    'build:ios': 'eas build -p ios',\n    'build:android': 'eas build -p android',\n    'client:install:ios': 'npx expo start --ios',\n    'client:install:android': 'npx expo start --android',\n    doctor: 'npx expo-doctor',\n    upgrade: 'https://docs.expo.dev/workflow/upgrading-expo-sdk-walkthrough/',\n    'customize:web': 'npx expo customize',\n\n    publish: 'eas update',\n    'publish:set': 'eas update',\n    'publish:rollback': 'eas update',\n    'publish:history': 'eas update',\n    'publish:details': 'eas update',\n\n    'build:web': 'npx expo export:web',\n\n    'credentials:manager': `eas credentials`,\n    'fetch:ios:certs': `eas credentials`,\n    'fetch:android:keystore': `eas credentials`,\n    'fetch:android:hashes': `eas credentials`,\n    'fetch:android:upload-cert': `eas credentials`,\n    'push:android:upload': `eas credentials`,\n    'push:android:show': `eas credentials`,\n    'push:android:clear': `eas credentials`,\n    url: `eas build:list`,\n    'url:ipa': `eas build:list`,\n    'url:apk': `eas build:list`,\n    webhooks: `eas webhook`,\n    'webhooks:add': `eas webhook:create`,\n    'webhooks:remove': `eas webhook:delete`,\n    'webhooks:update': `eas webhook:update`,\n\n    'build:status': `eas build:list`,\n    'upload:android': `eas submit -p android`,\n    'upload:ios': `eas submit -p ios`,\n  };\n\n  // TODO: Log telemetry about invalid command used.\n  const subcommand = args._[0];\n  if (subcommand in migrationMap) {\n    const replacement = migrationMap[subcommand];\n    console.log();\n    const instruction = subcommand === 'upgrade' ? 'follow this guide' : 'use'\n    console.log(\n      chalk.yellow`  {gray $} {bold expo ${subcommand}} is not supported in the local CLI, please ${instruction} {bold ${replacement}} instead`\n    );\n    console.log();\n    process.exit(1);\n  }\n  const deprecated = ['send', 'client:ios'];\n  if (deprecated.includes(subcommand)) {\n    console.log();\n    console.log(chalk.yellow`  {gray $} {bold expo ${subcommand}} is deprecated`);\n    console.log();\n    process.exit(1);\n  }\n}\n\nconst command = isSubcommand ? args._[0] : defaultCmd;\nconst commandArgs = isSubcommand ? args._.slice(1) : args._;\n\n// Push the help flag to the subcommand args.\nif (args['--help']) {\n  commandArgs.push('--help');\n}\n\n// Install exit hooks\nprocess.on('SIGINT', () => process.exit(0));\nprocess.on('SIGTERM', () => process.exit(0));\n\ncommands[command]().then((exec) => {\n  exec(commandArgs);\n\n  if (!boolish('EXPO_NO_TELEMETRY', false)) {\n    // NOTE(EvanBacon): Track some basic telemetry events indicating the command\n    // that was run. This can be disabled with the $EXPO_NO_TELEMETRY environment variable.\n    // We do this to determine how well deprecations are going before removing a command.\n    const { logEventAsync } =\n      require('../src/utils/analytics/rudderstackClient') as typeof import('../src/utils/analytics/rudderstackClient');\n    logEventAsync('action', {\n      action: `expo ${command}`,\n      source: 'expo/cli',\n      source_version: process.env.__EXPO_VERSION,\n    });\n  }\n});\n"],"names":["boolish","Debug","enable","enabled","process","env","EXPO_DEBUG","defaultCmd","commands","then","i","expoRunIos","expoRunAndroid","start","expoStart","prebuild","expoPrebuild","config","expoConfig","export","expoExport","expoExportWeb","expoExportEmbed","install","expoInstall","add","customize","expoCustomize","login","expoLogin","logout","expoLogout","register","expoRegister","whoami","expoWhoami","args","arg","Boolean","permissive","console","log","__EXPO_VERSION","exit","warn","chalk","yellow","isSubcommand","_","_export","runIos","runAndroid","exportEmbed_unused","others","Object","keys","join","migrationMap","init","eject","web","doctor","upgrade","publish","url","webhooks","subcommand","replacement","instruction","deprecated","includes","command","commandArgs","slice","push","on","exec","logEventAsync","require","action","source","source_version"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/api/getVersions.js.map b/node_modules/@expo/cli/build/src/api/getVersions.js.map
index 32d2a27..e3a52e5 100644
--- a/node_modules/@expo/cli/build/src/api/getVersions.js.map
+++ b/node_modules/@expo/cli/build/src/api/getVersions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/api/getVersions.ts"],"sourcesContent":["import { createCachedFetch } from './rest/client';\nimport { CommandError } from '../utils/errors';\n\n/** Represents version info for a particular SDK. */\nexport type SDKVersion = {\n  /** @example \"2.16.1\" */\n  iosVersion?: string;\n  /** @example \"https://dpq5q02fu5f55.cloudfront.net/Exponent-2.17.4.tar.gz\" */\n  iosClientUrl?: string;\n  /** @example \"https://dev.to/expo/expo-sdk-38-is-now-available-5aa0\" */\n  releaseNoteUrl?: string;\n  /** @example \"2.17.4\" */\n  iosClientVersion?: string;\n  /** @example \"https://d1ahtucjixef4r.cloudfront.net/Exponent-2.16.1.apk\" */\n  androidClientUrl?: string;\n  /** @example \"2.16.1\" */\n  androidClientVersion?: string;\n  /** @example { \"typescript\": \"~3.9.5\" } */\n  relatedPackages?: Record<string, string>;\n\n  facebookReactNativeVersion: string;\n\n  facebookReactVersion?: string;\n\n  beta?: boolean;\n};\n\nexport type SDKVersions = Record<string, SDKVersion>;\n\nexport type Versions = {\n  androidUrl: string;\n  androidVersion: string;\n  iosUrl: string;\n  iosVersion: string;\n  sdkVersions: SDKVersions;\n};\n\n/** Get versions from remote endpoint. */\nexport async function getVersionsAsync({\n  skipCache,\n}: { skipCache?: boolean } = {}): Promise<Versions> {\n  // Reconstruct the cached fetch since caching could be disabled.\n  const fetchAsync = createCachedFetch({\n    skipCache,\n    cacheDirectory: 'versions-cache',\n    // We'll use a 5 minute cache to ensure we stay relatively up to date.\n    ttl: 1000 * 60 * 5,\n  });\n\n  const results = await fetchAsync('versions/latest');\n  if (!results.ok) {\n    throw new CommandError(\n      'API',\n      `Unexpected response when fetching version info from Expo servers: ${results.statusText}.`\n    );\n  }\n  const json = await results.json();\n  return json.data;\n}\n"],"names":["getVersionsAsync","skipCache","fetchAsync","createCachedFetch","cacheDirectory","ttl","results","ok","CommandError","statusText","json","data"],"mappings":"AAAA;;;;QAsCsBA,gBAAgB,GAAhBA,gBAAgB;AAtCJ,IAAA,OAAe,WAAf,eAAe,CAAA;AACpB,IAAA,OAAiB,WAAjB,iBAAiB,CAAA;AAqCvC,eAAeA,gBAAgB,CAAC,EACrCC,SAAS,CAAA,EACe,GAAG,EAAE,EAAqB;IAClD,gEAAgE;IAChE,MAAMC,UAAU,GAAGC,CAAAA,GAAAA,OAAiB,AAKlC,CAAA,kBALkC,CAAC;QACnCF,SAAS;QACTG,cAAc,EAAE,gBAAgB;QAChC,sEAAsE;QACtEC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC;KACnB,CAAC,AAAC;IAEH,MAAMC,OAAO,GAAG,MAAMJ,UAAU,CAAC,iBAAiB,CAAC,AAAC;IACpD,IAAI,CAACI,OAAO,CAACC,EAAE,EAAE;QACf,MAAM,IAAIC,OAAY,aAAA,CACpB,KAAK,EACL,CAAC,kEAAkE,EAAEF,OAAO,CAACG,UAAU,CAAC,CAAC,CAAC,CAC3F,CAAC;KACH;IACD,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACI,IAAI,EAAE,AAAC;IAClC,OAAOA,IAAI,CAACC,IAAI,CAAC;CAClB"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/api/getVersions.ts"],"sourcesContent":["import { createCachedFetch } from './rest/client';\nimport { CommandError } from '../utils/errors';\n\n/** Represents version info for a particular SDK. */\nexport type SDKVersion = {\n  /** @example \"2.16.1\" */\n  iosVersion?: string;\n  /** @example \"https://dpq5q02fu5f55.cloudfront.net/Exponent-2.17.4.tar.gz\" */\n  iosClientUrl?: string;\n  /** @example \"https://dev.to/expo/expo-sdk-38-is-now-available-5aa0\" */\n  releaseNoteUrl?: string;\n  /** @example \"2.17.4\" */\n  iosClientVersion?: string;\n  /** @example \"https://d1ahtucjixef4r.cloudfront.net/Exponent-2.16.1.apk\" */\n  androidClientUrl?: string;\n  /** @example \"2.16.1\" */\n  androidClientVersion?: string;\n  /** @example { \"typescript\": \"~3.9.5\" } */\n  relatedPackages?: Record<string, string>;\n\n  facebookReactNativeVersion: string;\n\n  facebookReactVersion?: string;\n\n  expoVersion?: string;\n\n  beta?: boolean;\n};\n\nexport type SDKVersions = Record<string, SDKVersion>;\n\nexport type Versions = {\n  androidUrl: string;\n  androidVersion: string;\n  iosUrl: string;\n  iosVersion: string;\n  sdkVersions: SDKVersions;\n};\n\n/** Get versions from remote endpoint. */\nexport async function getVersionsAsync({\n  skipCache,\n}: { skipCache?: boolean } = {}): Promise<Versions> {\n  // Reconstruct the cached fetch since caching could be disabled.\n  const fetchAsync = createCachedFetch({\n    skipCache,\n    cacheDirectory: 'versions-cache',\n    // We'll use a 5 minute cache to ensure we stay relatively up to date.\n    ttl: 1000 * 60 * 5,\n  });\n\n  const results = await fetchAsync('versions/latest');\n  if (!results.ok) {\n    throw new CommandError(\n      'API',\n      `Unexpected response when fetching version info from Expo servers: ${results.statusText}.`\n    );\n  }\n  const json = await results.json();\n  return json.data;\n}\n"],"names":["getVersionsAsync","skipCache","fetchAsync","createCachedFetch","cacheDirectory","ttl","results","ok","CommandError","statusText","json","data"],"mappings":"AAAA;;;;QAwCsBA,gBAAgB,GAAhBA,gBAAgB;AAxCJ,IAAA,OAAe,WAAf,eAAe,CAAA;AACpB,IAAA,OAAiB,WAAjB,iBAAiB,CAAA;AAuCvC,eAAeA,gBAAgB,CAAC,EACrCC,SAAS,CAAA,EACe,GAAG,EAAE,EAAqB;IAClD,gEAAgE;IAChE,MAAMC,UAAU,GAAGC,CAAAA,GAAAA,OAAiB,AAKlC,CAAA,kBALkC,CAAC;QACnCF,SAAS;QACTG,cAAc,EAAE,gBAAgB;QAChC,sEAAsE;QACtEC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC;KACnB,CAAC,AAAC;IAEH,MAAMC,OAAO,GAAG,MAAMJ,UAAU,CAAC,iBAAiB,CAAC,AAAC;IACpD,IAAI,CAACI,OAAO,CAACC,EAAE,EAAE;QACf,MAAM,IAAIC,OAAY,aAAA,CACpB,KAAK,EACL,CAAC,kEAAkE,EAAEF,OAAO,CAACG,UAAU,CAAC,CAAC,CAAC,CAC3F,CAAC;KACH;IACD,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACI,IAAI,EAAE,AAAC;IAClC,OAAOA,IAAI,CAACC,IAAI,CAAC;CAClB"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/api/rest/cache/response.js.map b/node_modules/@expo/cli/build/src/api/rest/cache/response.js.map
index 254b232..e735a5b 100644
--- a/node_modules/@expo/cli/build/src/api/rest/cache/response.js.map
+++ b/node_modules/@expo/cli/build/src/api/rest/cache/response.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/api/rest/cache/response.ts"],"sourcesContent":["import { CacheObject } from 'cacache';\nimport { BodyInit, Response, ResponseInit } from 'node-fetch';\n\nconst responseInternalSymbol = Object.getOwnPropertySymbols(new Response())[1];\n\nexport class NFCResponse extends Response {\n  constructor(\n    bodyStream?: BodyInit,\n    metaData?: ResponseInit,\n    public ejectFromCache: () => Promise<[CacheObject, CacheObject]> = function ejectFromCache(\n      this: any\n    ) {\n      return this.ejectSelfFromCache();\n    },\n    public fromCache: boolean = false\n  ) {\n    super(bodyStream, metaData);\n  }\n\n  static serializeMetaFromNodeFetchResponse(res: Response) {\n    const metaData = {\n      url: res.url,\n      status: res.status,\n      statusText: res.statusText,\n      headers: res.headers.raw(),\n      size: res.size,\n      timeout: res.timeout,\n      // @ts-ignore\n      counter: res[responseInternalSymbol].counter,\n    };\n\n    return metaData;\n  }\n}\n"],"names":["responseInternalSymbol","Object","getOwnPropertySymbols","Response","NFCResponse","constructor","bodyStream","metaData","ejectFromCache","ejectSelfFromCache","fromCache","serializeMetaFromNodeFetchResponse","res","url","status","statusText","headers","raw","size","timeout","counter"],"mappings":"AAAA;;;;AACiD,IAAA,UAAY,WAAZ,YAAY,CAAA;AAE7D,MAAMA,sBAAsB,GAAGC,MAAM,CAACC,qBAAqB,CAAC,IAAIC,UAAQ,SAAA,EAAE,CAAC,CAAC,CAAC,CAAC,AAAC;AAExE,MAAMC,WAAW,SAASD,UAAQ,SAAA;IACvCE,YACEC,UAAqB,EACrBC,QAAuB,EAChBC,cAAyD,GAAG,SAASA,cAAc,GAExF;QACA,OAAO,IAAI,CAACC,kBAAkB,EAAE,CAAC;KAClC,EACMC,SAAkB,GAAG,KAAK,CACjC;QACA,KAAK,CAACJ,UAAU,EAAEC,QAAQ,CAAC,CAAC;aAPrBC,cAAyD,GAAzDA,cAAyD;aAKzDE,SAAkB,GAAlBA,SAAkB;KAG1B;IAED,OAAOC,kCAAkC,CAACC,GAAa,EAAE;QACvD,MAAML,QAAQ,GAAG;YACfM,GAAG,EAAED,GAAG,CAACC,GAAG;YACZC,MAAM,EAAEF,GAAG,CAACE,MAAM;YAClBC,UAAU,EAAEH,GAAG,CAACG,UAAU;YAC1BC,OAAO,EAAEJ,GAAG,CAACI,OAAO,CAACC,GAAG,EAAE;YAC1BC,IAAI,EAAEN,GAAG,CAACM,IAAI;YACdC,OAAO,EAAEP,GAAG,CAACO,OAAO;YACpB,aAAa;YACbC,OAAO,EAAER,GAAG,CAACZ,sBAAsB,CAAC,CAACoB,OAAO;SAC7C,AAAC;QAEF,OAAOb,QAAQ,CAAC;KACjB;CACF;QA5BYH,WAAW,GAAXA,WAAW"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/api/rest/cache/response.ts"],"sourcesContent":["import type { CacheObject } from 'cacache';\nimport { BodyInit, Response, ResponseInit } from 'node-fetch';\n\nconst responseInternalSymbol = Object.getOwnPropertySymbols(new Response())[1];\n\nexport class NFCResponse extends Response {\n  constructor(\n    bodyStream?: BodyInit,\n    metaData?: ResponseInit,\n    public ejectFromCache: () => Promise<[CacheObject, CacheObject]> = function ejectFromCache(\n      this: any\n    ) {\n      return this.ejectSelfFromCache();\n    },\n    public fromCache: boolean = false\n  ) {\n    super(bodyStream, metaData);\n  }\n\n  static serializeMetaFromNodeFetchResponse(res: Response) {\n    const metaData = {\n      url: res.url,\n      status: res.status,\n      statusText: res.statusText,\n      headers: res.headers.raw(),\n      size: res.size,\n      timeout: res.timeout,\n      // @ts-ignore\n      counter: res[responseInternalSymbol].counter,\n    };\n\n    return metaData;\n  }\n}\n"],"names":["responseInternalSymbol","Object","getOwnPropertySymbols","Response","NFCResponse","constructor","bodyStream","metaData","ejectFromCache","ejectSelfFromCache","fromCache","serializeMetaFromNodeFetchResponse","res","url","status","statusText","headers","raw","size","timeout","counter"],"mappings":"AAAA;;;;AACiD,IAAA,UAAY,WAAZ,YAAY,CAAA;AAE7D,MAAMA,sBAAsB,GAAGC,MAAM,CAACC,qBAAqB,CAAC,IAAIC,UAAQ,SAAA,EAAE,CAAC,CAAC,CAAC,CAAC,AAAC;AAExE,MAAMC,WAAW,SAASD,UAAQ,SAAA;IACvCE,YACEC,UAAqB,EACrBC,QAAuB,EAChBC,cAAyD,GAAG,SAASA,cAAc,GAExF;QACA,OAAO,IAAI,CAACC,kBAAkB,EAAE,CAAC;KAClC,EACMC,SAAkB,GAAG,KAAK,CACjC;QACA,KAAK,CAACJ,UAAU,EAAEC,QAAQ,CAAC,CAAC;aAPrBC,cAAyD,GAAzDA,cAAyD;aAKzDE,SAAkB,GAAlBA,SAAkB;KAG1B;IAED,OAAOC,kCAAkC,CAACC,GAAa,EAAE;QACvD,MAAML,QAAQ,GAAG;YACfM,GAAG,EAAED,GAAG,CAACC,GAAG;YACZC,MAAM,EAAEF,GAAG,CAACE,MAAM;YAClBC,UAAU,EAAEH,GAAG,CAACG,UAAU;YAC1BC,OAAO,EAAEJ,GAAG,CAACI,OAAO,CAACC,GAAG,EAAE;YAC1BC,IAAI,EAAEN,GAAG,CAACM,IAAI;YACdC,OAAO,EAAEP,GAAG,CAACO,OAAO;YACpB,aAAa;YACbC,OAAO,EAAER,GAAG,CAACZ,sBAAsB,CAAC,CAACoB,OAAO;SAC7C,AAAC;QAEF,OAAOb,QAAQ,CAAC;KACjB;CACF;QA5BYH,WAAW,GAAXA,WAAW"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/api/rest/client.js b/node_modules/@expo/cli/build/src/api/rest/client.js
index ce18502..a2b3962 100644
--- a/node_modules/@expo/cli/build/src/api/rest/client.js
+++ b/node_modules/@expo/cli/build/src/api/rest/client.js
@@ -8,7 +8,6 @@ exports.fetchAsync = void 0;
 var _getUserState = require("@expo/config/build/getUserState");
 var _nodeFetch = _interopRequireDefault(require("node-fetch"));
 var _path = _interopRequireDefault(require("path"));
-var _fileSystemCache = require("./cache/FileSystemCache");
 var _wrapFetchWithCache = require("./cache/wrapFetchWithCache");
 var _wrapFetchWithBaseUrl = require("./wrapFetchWithBaseUrl");
 var _wrapFetchWithOffline = require("./wrapFetchWithOffline");
@@ -98,7 +97,8 @@ function createCachedFetch({ fetch =fetchWithCredentials , cacheDirectory , ttl
     if (skipCache || _env.env.EXPO_BETA || _env.env.EXPO_NO_CACHE) {
         return fetch;
     }
-    return (0, _wrapFetchWithCache).wrapFetchWithCache(fetch, new _fileSystemCache.FileSystemCache({
+    const { FileSystemCache  } = require("./cache/FileSystemCache");
+    return (0, _wrapFetchWithCache).wrapFetchWithCache(fetch, new FileSystemCache({
         cacheDirectory: _path.default.join((0, _getUserState).getExpoHomeDirectory(), cacheDirectory),
         ttl
     }));
diff --git a/node_modules/@expo/cli/build/src/api/rest/client.js.map b/node_modules/@expo/cli/build/src/api/rest/client.js.map
index e5b3a77..f29a46d 100644
--- a/node_modules/@expo/cli/build/src/api/rest/client.js.map
+++ b/node_modules/@expo/cli/build/src/api/rest/client.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/api/rest/client.ts"],"sourcesContent":["import { getExpoHomeDirectory } from '@expo/config/build/getUserState';\nimport { JSONValue } from '@expo/json-file';\nimport fetchInstance from 'node-fetch';\nimport path from 'path';\n\nimport { FileSystemCache } from './cache/FileSystemCache';\nimport { wrapFetchWithCache } from './cache/wrapFetchWithCache';\nimport { FetchLike } from './client.types';\nimport { wrapFetchWithBaseUrl } from './wrapFetchWithBaseUrl';\nimport { wrapFetchWithOffline } from './wrapFetchWithOffline';\nimport { wrapFetchWithProgress } from './wrapFetchWithProgress';\nimport { wrapFetchWithProxy } from './wrapFetchWithProxy';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { getExpoApiBaseUrl } from '../endpoint';\nimport { disableNetwork } from '../settings';\nimport UserSettings from '../user/UserSettings';\n\nexport class ApiV2Error extends Error {\n  readonly name = 'ApiV2Error';\n  readonly code: string;\n  readonly expoApiV2ErrorCode: string;\n  readonly expoApiV2ErrorDetails?: JSONValue;\n  readonly expoApiV2ErrorServerStack?: string;\n  readonly expoApiV2ErrorMetadata?: object;\n\n  constructor(response: {\n    message: string;\n    code: string;\n    stack?: string;\n    details?: JSONValue;\n    metadata?: object;\n  }) {\n    super(response.message);\n    this.code = response.code;\n    this.expoApiV2ErrorCode = response.code;\n    this.expoApiV2ErrorDetails = response.details;\n    this.expoApiV2ErrorServerStack = response.stack;\n    this.expoApiV2ErrorMetadata = response.metadata;\n  }\n}\n\n/**\n * An Expo server error that didn't return the expected error JSON information.\n * The only 'expected' place for this is in testing, all other cases are bugs with the server.\n */\nexport class UnexpectedServerError extends Error {\n  readonly name = 'UnexpectedServerError';\n}\n\n/**\n * @returns a `fetch` function that will inject user authentication information and handle errors from the Expo API.\n */\nexport function wrapFetchWithCredentials(fetchFunction: FetchLike): FetchLike {\n  return async function fetchWithCredentials(url, options = {}) {\n    if (Array.isArray(options.headers)) {\n      throw new Error('request headers must be in object form');\n    }\n\n    const resolvedHeaders = options.headers ?? ({} as any);\n\n    const token = UserSettings.getAccessToken();\n    if (token) {\n      resolvedHeaders.authorization = `Bearer ${token}`;\n    } else {\n      const sessionSecret = UserSettings.getSession()?.sessionSecret;\n      if (sessionSecret) {\n        resolvedHeaders['expo-session'] = sessionSecret;\n      }\n    }\n\n    try {\n      const results = await fetchFunction(url, {\n        ...options,\n        headers: resolvedHeaders,\n      });\n\n      if (results.status >= 400 && results.status < 500) {\n        const body = await results.text();\n        try {\n          const data = JSON.parse(body);\n          if (data?.errors?.length) {\n            throw new ApiV2Error(data.errors[0]);\n          }\n        } catch (error: any) {\n          // Server returned non-json response.\n          if (error.message.includes('in JSON at position')) {\n            throw new UnexpectedServerError(body);\n          }\n          throw error;\n        }\n      }\n      return results;\n    } catch (error: any) {\n      // Specifically, when running `npx expo start` and the wifi is connected but not really (public wifi, airplanes, etc).\n      if ('code' in error && error.code === 'ENOTFOUND') {\n        disableNetwork();\n\n        throw new CommandError(\n          'OFFLINE',\n          'Network connection is unreliable. Try again with the environment variable `EXPO_OFFLINE=1` to skip network requests.'\n        );\n      }\n\n      throw error;\n    }\n  };\n}\n\nconst fetchWithOffline = wrapFetchWithOffline(fetchInstance);\n\nconst fetchWithBaseUrl = wrapFetchWithBaseUrl(fetchWithOffline, getExpoApiBaseUrl() + '/v2/');\n\nconst fetchWithProxy = wrapFetchWithProxy(fetchWithBaseUrl);\n\nconst fetchWithCredentials = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n\n/**\n * Create an instance of the fully qualified fetch command (auto authentication and api) but with caching in the '~/.expo' directory.\n * Caching is disabled automatically if the EXPO_NO_CACHE or EXPO_BETA environment variables are enabled.\n */\nexport function createCachedFetch({\n  fetch = fetchWithCredentials,\n  cacheDirectory,\n  ttl,\n  skipCache,\n}: {\n  fetch?: FetchLike;\n  cacheDirectory: string;\n  ttl?: number;\n  skipCache?: boolean;\n}): FetchLike {\n  // Disable all caching in EXPO_BETA.\n  if (skipCache || env.EXPO_BETA || env.EXPO_NO_CACHE) {\n    return fetch;\n  }\n\n  return wrapFetchWithCache(\n    fetch,\n    new FileSystemCache({\n      cacheDirectory: path.join(getExpoHomeDirectory(), cacheDirectory),\n      ttl,\n    })\n  );\n}\n\n/** Instance of fetch with automatic base URL pointing to the Expo API, user credential injection, and API error handling. Caching not included.  */\nexport const fetchAsync = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n"],"names":["wrapFetchWithCredentials","createCachedFetch","ApiV2Error","Error","name","constructor","response","message","code","expoApiV2ErrorCode","expoApiV2ErrorDetails","details","expoApiV2ErrorServerStack","stack","expoApiV2ErrorMetadata","metadata","UnexpectedServerError","fetchFunction","fetchWithCredentials","url","options","Array","isArray","headers","resolvedHeaders","token","UserSettings","getAccessToken","authorization","sessionSecret","getSession","results","status","body","text","data","JSON","parse","errors","length","error","includes","disableNetwork","CommandError","fetchWithOffline","wrapFetchWithOffline","fetchInstance","fetchWithBaseUrl","wrapFetchWithBaseUrl","getExpoApiBaseUrl","fetchWithProxy","wrapFetchWithProxy","wrapFetchWithProgress","fetch","cacheDirectory","ttl","skipCache","env","EXPO_BETA","EXPO_NO_CACHE","wrapFetchWithCache","FileSystemCache","path","join","getExpoHomeDirectory","fetchAsync"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/api/rest/client.ts"],"sourcesContent":["import { getExpoHomeDirectory } from '@expo/config/build/getUserState';\nimport { JSONValue } from '@expo/json-file';\nimport fetchInstance from 'node-fetch';\nimport path from 'path';\n\nimport { wrapFetchWithCache } from './cache/wrapFetchWithCache';\nimport { FetchLike } from './client.types';\nimport { wrapFetchWithBaseUrl } from './wrapFetchWithBaseUrl';\nimport { wrapFetchWithOffline } from './wrapFetchWithOffline';\nimport { wrapFetchWithProgress } from './wrapFetchWithProgress';\nimport { wrapFetchWithProxy } from './wrapFetchWithProxy';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { getExpoApiBaseUrl } from '../endpoint';\nimport { disableNetwork } from '../settings';\nimport UserSettings from '../user/UserSettings';\n\nexport class ApiV2Error extends Error {\n  readonly name = 'ApiV2Error';\n  readonly code: string;\n  readonly expoApiV2ErrorCode: string;\n  readonly expoApiV2ErrorDetails?: JSONValue;\n  readonly expoApiV2ErrorServerStack?: string;\n  readonly expoApiV2ErrorMetadata?: object;\n\n  constructor(response: {\n    message: string;\n    code: string;\n    stack?: string;\n    details?: JSONValue;\n    metadata?: object;\n  }) {\n    super(response.message);\n    this.code = response.code;\n    this.expoApiV2ErrorCode = response.code;\n    this.expoApiV2ErrorDetails = response.details;\n    this.expoApiV2ErrorServerStack = response.stack;\n    this.expoApiV2ErrorMetadata = response.metadata;\n  }\n}\n\n/**\n * An Expo server error that didn't return the expected error JSON information.\n * The only 'expected' place for this is in testing, all other cases are bugs with the server.\n */\nexport class UnexpectedServerError extends Error {\n  readonly name = 'UnexpectedServerError';\n}\n\n/**\n * @returns a `fetch` function that will inject user authentication information and handle errors from the Expo API.\n */\nexport function wrapFetchWithCredentials(fetchFunction: FetchLike): FetchLike {\n  return async function fetchWithCredentials(url, options = {}) {\n    if (Array.isArray(options.headers)) {\n      throw new Error('request headers must be in object form');\n    }\n\n    const resolvedHeaders = options.headers ?? ({} as any);\n\n    const token = UserSettings.getAccessToken();\n    if (token) {\n      resolvedHeaders.authorization = `Bearer ${token}`;\n    } else {\n      const sessionSecret = UserSettings.getSession()?.sessionSecret;\n      if (sessionSecret) {\n        resolvedHeaders['expo-session'] = sessionSecret;\n      }\n    }\n\n    try {\n      const results = await fetchFunction(url, {\n        ...options,\n        headers: resolvedHeaders,\n      });\n\n      if (results.status >= 400 && results.status < 500) {\n        const body = await results.text();\n        try {\n          const data = JSON.parse(body);\n          if (data?.errors?.length) {\n            throw new ApiV2Error(data.errors[0]);\n          }\n        } catch (error: any) {\n          // Server returned non-json response.\n          if (error.message.includes('in JSON at position')) {\n            throw new UnexpectedServerError(body);\n          }\n          throw error;\n        }\n      }\n      return results;\n    } catch (error: any) {\n      // Specifically, when running `npx expo start` and the wifi is connected but not really (public wifi, airplanes, etc).\n      if ('code' in error && error.code === 'ENOTFOUND') {\n        disableNetwork();\n\n        throw new CommandError(\n          'OFFLINE',\n          'Network connection is unreliable. Try again with the environment variable `EXPO_OFFLINE=1` to skip network requests.'\n        );\n      }\n\n      throw error;\n    }\n  };\n}\n\nconst fetchWithOffline = wrapFetchWithOffline(fetchInstance);\n\nconst fetchWithBaseUrl = wrapFetchWithBaseUrl(fetchWithOffline, getExpoApiBaseUrl() + '/v2/');\n\nconst fetchWithProxy = wrapFetchWithProxy(fetchWithBaseUrl);\n\nconst fetchWithCredentials = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n\n/**\n * Create an instance of the fully qualified fetch command (auto authentication and api) but with caching in the '~/.expo' directory.\n * Caching is disabled automatically if the EXPO_NO_CACHE or EXPO_BETA environment variables are enabled.\n */\nexport function createCachedFetch({\n  fetch = fetchWithCredentials,\n  cacheDirectory,\n  ttl,\n  skipCache,\n}: {\n  fetch?: FetchLike;\n  cacheDirectory: string;\n  ttl?: number;\n  skipCache?: boolean;\n}): FetchLike {\n  // Disable all caching in EXPO_BETA.\n  if (skipCache || env.EXPO_BETA || env.EXPO_NO_CACHE) {\n    return fetch;\n  }\n\n  const { FileSystemCache } =\n    require('./cache/FileSystemCache') as typeof import('./cache/FileSystemCache');\n\n  return wrapFetchWithCache(\n    fetch,\n    new FileSystemCache({\n      cacheDirectory: path.join(getExpoHomeDirectory(), cacheDirectory),\n      ttl,\n    })\n  );\n}\n\n/** Instance of fetch with automatic base URL pointing to the Expo API, user credential injection, and API error handling. Caching not included.  */\nexport const fetchAsync = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n"],"names":["wrapFetchWithCredentials","createCachedFetch","ApiV2Error","Error","name","constructor","response","message","code","expoApiV2ErrorCode","expoApiV2ErrorDetails","details","expoApiV2ErrorServerStack","stack","expoApiV2ErrorMetadata","metadata","UnexpectedServerError","fetchFunction","fetchWithCredentials","url","options","Array","isArray","headers","resolvedHeaders","token","UserSettings","getAccessToken","authorization","sessionSecret","getSession","results","status","body","text","data","JSON","parse","errors","length","error","includes","disableNetwork","CommandError","fetchWithOffline","wrapFetchWithOffline","fetchInstance","fetchWithBaseUrl","wrapFetchWithBaseUrl","getExpoApiBaseUrl","fetchWithProxy","wrapFetchWithProxy","wrapFetchWithProgress","fetch","cacheDirectory","ttl","skipCache","env","EXPO_BETA","EXPO_NO_CACHE","FileSystemCache","require","wrapFetchWithCache","path","join","getExpoHomeDirectory","fetchAsync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/customize/typescript.js b/node_modules/@expo/cli/build/src/customize/typescript.js
index 129db62..73819db 100644
--- a/node_modules/@expo/cli/build/src/customize/typescript.js
+++ b/node_modules/@expo/cli/build/src/customize/typescript.js
@@ -48,7 +48,9 @@ async function typescript(projectRoot) {
     const { exp  } = (0, _config).getConfig(projectRoot, {
         skipSDKVersionRequirement: true
     });
-    await new MetroBundlerDevServer(projectRoot, getPlatformBundlers(exp), true).startTypeScriptServices();
+    await new MetroBundlerDevServer(projectRoot, getPlatformBundlers(exp), {
+        isDevClient: true
+    }).startTypeScriptServices();
 }
 
 //# sourceMappingURL=typescript.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/customize/typescript.js.map b/node_modules/@expo/cli/build/src/customize/typescript.js.map
index 4be42be..92347a3 100644
--- a/node_modules/@expo/cli/build/src/customize/typescript.js.map
+++ b/node_modules/@expo/cli/build/src/customize/typescript.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/customize/typescript.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\n\nimport { Log } from '../log';\n\nexport async function typescript(projectRoot: string) {\n  const { TypeScriptProjectPrerequisite } = await import(\n    '../start/doctor/typescript/TypeScriptProjectPrerequisite.js'\n  );\n  const { MetroBundlerDevServer } = await import('../start/server/metro/MetroBundlerDevServer.js');\n  const { getPlatformBundlers } = await import('../start/server/platformBundlers.js');\n\n  try {\n    await new TypeScriptProjectPrerequisite(projectRoot).bootstrapAsync();\n  } catch (error: any) {\n    // Ensure the process doesn't fail if the TypeScript check fails.\n    // This could happen during the install.\n    Log.log();\n    Log.exception(error);\n    return;\n  }\n\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  await new MetroBundlerDevServer(\n    projectRoot,\n    getPlatformBundlers(exp),\n    true\n  ).startTypeScriptServices();\n}\n"],"names":["typescript","projectRoot","TypeScriptProjectPrerequisite","MetroBundlerDevServer","getPlatformBundlers","bootstrapAsync","error","Log","log","exception","exp","getConfig","skipSDKVersionRequirement","startTypeScriptServices"],"mappings":"AAAA;;;;QAIsBA,UAAU,GAAVA,UAAU;AAJN,IAAA,OAAc,WAAd,cAAc,CAAA;AAEpB,IAAA,IAAQ,WAAR,QAAQ,CAAA;;;;;;;;;;;;;;;;;;;;;;AAErB,eAAeA,UAAU,CAACC,WAAmB,EAAE;IACpD,MAAM,EAAEC,6BAA6B,CAAA,EAAE,GAAG,MAAM;+CAC9C,6DAA6D;MAC9D,AAAC;IACF,MAAM,EAAEC,qBAAqB,CAAA,EAAE,GAAG,MAAM;+CAAO,gDAAgD;MAAC,AAAC;IACjG,MAAM,EAAEC,mBAAmB,CAAA,EAAE,GAAG,MAAM;+CAAO,qCAAqC;MAAC,AAAC;IAEpF,IAAI;QACF,MAAM,IAAIF,6BAA6B,CAACD,WAAW,CAAC,CAACI,cAAc,EAAE,CAAC;KACvE,CAAC,OAAOC,KAAK,EAAO;QACnB,iEAAiE;QACjE,wCAAwC;QACxCC,IAAG,IAAA,CAACC,GAAG,EAAE,CAAC;QACVD,IAAG,IAAA,CAACE,SAAS,CAACH,KAAK,CAAC,CAAC;QACrB,OAAO;KACR;IAED,MAAM,EAAEI,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAkD,CAAA,UAAlD,CAACV,WAAW,EAAE;QAAEW,yBAAyB,EAAE,IAAI;KAAE,CAAC,AAAC;IAC5E,MAAM,IAAIT,qBAAqB,CAC7BF,WAAW,EACXG,mBAAmB,CAACM,GAAG,CAAC,EACxB,IAAI,CACL,CAACG,uBAAuB,EAAE,CAAC;CAC7B"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/customize/typescript.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\n\nimport { Log } from '../log';\n\nexport async function typescript(projectRoot: string) {\n  const { TypeScriptProjectPrerequisite } = await import(\n    '../start/doctor/typescript/TypeScriptProjectPrerequisite.js'\n  );\n  const { MetroBundlerDevServer } = await import('../start/server/metro/MetroBundlerDevServer.js');\n  const { getPlatformBundlers } = await import('../start/server/platformBundlers.js');\n\n  try {\n    await new TypeScriptProjectPrerequisite(projectRoot).bootstrapAsync();\n  } catch (error: any) {\n    // Ensure the process doesn't fail if the TypeScript check fails.\n    // This could happen during the install.\n    Log.log();\n    Log.exception(error);\n    return;\n  }\n\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  await new MetroBundlerDevServer(projectRoot, getPlatformBundlers(exp), {\n    isDevClient: true,\n  }).startTypeScriptServices();\n}\n"],"names":["typescript","projectRoot","TypeScriptProjectPrerequisite","MetroBundlerDevServer","getPlatformBundlers","bootstrapAsync","error","Log","log","exception","exp","getConfig","skipSDKVersionRequirement","isDevClient","startTypeScriptServices"],"mappings":"AAAA;;;;QAIsBA,UAAU,GAAVA,UAAU;AAJN,IAAA,OAAc,WAAd,cAAc,CAAA;AAEpB,IAAA,IAAQ,WAAR,QAAQ,CAAA;;;;;;;;;;;;;;;;;;;;;;AAErB,eAAeA,UAAU,CAACC,WAAmB,EAAE;IACpD,MAAM,EAAEC,6BAA6B,CAAA,EAAE,GAAG,MAAM;+CAC9C,6DAA6D;MAC9D,AAAC;IACF,MAAM,EAAEC,qBAAqB,CAAA,EAAE,GAAG,MAAM;+CAAO,gDAAgD;MAAC,AAAC;IACjG,MAAM,EAAEC,mBAAmB,CAAA,EAAE,GAAG,MAAM;+CAAO,qCAAqC;MAAC,AAAC;IAEpF,IAAI;QACF,MAAM,IAAIF,6BAA6B,CAACD,WAAW,CAAC,CAACI,cAAc,EAAE,CAAC;KACvE,CAAC,OAAOC,KAAK,EAAO;QACnB,iEAAiE;QACjE,wCAAwC;QACxCC,IAAG,IAAA,CAACC,GAAG,EAAE,CAAC;QACVD,IAAG,IAAA,CAACE,SAAS,CAACH,KAAK,CAAC,CAAC;QACrB,OAAO;KACR;IAED,MAAM,EAAEI,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAkD,CAAA,UAAlD,CAACV,WAAW,EAAE;QAAEW,yBAAyB,EAAE,IAAI;KAAE,CAAC,AAAC;IAC5E,MAAM,IAAIT,qBAAqB,CAACF,WAAW,EAAEG,mBAAmB,CAACM,GAAG,CAAC,EAAE;QACrEG,WAAW,EAAE,IAAI;KAClB,CAAC,CAACC,uBAAuB,EAAE,CAAC;CAC9B"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/createMetadataJson.js b/node_modules/@expo/cli/build/src/export/createMetadataJson.js
index f80d734..886001d 100644
--- a/node_modules/@expo/cli/build/src/export/createMetadataJson.js
+++ b/node_modules/@expo/cli/build/src/export/createMetadataJson.js
@@ -9,7 +9,7 @@ function _interopRequireDefault(obj) {
         default: obj
     };
 }
-function createMetadataJson({ bundles , fileNames  }) {
+function createMetadataJson({ bundles , fileNames , embeddedHashSet  }) {
     // Build metadata.json
     return {
         version: 0,
@@ -22,7 +22,8 @@ function createMetadataJson({ bundles , fileNames  }) {
                     // Get the filename for each platform's bundle.
                     bundle: _path.default.join("bundles", fileNames[platform]),
                     // Collect all of the assets and convert them to the serial format.
-                    assets: bundle.assets.map((asset)=>{
+                    assets: bundle.assets.filter((asset)=>!embeddedHashSet || !embeddedHashSet.has(asset.hash)
+                    ).map((asset)=>{
                         var // Each asset has multiple hashes which we convert and then flatten.
                         ref;
                         return (ref = asset.fileHashes) == null ? void 0 : ref.map((hash)=>({
diff --git a/node_modules/@expo/cli/build/src/export/createMetadataJson.js.map b/node_modules/@expo/cli/build/src/export/createMetadataJson.js.map
index 6349966..ff01bc3 100644
--- a/node_modules/@expo/cli/build/src/export/createMetadataJson.js.map
+++ b/node_modules/@expo/cli/build/src/export/createMetadataJson.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/createMetadataJson.ts"],"sourcesContent":["import path from 'path';\n\nimport { BundleOutput } from './fork-bundleAsync';\n\nexport type BundlePlatform = 'android' | 'ios';\n\ntype PlatformMetadataAsset = { path: string; ext: string };\n\ntype PlatformMetadata = { bundle: string; assets: PlatformMetadataAsset[] };\n\ntype FileMetadata = {\n  [key in BundlePlatform]: PlatformMetadata;\n};\n\nexport function createMetadataJson({\n  bundles,\n  fileNames,\n}: {\n  bundles: Partial<Record<BundlePlatform, Pick<BundleOutput, 'assets'>>>;\n  fileNames: Record<string, string | undefined>;\n}): {\n  version: 0;\n  bundler: 'metro';\n  fileMetadata: FileMetadata;\n} {\n  // Build metadata.json\n  return {\n    version: 0,\n    bundler: 'metro',\n    fileMetadata: Object.entries(bundles).reduce<Record<string, Partial<PlatformMetadata>>>(\n      (metadata, [platform, bundle]) => {\n        if (platform === 'web') return metadata;\n\n        return {\n          ...metadata,\n          [platform]: {\n            // Get the filename for each platform's bundle.\n            bundle: path.join('bundles', fileNames[platform]!),\n            // Collect all of the assets and convert them to the serial format.\n            assets: bundle.assets\n              .map(\n                (asset) =>\n                  // Each asset has multiple hashes which we convert and then flatten.\n                  asset.fileHashes?.map((hash) => ({\n                    path: path.join('assets', hash),\n                    ext: asset.type,\n                  }))\n              )\n              .filter(Boolean)\n              .flat(),\n          },\n        };\n      },\n      {}\n    ) as FileMetadata,\n  };\n}\n"],"names":["createMetadataJson","bundles","fileNames","version","bundler","fileMetadata","Object","entries","reduce","metadata","platform","bundle","path","join","assets","map","asset","fileHashes","hash","ext","type","filter","Boolean","flat"],"mappings":"AAAA;;;;QAcgBA,kBAAkB,GAAlBA,kBAAkB;AAdjB,IAAA,KAAM,kCAAN,MAAM,EAAA;;;;;;AAchB,SAASA,kBAAkB,CAAC,EACjCC,OAAO,CAAA,EACPC,SAAS,CAAA,EAIV,EAIC;IACA,sBAAsB;IACtB,OAAO;QACLC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,OAAO;QAChBC,YAAY,EAAEC,MAAM,CAACC,OAAO,CAACN,OAAO,CAAC,CAACO,MAAM,CAC1C,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,MAAM,CAAC,GAAK;YAChC,IAAID,QAAQ,KAAK,KAAK,EAAE,OAAOD,QAAQ,CAAC;YAExC,OAAO;gBACL,GAAGA,QAAQ;gBACX,CAACC,QAAQ,CAAC,EAAE;oBACV,+CAA+C;oBAC/CC,MAAM,EAAEC,KAAI,QAAA,CAACC,IAAI,CAAC,SAAS,EAAEX,SAAS,CAACQ,QAAQ,CAAC,CAAE;oBAClD,mEAAmE;oBACnEI,MAAM,EAAEH,MAAM,CAACG,MAAM,CAClBC,GAAG,CACF,CAACC,KAAK;4BACJ,oEAAoE;wBACpEA,GAAgB;wBAAhBA,OAAAA,CAAAA,GAAgB,GAAhBA,KAAK,CAACC,UAAU,SAAK,GAArBD,KAAAA,CAAqB,GAArBA,GAAgB,CAAED,GAAG,CAAC,CAACG,IAAI,GAAK,CAAC;gCAC/BN,IAAI,EAAEA,KAAI,QAAA,CAACC,IAAI,CAAC,QAAQ,EAAEK,IAAI,CAAC;gCAC/BC,GAAG,EAAEH,KAAK,CAACI,IAAI;6BAChB,CAAC;wBAAA,CAAC,CAAA;qBAAA,CACN,CACAC,MAAM,CAACC,OAAO,CAAC,CACfC,IAAI,EAAE;iBACV;aACF,CAAC;SACH,EACD,EAAE,CACH;KACF,CAAC;CACH"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/createMetadataJson.ts"],"sourcesContent":["import path from 'path';\n\nimport { BundleOutput } from './fork-bundleAsync';\n\nexport type BundlePlatform = 'android' | 'ios';\n\ntype PlatformMetadataAsset = { path: string; ext: string };\n\ntype PlatformMetadata = { bundle: string; assets: PlatformMetadataAsset[] };\n\ntype FileMetadata = {\n  [key in BundlePlatform]: PlatformMetadata;\n};\n\nexport function createMetadataJson({\n  bundles,\n  fileNames,\n  embeddedHashSet,\n}: {\n  bundles: Partial<Record<BundlePlatform, Pick<BundleOutput, 'assets'>>>;\n  fileNames: Record<string, string | undefined>;\n  embeddedHashSet?: Set<string>;\n}): {\n  version: 0;\n  bundler: 'metro';\n  fileMetadata: FileMetadata;\n} {\n  // Build metadata.json\n  return {\n    version: 0,\n    bundler: 'metro',\n    fileMetadata: Object.entries(bundles).reduce<Record<string, Partial<PlatformMetadata>>>(\n      (metadata, [platform, bundle]) => {\n        if (platform === 'web') return metadata;\n\n        return {\n          ...metadata,\n          [platform]: {\n            // Get the filename for each platform's bundle.\n            bundle: path.join('bundles', fileNames[platform]!),\n            // Collect all of the assets and convert them to the serial format.\n            assets: bundle.assets\n              .filter((asset) => !embeddedHashSet || !embeddedHashSet.has(asset.hash))\n              .map(\n                (asset) =>\n                  // Each asset has multiple hashes which we convert and then flatten.\n                  asset.fileHashes?.map((hash) => ({\n                    path: path.join('assets', hash),\n                    ext: asset.type,\n                  }))\n              )\n              .filter(Boolean)\n              .flat(),\n          },\n        };\n      },\n      {}\n    ) as FileMetadata,\n  };\n}\n"],"names":["createMetadataJson","bundles","fileNames","embeddedHashSet","version","bundler","fileMetadata","Object","entries","reduce","metadata","platform","bundle","path","join","assets","filter","asset","has","hash","map","fileHashes","ext","type","Boolean","flat"],"mappings":"AAAA;;;;QAcgBA,kBAAkB,GAAlBA,kBAAkB;AAdjB,IAAA,KAAM,kCAAN,MAAM,EAAA;;;;;;AAchB,SAASA,kBAAkB,CAAC,EACjCC,OAAO,CAAA,EACPC,SAAS,CAAA,EACTC,eAAe,CAAA,EAKhB,EAIC;IACA,sBAAsB;IACtB,OAAO;QACLC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,OAAO;QAChBC,YAAY,EAAEC,MAAM,CAACC,OAAO,CAACP,OAAO,CAAC,CAACQ,MAAM,CAC1C,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,MAAM,CAAC,GAAK;YAChC,IAAID,QAAQ,KAAK,KAAK,EAAE,OAAOD,QAAQ,CAAC;YAExC,OAAO;gBACL,GAAGA,QAAQ;gBACX,CAACC,QAAQ,CAAC,EAAE;oBACV,+CAA+C;oBAC/CC,MAAM,EAAEC,KAAI,QAAA,CAACC,IAAI,CAAC,SAAS,EAAEZ,SAAS,CAACS,QAAQ,CAAC,CAAE;oBAClD,mEAAmE;oBACnEI,MAAM,EAAEH,MAAM,CAACG,MAAM,CAClBC,MAAM,CAAC,CAACC,KAAK,GAAK,CAACd,eAAe,IAAI,CAACA,eAAe,CAACe,GAAG,CAACD,KAAK,CAACE,IAAI,CAAC;oBAAA,CAAC,CACvEC,GAAG,CACF,CAACH,KAAK;4BACJ,oEAAoE;wBACpEA,GAAgB;wBAAhBA,OAAAA,CAAAA,GAAgB,GAAhBA,KAAK,CAACI,UAAU,SAAK,GAArBJ,KAAAA,CAAqB,GAArBA,GAAgB,CAAEG,GAAG,CAAC,CAACD,IAAI,GAAK,CAAC;gCAC/BN,IAAI,EAAEA,KAAI,QAAA,CAACC,IAAI,CAAC,QAAQ,EAAEK,IAAI,CAAC;gCAC/BG,GAAG,EAAEL,KAAK,CAACM,IAAI;6BAChB,CAAC;wBAAA,CAAC,CAAA;qBAAA,CACN,CACAP,MAAM,CAACQ,OAAO,CAAC,CACfC,IAAI,EAAE;iBACV;aACF,CAAC;SACH,EACD,EAAE,CACH;KACF,CAAC;CACH"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js b/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js
index 3d0b105..3a646a2 100644
--- a/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js
+++ b/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js
@@ -3,14 +3,18 @@ Object.defineProperty(exports, "__esModule", {
     value: true
 });
 exports.exportEmbedAsync = exportEmbedAsync;
+exports.exportEmbedBundleAsync = exportEmbedBundleAsync;
+var _config = require("@expo/config");
+var _saveAssets = _interopRequireDefault(require("@react-native-community/cli-plugin-metro/build/commands/bundle/saveAssets"));
 var _fs = _interopRequireDefault(require("fs"));
 var _server = _interopRequireDefault(require("metro/src/Server"));
 var _bundle = _interopRequireDefault(require("metro/src/shared/output/bundle"));
 var _path = _interopRequireDefault(require("path"));
 var _log = require("../../log");
 var _instantiateMetro = require("../../start/server/metro/instantiateMetro");
-var _resolveFromProject = require("../../start/server/metro/resolveFromProject");
 var _nodeEnv = require("../../utils/nodeEnv");
+var _profile = require("../../utils/profile");
+var _exportHermes = require("../exportHermes");
 var _forkBundleAsync = require("../fork-bundleAsync");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
@@ -20,16 +24,33 @@ function _interopRequireDefault(obj) {
 async function exportEmbedAsync(projectRoot, options) {
     (0, _nodeEnv).setNodeEnv(options.dev ? "development" : "production");
     require("@expo/env").load(projectRoot);
+    const { bundle , assets  } = await exportEmbedBundleAsync(projectRoot, options);
+    _fs.default.mkdirSync(_path.default.dirname(options.bundleOutput), {
+        recursive: true,
+        mode: 493
+    });
+    // Persist bundle and source maps.
+    await Promise.all([
+        _bundle.default.save(bundle, options, _log.Log.log),
+        // NOTE(EvanBacon): This may need to be adjusted in the future if want to support basePath on native
+        // platforms when doing production embeds (unlikely).
+        (0, _saveAssets).default(assets, options.platform, options.assetsDest, options.assetCatalogDest), 
+    ]);
+}
+async function exportEmbedBundleAsync(projectRoot, options) {
+    const exp = (0, _config).getConfig(projectRoot, {
+        skipSDKVersionRequirement: true
+    }).exp;
+    // TODO: This is slow ~40ms
     const { config  } = await (0, _instantiateMetro).loadMetroConfigAsync(projectRoot, {
         maxWorkers: options.maxWorkers,
         resetCache: options.resetCache,
         config: options.config
     }, {
+        exp,
         isExporting: true
     });
-    // NOTE(EvanBacon): This may need to be adjusted in the future if want to support basePath on native
-    // platforms when doing production embeds (unlikely).
-    const saveAssets = (0, _resolveFromProject).importCliSaveAssetsFromProject(projectRoot);
+    const isHermes = (0, _exportHermes).isEnableHermesManaged(exp, options.platform);
     let sourceMapUrl = options.sourcemapOutput;
     if (sourceMapUrl && !options.sourcemapUseAbsolutePath) {
         sourceMapUrl = _path.default.basename(sourceMapUrl);
@@ -41,28 +62,29 @@ async function exportEmbedAsync(projectRoot, options) {
         dev: options.dev,
         minify: !!options.minify,
         platform: options.platform,
-        unstable_transformProfile: options.unstableTransformProfile
+        unstable_transformProfile: options.unstableTransformProfile || (isHermes ? "hermes-stable" : "default"),
+        customTransformOptions: {
+            __proto__: null,
+            engine: isHermes ? "hermes" : undefined
+        }
     };
     const server = new _server.default(config, {
         watch: false
     });
     try {
-        const bundle = await server.build({
+        const bundle = await (0, _profile).profile(server.build.bind(server), "metro-bundle")({
             ...bundleRequest,
             bundleType: "bundle"
         });
-        _fs.default.mkdirSync(_path.default.dirname(options.bundleOutput), {
-            recursive: true,
-            mode: 493
-        });
-        // Persist bundle and source maps.
-        await _bundle.default.save(bundle, options, _log.Log.log);
         // Save the assets of the bundle
         const outputAssets = await (0, _forkBundleAsync).getAssets(server, {
             ...bundleRequest,
             bundleType: "todo"
         });
-        await saveAssets(outputAssets, options.platform, options.assetsDest, options.assetCatalogDest);
+        return {
+            bundle,
+            assets: outputAssets
+        };
     } finally{
         server.end();
     }
diff --git a/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js.map b/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js.map
index 20058af..35f349c 100644
--- a/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js.map
+++ b/node_modules/@expo/cli/build/src/export/embed/exportEmbedAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/export/embed/exportEmbedAsync.ts"],"sourcesContent":["import fs from 'fs';\nimport Server from 'metro/src/Server';\nimport output from 'metro/src/shared/output/bundle';\nimport type { BundleOptions } from 'metro/src/shared/types';\nimport path from 'path';\n\nimport { Options } from './resolveOptions';\nimport { Log } from '../../log';\nimport { loadMetroConfigAsync } from '../../start/server/metro/instantiateMetro';\nimport { importCliSaveAssetsFromProject } from '../../start/server/metro/resolveFromProject';\nimport { setNodeEnv } from '../../utils/nodeEnv';\nimport { getAssets } from '../fork-bundleAsync';\n\nexport async function exportEmbedAsync(projectRoot: string, options: Options) {\n  setNodeEnv(options.dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const { config } = await loadMetroConfigAsync(\n    projectRoot,\n    {\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetCache,\n      config: options.config,\n    },\n    {\n      isExporting: true,\n    }\n  );\n\n  // NOTE(EvanBacon): This may need to be adjusted in the future if want to support basePath on native\n  // platforms when doing production embeds (unlikely).\n  const saveAssets = importCliSaveAssetsFromProject(projectRoot);\n\n  let sourceMapUrl = options.sourcemapOutput;\n  if (sourceMapUrl && !options.sourcemapUseAbsolutePath) {\n    sourceMapUrl = path.basename(sourceMapUrl);\n  }\n\n  const bundleRequest = {\n    ...Server.DEFAULT_BUNDLE_OPTIONS,\n    entryFile: options.entryFile,\n    sourceMapUrl,\n    dev: options.dev,\n    minify: !!options.minify,\n    platform: options.platform,\n    unstable_transformProfile:\n      options.unstableTransformProfile as BundleOptions['unstable_transformProfile'],\n  };\n\n  const server = new Server(config, {\n    watch: false,\n  });\n\n  try {\n    const bundle = await server.build({\n      ...bundleRequest,\n      bundleType: 'bundle',\n    });\n\n    fs.mkdirSync(path.dirname(options.bundleOutput), { recursive: true, mode: 0o755 });\n\n    // Persist bundle and source maps.\n    await output.save(bundle, options, Log.log);\n\n    // Save the assets of the bundle\n    const outputAssets = await getAssets(server, {\n      ...bundleRequest,\n      bundleType: 'todo',\n    });\n\n    await saveAssets(outputAssets, options.platform, options.assetsDest, options.assetCatalogDest);\n  } finally {\n    server.end();\n  }\n}\n"],"names":["exportEmbedAsync","projectRoot","options","setNodeEnv","dev","require","load","config","loadMetroConfigAsync","maxWorkers","resetCache","isExporting","saveAssets","importCliSaveAssetsFromProject","sourceMapUrl","sourcemapOutput","sourcemapUseAbsolutePath","path","basename","bundleRequest","Server","DEFAULT_BUNDLE_OPTIONS","entryFile","minify","platform","unstable_transformProfile","unstableTransformProfile","server","watch","bundle","build","bundleType","fs","mkdirSync","dirname","bundleOutput","recursive","mode","output","save","Log","log","outputAssets","getAssets","assetsDest","assetCatalogDest","end"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/export/embed/exportEmbedAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport saveAssets from '@react-native-community/cli-plugin-metro/build/commands/bundle/saveAssets';\nimport fs from 'fs';\nimport Server from 'metro/src/Server';\nimport output from 'metro/src/shared/output/bundle';\nimport type { BundleOptions } from 'metro/src/shared/types';\nimport path from 'path';\n\nimport { Options } from './resolveOptions';\nimport { Log } from '../../log';\nimport { loadMetroConfigAsync } from '../../start/server/metro/instantiateMetro';\nimport { setNodeEnv } from '../../utils/nodeEnv';\nimport { profile } from '../../utils/profile';\nimport { isEnableHermesManaged } from '../exportHermes';\nimport { getAssets } from '../fork-bundleAsync';\n\nexport async function exportEmbedAsync(projectRoot: string, options: Options) {\n  setNodeEnv(options.dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const { bundle, assets } = await exportEmbedBundleAsync(projectRoot, options);\n\n  fs.mkdirSync(path.dirname(options.bundleOutput), { recursive: true, mode: 0o755 });\n\n  // Persist bundle and source maps.\n  await Promise.all([\n    output.save(bundle, options, Log.log),\n    // NOTE(EvanBacon): This may need to be adjusted in the future if want to support basePath on native\n    // platforms when doing production embeds (unlikely).\n    saveAssets(assets, options.platform, options.assetsDest, options.assetCatalogDest),\n  ]);\n}\n\nexport async function exportEmbedBundleAsync(projectRoot: string, options: Options) {\n  const exp = getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp;\n\n  // TODO: This is slow ~40ms\n  const { config } = await loadMetroConfigAsync(\n    projectRoot,\n    {\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetCache,\n      config: options.config,\n    },\n    {\n      exp,\n      isExporting: true,\n    }\n  );\n\n  const isHermes = isEnableHermesManaged(exp, options.platform);\n\n  let sourceMapUrl = options.sourcemapOutput;\n  if (sourceMapUrl && !options.sourcemapUseAbsolutePath) {\n    sourceMapUrl = path.basename(sourceMapUrl);\n  }\n\n  const bundleRequest = {\n    ...Server.DEFAULT_BUNDLE_OPTIONS,\n    entryFile: options.entryFile,\n    sourceMapUrl,\n    dev: options.dev,\n    minify: !!options.minify,\n    platform: options.platform,\n    unstable_transformProfile: (options.unstableTransformProfile ||\n      (isHermes ? 'hermes-stable' : 'default')) as BundleOptions['unstable_transformProfile'],\n    customTransformOptions: {\n      __proto__: null,\n      engine: isHermes ? 'hermes' : undefined,\n    },\n  };\n\n  const server = new Server(config, {\n    watch: false,\n  });\n\n  try {\n    const bundle = await profile(\n      server.build.bind(server),\n      'metro-bundle'\n    )({\n      ...bundleRequest,\n      bundleType: 'bundle',\n    });\n\n    // Save the assets of the bundle\n    const outputAssets = await getAssets(server, {\n      ...bundleRequest,\n      bundleType: 'todo',\n    });\n\n    return {\n      bundle,\n      assets: outputAssets,\n    };\n  } finally {\n    server.end();\n  }\n}\n"],"names":["exportEmbedAsync","exportEmbedBundleAsync","projectRoot","options","setNodeEnv","dev","require","load","bundle","assets","fs","mkdirSync","path","dirname","bundleOutput","recursive","mode","Promise","all","output","save","Log","log","saveAssets","platform","assetsDest","assetCatalogDest","exp","getConfig","skipSDKVersionRequirement","config","loadMetroConfigAsync","maxWorkers","resetCache","isExporting","isHermes","isEnableHermesManaged","sourceMapUrl","sourcemapOutput","sourcemapUseAbsolutePath","basename","bundleRequest","Server","DEFAULT_BUNDLE_OPTIONS","entryFile","minify","unstable_transformProfile","unstableTransformProfile","customTransformOptions","__proto__","engine","undefined","server","watch","profile","build","bind","bundleType","outputAssets","getAssets","end"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js b/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js
index e09c003..c923d59 100644
--- a/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js
+++ b/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js
@@ -31,7 +31,7 @@ function resolveOptions(args, parsed) {
     if (!bundleOutput) {
         throw new _errors.CommandError(`Missing required argument: --bundle-output`);
     }
-    var ref2, ref3, ref4, ref5;
+    var ref2, ref3, ref4;
     return {
         entryFile,
         assetCatalogDest: args["--asset-catalog-dest"],
@@ -46,10 +46,10 @@ function resolveOptions(args, parsed) {
         sourcemapSourcesRoot: args["--sourcemap-sources-root"],
         sourcemapUseAbsolutePath: !!parsed.args["--sourcemap-use-absolute-path"],
         assetsDest: args["--assets-dest"],
-        unstableTransformProfile: (ref4 = args["--unstable-transform-profile"]) != null ? ref4 : "default",
+        unstableTransformProfile: args["--unstable-transform-profile"],
         resetCache: !!parsed.args["--reset-cache"],
         resetGlobalCache: false,
-        verbose: (ref5 = args["--verbose"]) != null ? ref5 : _env.env.EXPO_DEBUG,
+        verbose: (ref4 = args["--verbose"]) != null ? ref4 : _env.env.EXPO_DEBUG,
         config: args["--config"] ? _path.default.resolve(args["--config"]) : undefined,
         dev,
         minify
diff --git a/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js.map b/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js.map
index 645a155..2b47630 100644
--- a/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js.map
+++ b/node_modules/@expo/cli/build/src/export/embed/resolveOptions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/export/embed/resolveOptions.ts"],"sourcesContent":["import arg from 'arg';\nimport path from 'path';\n\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { resolveCustomBooleanArgsAsync } from '../../utils/resolveArgs';\n\nexport interface Options {\n  assetsDest?: string;\n  assetCatalogDest?: string;\n  entryFile: string;\n  resetCache: boolean;\n  resetGlobalCache: boolean;\n  transformer?: string;\n  minify?: boolean;\n  config?: string;\n  platform: string;\n  dev: boolean;\n  bundleOutput: string;\n  bundleEncoding?: string;\n  maxWorkers?: number;\n  sourcemapOutput?: string;\n  sourcemapSourcesRoot?: string;\n  sourcemapUseAbsolutePath: boolean;\n  verbose: boolean;\n  unstableTransformProfile: string;\n}\n\nfunction assertIsBoolean(val: any): asserts val is boolean {\n  if (typeof val !== 'boolean') {\n    throw new CommandError(`Expected boolean, got ${typeof val}`);\n  }\n}\n\nexport function resolveOptions(\n  args: arg.Result<arg.Spec>,\n  parsed: Awaited<ReturnType<typeof resolveCustomBooleanArgsAsync>>\n): Options {\n  const dev = parsed.args['--dev'] ?? true;\n  assertIsBoolean(dev);\n\n  const minify = parsed.args['--minify'] ?? !dev;\n  assertIsBoolean(minify);\n\n  const entryFile = args['--entry-file'];\n  if (!entryFile) {\n    throw new CommandError(`Missing required argument: --entry-file`);\n  }\n  const bundleOutput = args['--bundle-output'];\n  if (!bundleOutput) {\n    throw new CommandError(`Missing required argument: --bundle-output`);\n  }\n  return {\n    entryFile,\n    assetCatalogDest: args['--asset-catalog-dest'],\n    platform: args['--platform'] ?? 'ios',\n    transformer: args['--transformer'],\n    // TODO: Support `--dev false`\n    //   dev: false,\n    bundleOutput,\n    bundleEncoding: args['--bundle-encoding'] ?? 'utf8',\n    maxWorkers: args['--max-workers'],\n    sourcemapOutput: args['--sourcemap-output'],\n    sourcemapSourcesRoot: args['--sourcemap-sources-root'],\n    sourcemapUseAbsolutePath: !!parsed.args['--sourcemap-use-absolute-path'],\n    assetsDest: args['--assets-dest'],\n    unstableTransformProfile: args['--unstable-transform-profile'] ?? 'default',\n    resetCache: !!parsed.args['--reset-cache'],\n    resetGlobalCache: false,\n    verbose: args['--verbose'] ?? env.EXPO_DEBUG,\n    config: args['--config'] ? path.resolve(args['--config']) : undefined,\n    dev,\n    minify,\n  };\n}\n"],"names":["resolveOptions","assertIsBoolean","val","CommandError","args","parsed","dev","minify","entryFile","bundleOutput","assetCatalogDest","platform","transformer","bundleEncoding","maxWorkers","sourcemapOutput","sourcemapSourcesRoot","sourcemapUseAbsolutePath","assetsDest","unstableTransformProfile","resetCache","resetGlobalCache","verbose","env","EXPO_DEBUG","config","path","resolve","undefined"],"mappings":"AAAA;;;;QAkCgBA,cAAc,GAAdA,cAAc;AAjCb,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEH,IAAA,IAAiB,WAAjB,iBAAiB,CAAA;AACR,IAAA,OAAoB,WAApB,oBAAoB,CAAA;;;;;;AAwBjD,SAASC,eAAe,CAACC,GAAQ,EAA0B;IACzD,IAAI,OAAOA,GAAG,KAAK,SAAS,EAAE;QAC5B,MAAM,IAAIC,OAAY,aAAA,CAAC,CAAC,sBAAsB,EAAE,OAAOD,GAAG,CAAC,CAAC,CAAC,CAAC;KAC/D;CACF;AAEM,SAASF,cAAc,CAC5BI,IAA0B,EAC1BC,MAAiE,EACxD;QACGA,GAAoB;IAAhC,MAAMC,GAAG,GAAGD,CAAAA,GAAoB,GAApBA,MAAM,CAACD,IAAI,CAAC,OAAO,CAAC,YAApBC,GAAoB,GAAI,IAAI,AAAC;IACzCJ,eAAe,CAACK,GAAG,CAAC,CAAC;QAEND,IAAuB;IAAtC,MAAME,MAAM,GAAGF,CAAAA,IAAuB,GAAvBA,MAAM,CAACD,IAAI,CAAC,UAAU,CAAC,YAAvBC,IAAuB,GAAI,CAACC,GAAG,AAAC;IAC/CL,eAAe,CAACM,MAAM,CAAC,CAAC;IAExB,MAAMC,SAAS,GAAGJ,IAAI,CAAC,cAAc,CAAC,AAAC;IACvC,IAAI,CAACI,SAAS,EAAE;QACd,MAAM,IAAIL,OAAY,aAAA,CAAC,CAAC,uCAAuC,CAAC,CAAC,CAAC;KACnE;IACD,MAAMM,YAAY,GAAGL,IAAI,CAAC,iBAAiB,CAAC,AAAC;IAC7C,IAAI,CAACK,YAAY,EAAE;QACjB,MAAM,IAAIN,OAAY,aAAA,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC;KACtE;QAIWC,IAAkB,EAKZA,IAAyB,EAMfA,IAAoC,EAGrDA,IAAiB;IAjB5B,OAAO;QACLI,SAAS;QACTE,gBAAgB,EAAEN,IAAI,CAAC,sBAAsB,CAAC;QAC9CO,QAAQ,EAAEP,CAAAA,IAAkB,GAAlBA,IAAI,CAAC,YAAY,CAAC,YAAlBA,IAAkB,GAAI,KAAK;QACrCQ,WAAW,EAAER,IAAI,CAAC,eAAe,CAAC;QAClC,8BAA8B;QAC9B,gBAAgB;QAChBK,YAAY;QACZI,cAAc,EAAET,CAAAA,IAAyB,GAAzBA,IAAI,CAAC,mBAAmB,CAAC,YAAzBA,IAAyB,GAAI,MAAM;QACnDU,UAAU,EAAEV,IAAI,CAAC,eAAe,CAAC;QACjCW,eAAe,EAAEX,IAAI,CAAC,oBAAoB,CAAC;QAC3CY,oBAAoB,EAAEZ,IAAI,CAAC,0BAA0B,CAAC;QACtDa,wBAAwB,EAAE,CAAC,CAACZ,MAAM,CAACD,IAAI,CAAC,+BAA+B,CAAC;QACxEc,UAAU,EAAEd,IAAI,CAAC,eAAe,CAAC;QACjCe,wBAAwB,EAAEf,CAAAA,IAAoC,GAApCA,IAAI,CAAC,8BAA8B,CAAC,YAApCA,IAAoC,GAAI,SAAS;QAC3EgB,UAAU,EAAE,CAAC,CAACf,MAAM,CAACD,IAAI,CAAC,eAAe,CAAC;QAC1CiB,gBAAgB,EAAE,KAAK;QACvBC,OAAO,EAAElB,CAAAA,IAAiB,GAAjBA,IAAI,CAAC,WAAW,CAAC,YAAjBA,IAAiB,GAAImB,IAAG,IAAA,CAACC,UAAU;QAC5CC,MAAM,EAAErB,IAAI,CAAC,UAAU,CAAC,GAAGsB,KAAI,QAAA,CAACC,OAAO,CAACvB,IAAI,CAAC,UAAU,CAAC,CAAC,GAAGwB,SAAS;QACrEtB,GAAG;QACHC,MAAM;KACP,CAAC;CACH"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/export/embed/resolveOptions.ts"],"sourcesContent":["import arg from 'arg';\nimport path from 'path';\n\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { resolveCustomBooleanArgsAsync } from '../../utils/resolveArgs';\n\nexport interface Options {\n  assetsDest?: string;\n  assetCatalogDest?: string;\n  entryFile: string;\n  resetCache: boolean;\n  resetGlobalCache: boolean;\n  transformer?: string;\n  minify?: boolean;\n  config?: string;\n  platform: string;\n  dev: boolean;\n  bundleOutput: string;\n  bundleEncoding?: string;\n  maxWorkers?: number;\n  sourcemapOutput?: string;\n  sourcemapSourcesRoot?: string;\n  sourcemapUseAbsolutePath: boolean;\n  verbose: boolean;\n  unstableTransformProfile?: string;\n}\n\nfunction assertIsBoolean(val: any): asserts val is boolean {\n  if (typeof val !== 'boolean') {\n    throw new CommandError(`Expected boolean, got ${typeof val}`);\n  }\n}\n\nexport function resolveOptions(\n  args: arg.Result<arg.Spec>,\n  parsed: Awaited<ReturnType<typeof resolveCustomBooleanArgsAsync>>\n): Options {\n  const dev = parsed.args['--dev'] ?? true;\n  assertIsBoolean(dev);\n\n  const minify = parsed.args['--minify'] ?? !dev;\n  assertIsBoolean(minify);\n\n  const entryFile = args['--entry-file'];\n  if (!entryFile) {\n    throw new CommandError(`Missing required argument: --entry-file`);\n  }\n  const bundleOutput = args['--bundle-output'];\n  if (!bundleOutput) {\n    throw new CommandError(`Missing required argument: --bundle-output`);\n  }\n  return {\n    entryFile,\n    assetCatalogDest: args['--asset-catalog-dest'],\n    platform: args['--platform'] ?? 'ios',\n    transformer: args['--transformer'],\n    // TODO: Support `--dev false`\n    //   dev: false,\n    bundleOutput,\n    bundleEncoding: args['--bundle-encoding'] ?? 'utf8',\n    maxWorkers: args['--max-workers'],\n    sourcemapOutput: args['--sourcemap-output'],\n    sourcemapSourcesRoot: args['--sourcemap-sources-root'],\n    sourcemapUseAbsolutePath: !!parsed.args['--sourcemap-use-absolute-path'],\n    assetsDest: args['--assets-dest'],\n    unstableTransformProfile: args['--unstable-transform-profile'],\n    resetCache: !!parsed.args['--reset-cache'],\n    resetGlobalCache: false,\n    verbose: args['--verbose'] ?? env.EXPO_DEBUG,\n    config: args['--config'] ? path.resolve(args['--config']) : undefined,\n    dev,\n    minify,\n  };\n}\n"],"names":["resolveOptions","assertIsBoolean","val","CommandError","args","parsed","dev","minify","entryFile","bundleOutput","assetCatalogDest","platform","transformer","bundleEncoding","maxWorkers","sourcemapOutput","sourcemapSourcesRoot","sourcemapUseAbsolutePath","assetsDest","unstableTransformProfile","resetCache","resetGlobalCache","verbose","env","EXPO_DEBUG","config","path","resolve","undefined"],"mappings":"AAAA;;;;QAkCgBA,cAAc,GAAdA,cAAc;AAjCb,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEH,IAAA,IAAiB,WAAjB,iBAAiB,CAAA;AACR,IAAA,OAAoB,WAApB,oBAAoB,CAAA;;;;;;AAwBjD,SAASC,eAAe,CAACC,GAAQ,EAA0B;IACzD,IAAI,OAAOA,GAAG,KAAK,SAAS,EAAE;QAC5B,MAAM,IAAIC,OAAY,aAAA,CAAC,CAAC,sBAAsB,EAAE,OAAOD,GAAG,CAAC,CAAC,CAAC,CAAC;KAC/D;CACF;AAEM,SAASF,cAAc,CAC5BI,IAA0B,EAC1BC,MAAiE,EACxD;QACGA,GAAoB;IAAhC,MAAMC,GAAG,GAAGD,CAAAA,GAAoB,GAApBA,MAAM,CAACD,IAAI,CAAC,OAAO,CAAC,YAApBC,GAAoB,GAAI,IAAI,AAAC;IACzCJ,eAAe,CAACK,GAAG,CAAC,CAAC;QAEND,IAAuB;IAAtC,MAAME,MAAM,GAAGF,CAAAA,IAAuB,GAAvBA,MAAM,CAACD,IAAI,CAAC,UAAU,CAAC,YAAvBC,IAAuB,GAAI,CAACC,GAAG,AAAC;IAC/CL,eAAe,CAACM,MAAM,CAAC,CAAC;IAExB,MAAMC,SAAS,GAAGJ,IAAI,CAAC,cAAc,CAAC,AAAC;IACvC,IAAI,CAACI,SAAS,EAAE;QACd,MAAM,IAAIL,OAAY,aAAA,CAAC,CAAC,uCAAuC,CAAC,CAAC,CAAC;KACnE;IACD,MAAMM,YAAY,GAAGL,IAAI,CAAC,iBAAiB,CAAC,AAAC;IAC7C,IAAI,CAACK,YAAY,EAAE;QACjB,MAAM,IAAIN,OAAY,aAAA,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC;KACtE;QAIWC,IAAkB,EAKZA,IAAyB,EAShCA,IAAiB;IAjB5B,OAAO;QACLI,SAAS;QACTE,gBAAgB,EAAEN,IAAI,CAAC,sBAAsB,CAAC;QAC9CO,QAAQ,EAAEP,CAAAA,IAAkB,GAAlBA,IAAI,CAAC,YAAY,CAAC,YAAlBA,IAAkB,GAAI,KAAK;QACrCQ,WAAW,EAAER,IAAI,CAAC,eAAe,CAAC;QAClC,8BAA8B;QAC9B,gBAAgB;QAChBK,YAAY;QACZI,cAAc,EAAET,CAAAA,IAAyB,GAAzBA,IAAI,CAAC,mBAAmB,CAAC,YAAzBA,IAAyB,GAAI,MAAM;QACnDU,UAAU,EAAEV,IAAI,CAAC,eAAe,CAAC;QACjCW,eAAe,EAAEX,IAAI,CAAC,oBAAoB,CAAC;QAC3CY,oBAAoB,EAAEZ,IAAI,CAAC,0BAA0B,CAAC;QACtDa,wBAAwB,EAAE,CAAC,CAACZ,MAAM,CAACD,IAAI,CAAC,+BAA+B,CAAC;QACxEc,UAAU,EAAEd,IAAI,CAAC,eAAe,CAAC;QACjCe,wBAAwB,EAAEf,IAAI,CAAC,8BAA8B,CAAC;QAC9DgB,UAAU,EAAE,CAAC,CAACf,MAAM,CAACD,IAAI,CAAC,eAAe,CAAC;QAC1CiB,gBAAgB,EAAE,KAAK;QACvBC,OAAO,EAAElB,CAAAA,IAAiB,GAAjBA,IAAI,CAAC,WAAW,CAAC,YAAjBA,IAAiB,GAAImB,IAAG,IAAA,CAACC,UAAU;QAC5CC,MAAM,EAAErB,IAAI,CAAC,UAAU,CAAC,GAAGsB,KAAI,QAAA,CAACC,OAAO,CAACvB,IAAI,CAAC,UAAU,CAAC,CAAC,GAAGwB,SAAS;QACrEtB,GAAG;QACHC,MAAM;KACP,CAAC;CACH"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/exportApp.js b/node_modules/@expo/cli/build/src/export/exportApp.js
index 790d275..7f1ed49 100644
--- a/node_modules/@expo/cli/build/src/export/exportApp.js
+++ b/node_modules/@expo/cli/build/src/export/exportApp.js
@@ -170,7 +170,7 @@ async function exportAppAsync(projectRoot, { platforms , outputDir , clear , dev
     // Can be empty during web-only SSG.
     // TODO: Use same asset system across platforms again.
     if (Object.keys(fileNames).length) {
-        const { assets  } = await (0, _exportAssets).exportAssetsAsync(projectRoot, {
+        const { assets , embeddedHashSet  } = await (0, _exportAssets).exportAssetsAsync(projectRoot, {
             exp,
             outputDir: staticFolder,
             bundles
@@ -203,7 +203,8 @@ async function exportAppAsync(projectRoot, { platforms , outputDir , clear , dev
         await (0, _writeContents).writeMetadataJsonAsync({
             outputDir: staticFolder,
             bundles,
-            fileNames
+            fileNames,
+            embeddedHashSet
         });
     }
 }
diff --git a/node_modules/@expo/cli/build/src/export/exportApp.js.map b/node_modules/@expo/cli/build/src/export/exportApp.js.map
index 938cf56..9df2c88 100644
--- a/node_modules/@expo/cli/build/src/export/exportApp.js.map
+++ b/node_modules/@expo/cli/build/src/export/exportApp.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/exportApp.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { exportAssetsAsync, exportCssAssetsAsync } from './exportAssets';\nimport { unstable_exportStaticAsync } from './exportStaticAsync';\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { createBundlesAsync } from './fork-bundleAsync';\nimport { getPublicExpoManifestAsync } from './getPublicExpoManifest';\nimport { persistMetroAssetsAsync } from './persistMetroAssets';\nimport { printBundleSizes } from './printBundleSizes';\nimport { Options } from './resolveOptions';\nimport {\n  writeAssetMapAsync,\n  writeBundlesAsync,\n  writeDebugHtmlAsync,\n  writeMetadataJsonAsync,\n  writeSourceMapsAsync,\n} from './writeContents';\nimport * as Log from '../log';\nimport { createTemplateHtmlFromExpoConfigAsync } from '../start/server/webTemplate';\nimport { copyAsync, ensureDirectoryAsync } from '../utils/dir';\nimport { env } from '../utils/env';\nimport { setNodeEnv } from '../utils/nodeEnv';\n\n/**\n * The structure of the outputDir will be:\n *\n * ```\n * ├── assets\n * │   └── *\n * ├── bundles\n * │   ├── android-01ee6e3ab3e8c16a4d926c91808d5320.js\n * │   └── ios-ee8206cc754d3f7aa9123b7f909d94ea.js\n * └── metadata.json\n * ```\n */\nexport async function exportAppAsync(\n  projectRoot: string,\n  {\n    platforms,\n    outputDir,\n    clear,\n    dev,\n    dumpAssetmap,\n    dumpSourcemap,\n    minify,\n  }: Pick<\n    Options,\n    'dumpAssetmap' | 'dumpSourcemap' | 'dev' | 'clear' | 'outputDir' | 'platforms' | 'minify'\n  >\n): Promise<void> {\n  setNodeEnv(dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const projectConfig = getConfig(projectRoot);\n  const exp = await getPublicExpoManifestAsync(projectRoot, {\n    // Web doesn't require validation.\n    skipValidation: platforms.length === 1 && platforms[0] === 'web',\n  });\n\n  const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n  const basePath = (exp.experiments?.basePath?.replace(/\\/+$/, '') ?? '').trim();\n\n  // Print out logs\n  if (basePath) {\n    Log.log();\n    Log.log(chalk.gray`Using (experimental) base path: ${basePath}`);\n    // Warn if not using an absolute path.\n    if (!basePath.startsWith('/')) {\n      Log.log(\n        chalk.yellow`  Base path does not start with a slash. Requests will not be absolute.`\n      );\n    }\n  }\n\n  const publicPath = path.resolve(projectRoot, env.EXPO_PUBLIC_FOLDER);\n\n  const outputPath = path.resolve(projectRoot, outputDir);\n  const staticFolder = outputPath;\n  const assetsPath = path.join(staticFolder, 'assets');\n  const bundlesPath = path.join(staticFolder, 'bundles');\n\n  await Promise.all([assetsPath, bundlesPath].map(ensureDirectoryAsync));\n\n  await copyPublicFolderAsync(publicPath, staticFolder);\n\n  // Run metro bundler and create the JS bundles/source maps.\n  const bundles = await createBundlesAsync(projectRoot, projectConfig, {\n    clear: !!clear,\n    platforms,\n    minify,\n    sourcemaps: dumpSourcemap,\n    // TODO: Breaks asset exports\n    // platforms: useServerRendering\n    //   ? platforms.filter((platform) => platform !== 'web')\n    //   : platforms,\n    dev,\n  });\n\n  const bundleEntries = Object.entries(bundles);\n  if (bundleEntries.length) {\n    // Log bundle size info to the user\n    printBundleSizes(\n      Object.fromEntries(\n        bundleEntries.map(([key, value]) => {\n          if (!dumpSourcemap) {\n            return [\n              key,\n              {\n                ...value,\n                // Remove source maps from the bundles if they aren't going to be written.\n                map: undefined,\n              },\n            ];\n          }\n\n          return [key, value];\n        })\n      )\n    );\n  }\n\n  // Write the JS bundles to disk, and get the bundle file names (this could change with async chunk loading support).\n  const { hashes, fileNames } = await writeBundlesAsync({\n    bundles,\n    useServerRendering,\n    outputDir: bundlesPath,\n  });\n\n  Log.log('Finished saving JS Bundles');\n\n  if (platforms.includes('web')) {\n    if (useServerRendering) {\n      await unstable_exportStaticAsync(projectRoot, {\n        outputDir: outputPath,\n        minify,\n        basePath,\n        includeMaps: dumpSourcemap,\n        // @ts-expect-error: server not on type yet\n        exportServer: exp.web?.output === 'server',\n      });\n      Log.log('Finished saving static files');\n    } else {\n      const cssLinks = await exportCssAssetsAsync({\n        outputDir,\n        bundles,\n        basePath,\n      });\n      let html = await createTemplateHtmlFromExpoConfigAsync(projectRoot, {\n        scripts: [`${basePath}/bundles/${fileNames.web}`],\n        cssLinks,\n      });\n      // Add the favicon assets to the HTML.\n      const modifyHtml = await getVirtualFaviconAssetsAsync(projectRoot, {\n        outputDir,\n        basePath,\n      });\n      if (modifyHtml) {\n        html = modifyHtml(html);\n      }\n      // Generate SPA-styled HTML file.\n      // If web exists, then write the template HTML file.\n      await fs.promises.writeFile(path.join(staticFolder, 'index.html'), html);\n    }\n\n    // TODO: Use a different mechanism for static web.\n    if (bundles.web) {\n      // Save assets like a typical bundler, preserving the file paths on web.\n      // TODO: Update React Native Web to support loading files from asset hashes.\n      await persistMetroAssetsAsync(bundles.web.assets, {\n        platform: 'web',\n        outputDirectory: staticFolder,\n        basePath,\n      });\n    }\n  }\n\n  // Can be empty during web-only SSG.\n  // TODO: Use same asset system across platforms again.\n  if (Object.keys(fileNames).length) {\n    const { assets } = await exportAssetsAsync(projectRoot, {\n      exp,\n      outputDir: staticFolder,\n      bundles,\n    });\n\n    if (dumpAssetmap) {\n      Log.log('Dumping asset map');\n      await writeAssetMapAsync({ outputDir: staticFolder, assets });\n    }\n    // build source maps\n    if (dumpSourcemap) {\n      Log.log('Dumping source maps');\n      await writeSourceMapsAsync({\n        bundles,\n        hashes,\n        outputDir: bundlesPath,\n        fileNames,\n      });\n\n      Log.log('Preparing additional debugging files');\n      // If we output source maps, then add a debug HTML file which the user can open in\n      // the web browser to inspect the output like web.\n      await writeDebugHtmlAsync({\n        outputDir: staticFolder,\n        fileNames,\n      });\n    }\n\n    // Generate a `metadata.json` and the export is complete.\n    await writeMetadataJsonAsync({ outputDir: staticFolder, bundles, fileNames });\n  }\n}\n\n/**\n * Copy the contents of the public folder into the output folder.\n * This enables users to add static files like `favicon.ico` or `serve.json`.\n *\n * The contents of this folder are completely universal since they refer to\n * static network requests which fall outside the scope of React Native's magic\n * platform resolution patterns.\n */\nasync function copyPublicFolderAsync(publicFolder: string, outputFolder: string) {\n  if (fs.existsSync(publicFolder)) {\n    await copyAsync(publicFolder, outputFolder);\n  }\n}\n"],"names":["exportAppAsync","Log","projectRoot","platforms","outputDir","clear","dev","dumpAssetmap","dumpSourcemap","minify","exp","setNodeEnv","require","load","projectConfig","getConfig","getPublicExpoManifestAsync","skipValidation","length","useServerRendering","includes","web","output","basePath","experiments","replace","trim","log","chalk","gray","startsWith","yellow","publicPath","path","resolve","env","EXPO_PUBLIC_FOLDER","outputPath","staticFolder","assetsPath","join","bundlesPath","Promise","all","map","ensureDirectoryAsync","copyPublicFolderAsync","bundles","createBundlesAsync","sourcemaps","bundleEntries","Object","entries","printBundleSizes","fromEntries","key","value","undefined","hashes","fileNames","writeBundlesAsync","unstable_exportStaticAsync","includeMaps","exportServer","cssLinks","exportCssAssetsAsync","html","createTemplateHtmlFromExpoConfigAsync","scripts","modifyHtml","getVirtualFaviconAssetsAsync","fs","promises","writeFile","persistMetroAssetsAsync","assets","platform","outputDirectory","keys","exportAssetsAsync","writeAssetMapAsync","writeSourceMapsAsync","writeDebugHtmlAsync","writeMetadataJsonAsync","publicFolder","outputFolder","existsSync","copyAsync"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/exportApp.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { exportAssetsAsync, exportCssAssetsAsync } from './exportAssets';\nimport { unstable_exportStaticAsync } from './exportStaticAsync';\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { createBundlesAsync } from './fork-bundleAsync';\nimport { getPublicExpoManifestAsync } from './getPublicExpoManifest';\nimport { persistMetroAssetsAsync } from './persistMetroAssets';\nimport { printBundleSizes } from './printBundleSizes';\nimport { Options } from './resolveOptions';\nimport {\n  writeAssetMapAsync,\n  writeBundlesAsync,\n  writeDebugHtmlAsync,\n  writeMetadataJsonAsync,\n  writeSourceMapsAsync,\n} from './writeContents';\nimport * as Log from '../log';\nimport { createTemplateHtmlFromExpoConfigAsync } from '../start/server/webTemplate';\nimport { copyAsync, ensureDirectoryAsync } from '../utils/dir';\nimport { env } from '../utils/env';\nimport { setNodeEnv } from '../utils/nodeEnv';\n\n/**\n * The structure of the outputDir will be:\n *\n * ```\n * ├── assets\n * │   └── *\n * ├── bundles\n * │   ├── android-01ee6e3ab3e8c16a4d926c91808d5320.js\n * │   └── ios-ee8206cc754d3f7aa9123b7f909d94ea.js\n * └── metadata.json\n * ```\n */\nexport async function exportAppAsync(\n  projectRoot: string,\n  {\n    platforms,\n    outputDir,\n    clear,\n    dev,\n    dumpAssetmap,\n    dumpSourcemap,\n    minify,\n  }: Pick<\n    Options,\n    'dumpAssetmap' | 'dumpSourcemap' | 'dev' | 'clear' | 'outputDir' | 'platforms' | 'minify'\n  >\n): Promise<void> {\n  setNodeEnv(dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const projectConfig = getConfig(projectRoot);\n  const exp = await getPublicExpoManifestAsync(projectRoot, {\n    // Web doesn't require validation.\n    skipValidation: platforms.length === 1 && platforms[0] === 'web',\n  });\n\n  const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n  const basePath = (exp.experiments?.basePath?.replace(/\\/+$/, '') ?? '').trim();\n\n  // Print out logs\n  if (basePath) {\n    Log.log();\n    Log.log(chalk.gray`Using (experimental) base path: ${basePath}`);\n    // Warn if not using an absolute path.\n    if (!basePath.startsWith('/')) {\n      Log.log(\n        chalk.yellow`  Base path does not start with a slash. Requests will not be absolute.`\n      );\n    }\n  }\n\n  const publicPath = path.resolve(projectRoot, env.EXPO_PUBLIC_FOLDER);\n\n  const outputPath = path.resolve(projectRoot, outputDir);\n  const staticFolder = outputPath;\n  const assetsPath = path.join(staticFolder, 'assets');\n  const bundlesPath = path.join(staticFolder, 'bundles');\n\n  await Promise.all([assetsPath, bundlesPath].map(ensureDirectoryAsync));\n\n  await copyPublicFolderAsync(publicPath, staticFolder);\n\n  // Run metro bundler and create the JS bundles/source maps.\n  const bundles = await createBundlesAsync(projectRoot, projectConfig, {\n    clear: !!clear,\n    platforms,\n    minify,\n    sourcemaps: dumpSourcemap,\n    // TODO: Breaks asset exports\n    // platforms: useServerRendering\n    //   ? platforms.filter((platform) => platform !== 'web')\n    //   : platforms,\n    dev,\n  });\n\n  const bundleEntries = Object.entries(bundles);\n  if (bundleEntries.length) {\n    // Log bundle size info to the user\n    printBundleSizes(\n      Object.fromEntries(\n        bundleEntries.map(([key, value]) => {\n          if (!dumpSourcemap) {\n            return [\n              key,\n              {\n                ...value,\n                // Remove source maps from the bundles if they aren't going to be written.\n                map: undefined,\n              },\n            ];\n          }\n\n          return [key, value];\n        })\n      )\n    );\n  }\n\n  // Write the JS bundles to disk, and get the bundle file names (this could change with async chunk loading support).\n  const { hashes, fileNames } = await writeBundlesAsync({\n    bundles,\n    useServerRendering,\n    outputDir: bundlesPath,\n  });\n\n  Log.log('Finished saving JS Bundles');\n\n  if (platforms.includes('web')) {\n    if (useServerRendering) {\n      await unstable_exportStaticAsync(projectRoot, {\n        outputDir: outputPath,\n        minify,\n        basePath,\n        includeMaps: dumpSourcemap,\n        // @ts-expect-error: server not on type yet\n        exportServer: exp.web?.output === 'server',\n      });\n      Log.log('Finished saving static files');\n    } else {\n      const cssLinks = await exportCssAssetsAsync({\n        outputDir,\n        bundles,\n        basePath,\n      });\n      let html = await createTemplateHtmlFromExpoConfigAsync(projectRoot, {\n        scripts: [`${basePath}/bundles/${fileNames.web}`],\n        cssLinks,\n      });\n      // Add the favicon assets to the HTML.\n      const modifyHtml = await getVirtualFaviconAssetsAsync(projectRoot, {\n        outputDir,\n        basePath,\n      });\n      if (modifyHtml) {\n        html = modifyHtml(html);\n      }\n      // Generate SPA-styled HTML file.\n      // If web exists, then write the template HTML file.\n      await fs.promises.writeFile(path.join(staticFolder, 'index.html'), html);\n    }\n\n    // TODO: Use a different mechanism for static web.\n    if (bundles.web) {\n      // Save assets like a typical bundler, preserving the file paths on web.\n      // TODO: Update React Native Web to support loading files from asset hashes.\n      await persistMetroAssetsAsync(bundles.web.assets, {\n        platform: 'web',\n        outputDirectory: staticFolder,\n        basePath,\n      });\n    }\n  }\n\n  // Can be empty during web-only SSG.\n  // TODO: Use same asset system across platforms again.\n  if (Object.keys(fileNames).length) {\n    const { assets, embeddedHashSet } = await exportAssetsAsync(projectRoot, {\n      exp,\n      outputDir: staticFolder,\n      bundles,\n    });\n\n    if (dumpAssetmap) {\n      Log.log('Dumping asset map');\n      await writeAssetMapAsync({ outputDir: staticFolder, assets });\n    }\n    // build source maps\n    if (dumpSourcemap) {\n      Log.log('Dumping source maps');\n      await writeSourceMapsAsync({\n        bundles,\n        hashes,\n        outputDir: bundlesPath,\n        fileNames,\n      });\n\n      Log.log('Preparing additional debugging files');\n      // If we output source maps, then add a debug HTML file which the user can open in\n      // the web browser to inspect the output like web.\n      await writeDebugHtmlAsync({\n        outputDir: staticFolder,\n        fileNames,\n      });\n    }\n\n    // Generate a `metadata.json` and the export is complete.\n    await writeMetadataJsonAsync({ outputDir: staticFolder, bundles, fileNames, embeddedHashSet });\n  }\n}\n\n/**\n * Copy the contents of the public folder into the output folder.\n * This enables users to add static files like `favicon.ico` or `serve.json`.\n *\n * The contents of this folder are completely universal since they refer to\n * static network requests which fall outside the scope of React Native's magic\n * platform resolution patterns.\n */\nasync function copyPublicFolderAsync(publicFolder: string, outputFolder: string) {\n  if (fs.existsSync(publicFolder)) {\n    await copyAsync(publicFolder, outputFolder);\n  }\n}\n"],"names":["exportAppAsync","Log","projectRoot","platforms","outputDir","clear","dev","dumpAssetmap","dumpSourcemap","minify","exp","setNodeEnv","require","load","projectConfig","getConfig","getPublicExpoManifestAsync","skipValidation","length","useServerRendering","includes","web","output","basePath","experiments","replace","trim","log","chalk","gray","startsWith","yellow","publicPath","path","resolve","env","EXPO_PUBLIC_FOLDER","outputPath","staticFolder","assetsPath","join","bundlesPath","Promise","all","map","ensureDirectoryAsync","copyPublicFolderAsync","bundles","createBundlesAsync","sourcemaps","bundleEntries","Object","entries","printBundleSizes","fromEntries","key","value","undefined","hashes","fileNames","writeBundlesAsync","unstable_exportStaticAsync","includeMaps","exportServer","cssLinks","exportCssAssetsAsync","html","createTemplateHtmlFromExpoConfigAsync","scripts","modifyHtml","getVirtualFaviconAssetsAsync","fs","promises","writeFile","persistMetroAssetsAsync","assets","platform","outputDirectory","keys","embeddedHashSet","exportAssetsAsync","writeAssetMapAsync","writeSourceMapsAsync","writeDebugHtmlAsync","writeMetadataJsonAsync","publicFolder","outputFolder","existsSync","copyAsync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/exportAssets.js b/node_modules/@expo/cli/build/src/export/exportAssets.js
index 10f74f2..2e87729 100644
--- a/node_modules/@expo/cli/build/src/export/exportAssets.js
+++ b/node_modules/@expo/cli/build/src/export/exportAssets.js
@@ -2,7 +2,8 @@
 Object.defineProperty(exports, "__esModule", {
     value: true
 });
-exports.resolveAssetBundlePatternsAsync = resolveAssetBundlePatternsAsync;
+exports.assetPatternsToBeBundled = assetPatternsToBeBundled;
+exports.resolveAssetPatternsToBeBundled = resolveAssetPatternsToBeBundled;
 exports.exportAssetsAsync = exportAssetsAsync;
 exports.exportCssAssetsAsync = exportCssAssetsAsync;
 var _fs = _interopRequireDefault(require("fs"));
@@ -39,17 +40,39 @@ function _interopRequireWildcard(obj) {
     }
 }
 const debug = require("debug")("expo:export:exportAssets");
-async function resolveAssetBundlePatternsAsync(projectRoot, exp, assets) {
-    var ref1;
-    if (!((ref1 = exp.assetBundlePatterns) == null ? void 0 : ref1.length) || !assets.length) {
-        delete exp.assetBundlePatterns;
-        return exp;
+function mapAssetHashToAssetString(asset, hash) {
+    return "asset_" + hash + ("type" in asset && asset.type ? "." + asset.type : "");
+}
+function assetPatternsToBeBundled(exp) {
+    var ref, ref1, ref2, ref3, ref4;
+    return (exp == null ? void 0 : (ref = exp.extra) == null ? void 0 : (ref1 = ref.updates) == null ? void 0 : (ref2 = ref1.assetPatternsToBeBundled) == null ? void 0 : ref2.length) ? exp == null ? void 0 : (ref3 = exp.extra) == null ? void 0 : (ref4 = ref3.updates) == null ? void 0 : ref4.assetPatternsToBeBundled : undefined;
+}
+/**
+ * Given an asset and a set of strings representing the assets to be bundled, returns true if
+ * the asset is part of the set to be bundled.
+ * @param asset Asset object
+ * @param bundledAssetsSet Set of strings
+ * @returns true if the asset should be bundled
+ */ function assetShouldBeIncludedInExport(asset, bundledAssetsSet) {
+    if (!bundledAssetsSet) {
+        return true;
     }
+    return asset.fileHashes.filter((hash)=>bundledAssetsSet.has(mapAssetHashToAssetString(asset, hash))
+    ).length > 0;
+}
+/**
+ * Computes a set of strings representing the assets to be bundled with an export, given an array of assets,
+ * and a set of patterns to match
+ * @param assets The asset array
+ * @param assetPatternsToBeBundled An array of strings with glob patterns to match
+ * @param projectRoot The project root
+ * @returns A set of asset strings
+ */ function setOfAssetsToBeBundled(assets, assetPatternsToBeBundled1, projectRoot) {
     // Convert asset patterns to a list of asset strings that match them.
     // Assets strings are formatted as `asset_<hash>.<type>` and represent
     // the name that the file will have in the app bundle. The `asset_` prefix is
     // needed because android doesn't support assets that start with numbers.
-    const fullPatterns = exp.assetBundlePatterns.map((p)=>_path.default.join(projectRoot, p)
+    const fullPatterns = assetPatternsToBeBundled1.map((p)=>_path.default.join(projectRoot, p)
     );
     logPatterns(fullPatterns);
     const allBundledAssets = assets.map((asset)=>{
@@ -57,18 +80,24 @@ async function resolveAssetBundlePatternsAsync(projectRoot, exp, assets) {
         if (shouldBundle) {
             var ref;
             debug(`${shouldBundle ? "Include" : "Exclude"} asset ${(ref = asset.files) == null ? void 0 : ref[0]}`);
-            return asset.fileHashes.map((hash)=>"asset_" + hash + ("type" in asset && asset.type ? "." + asset.type : "")
+            return asset.fileHashes.map((hash)=>mapAssetHashToAssetString(asset, hash)
             );
         }
         return [];
     }).flat();
     // The assets returned by the RN packager has duplicates so make sure we
     // only bundle each once.
-    (exp).bundledAssets = [
-        ...new Set(allBundledAssets)
-    ];
-    delete exp.assetBundlePatterns;
-    return exp;
+    return new Set(allBundledAssets);
+}
+function resolveAssetPatternsToBeBundled(projectRoot, exp, assets) {
+    if (!assetPatternsToBeBundled(exp)) {
+        return undefined;
+    }
+    var ref;
+    const bundledAssets = setOfAssetsToBeBundled(assets, (ref = assetPatternsToBeBundled(exp)) != null ? ref : [
+        "**/*"
+    ], projectRoot);
+    return bundledAssets;
 }
 function logPatterns(patterns) {
     // Only log the patterns in debug mode, if they aren't already defined in the app.json, then all files will be targeted.
@@ -87,20 +116,40 @@ async function exportAssetsAsync(projectRoot, { exp , outputDir , bundles  }) {
     const assets = (0, _array).uniqBy(Object.values(bundles).flatMap((bundle)=>bundle.assets
     ), (asset)=>asset.hash
     );
+    let bundledAssetsSet = undefined;
+    let filteredAssets = assets;
+    const embeddedHashSet = new Set();
     if ((ref = assets[0]) == null ? void 0 : ref.fileHashes) {
+        debug(`Assets = ${JSON.stringify(assets, null, 2)}`);
+        // Updates the manifest to reflect additional asset bundling + configs
+        // Get only asset strings for assets we will save
+        bundledAssetsSet = resolveAssetPatternsToBeBundled(projectRoot, exp, assets);
+        if (bundledAssetsSet) {
+            debug(`Bundled assets = ${JSON.stringify([
+                ...bundledAssetsSet
+            ], null, 2)}`);
+            // Filter asset objects to only ones that include assetPatternsToBeBundled matches
+            filteredAssets = assets.filter((asset)=>{
+                const shouldInclude = assetShouldBeIncludedInExport(asset, bundledAssetsSet);
+                if (!shouldInclude) {
+                    embeddedHashSet.add(asset.hash);
+                }
+                return shouldInclude;
+            });
+            debug(`Filtered assets count = ${filteredAssets.length}`);
+        }
         Log.log("Saving assets");
         await (0, _saveAssets).saveAssetsAsync(projectRoot, {
-            assets,
+            assets: filteredAssets,
             outputDir
         });
     }
     // Add google services file if it exists
     await (0, _resolveAssets).resolveGoogleServicesFile(projectRoot, exp);
-    // Updates the manifest to reflect additional asset bundling + configs
-    await resolveAssetBundlePatternsAsync(projectRoot, exp, assets);
     return {
         exp,
-        assets
+        assets,
+        embeddedHashSet
     };
 }
 async function exportCssAssetsAsync({ outputDir , bundles , basePath  }) {
diff --git a/node_modules/@expo/cli/build/src/export/exportAssets.js.map b/node_modules/@expo/cli/build/src/export/exportAssets.js.map
index b58e36f..9518194 100644
--- a/node_modules/@expo/cli/build/src/export/exportAssets.js.map
+++ b/node_modules/@expo/cli/build/src/export/exportAssets.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/exportAssets.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport fs from 'fs';\nimport minimatch from 'minimatch';\nimport path from 'path';\n\nimport { BundleOutput } from './fork-bundleAsync';\nimport { Asset, saveAssetsAsync } from './saveAssets';\nimport * as Log from '../log';\nimport { resolveGoogleServicesFile } from '../start/server/middleware/resolveAssets';\nimport { uniqBy } from '../utils/array';\n\nconst debug = require('debug')('expo:export:exportAssets') as typeof console.log;\n\n/**\n * Resolves the assetBundlePatterns from the manifest and returns a list of assets to bundle.\n *\n * @modifies {exp}\n */\nexport async function resolveAssetBundlePatternsAsync<T extends ExpoConfig>(\n  projectRoot: string,\n  exp: T,\n  assets: Asset[]\n): Promise<Omit<T, 'assetBundlePatterns'> & { bundledAssets?: string[] }> {\n  if (!exp.assetBundlePatterns?.length || !assets.length) {\n    delete exp.assetBundlePatterns;\n    return exp;\n  }\n  // Convert asset patterns to a list of asset strings that match them.\n  // Assets strings are formatted as `asset_<hash>.<type>` and represent\n  // the name that the file will have in the app bundle. The `asset_` prefix is\n  // needed because android doesn't support assets that start with numbers.\n\n  const fullPatterns: string[] = exp.assetBundlePatterns.map((p: string) =>\n    path.join(projectRoot, p)\n  );\n\n  logPatterns(fullPatterns);\n\n  const allBundledAssets = assets\n    .map((asset) => {\n      const shouldBundle = shouldBundleAsset(asset, fullPatterns);\n      if (shouldBundle) {\n        debug(`${shouldBundle ? 'Include' : 'Exclude'} asset ${asset.files?.[0]}`);\n        return asset.fileHashes.map(\n          (hash) => 'asset_' + hash + ('type' in asset && asset.type ? '.' + asset.type : '')\n        );\n      }\n      return [];\n    })\n    .flat();\n\n  // The assets returned by the RN packager has duplicates so make sure we\n  // only bundle each once.\n  (exp as any).bundledAssets = [...new Set(allBundledAssets)];\n  delete exp.assetBundlePatterns;\n\n  return exp;\n}\n\nfunction logPatterns(patterns: string[]) {\n  // Only log the patterns in debug mode, if they aren't already defined in the app.json, then all files will be targeted.\n  Log.log('\\nProcessing asset bundle patterns:');\n  patterns.forEach((p) => Log.log('- ' + p));\n}\n\nfunction shouldBundleAsset(asset: Asset, patterns: string[]) {\n  const file = asset.files?.[0];\n  return !!(\n    '__packager_asset' in asset &&\n    asset.__packager_asset &&\n    file &&\n    patterns.some((pattern) => minimatch(file, pattern))\n  );\n}\n\nexport async function exportAssetsAsync(\n  projectRoot: string,\n  {\n    exp,\n    outputDir,\n    bundles,\n  }: {\n    exp: ExpoConfig;\n    bundles: Partial<Record<ModPlatform, BundleOutput>>;\n    outputDir: string;\n  }\n) {\n  const assets: Asset[] = uniqBy(\n    Object.values(bundles).flatMap((bundle) => bundle!.assets),\n    (asset) => asset.hash\n  );\n\n  if (assets[0]?.fileHashes) {\n    Log.log('Saving assets');\n    await saveAssetsAsync(projectRoot, { assets, outputDir });\n  }\n\n  // Add google services file if it exists\n  await resolveGoogleServicesFile(projectRoot, exp);\n\n  // Updates the manifest to reflect additional asset bundling + configs\n  await resolveAssetBundlePatternsAsync(projectRoot, exp, assets);\n\n  return { exp, assets };\n}\n\nexport async function exportCssAssetsAsync({\n  outputDir,\n  bundles,\n  basePath,\n}: {\n  bundles: Partial<Record<ModPlatform, BundleOutput>>;\n  outputDir: string;\n  basePath: string;\n}) {\n  const assets = uniqBy(\n    Object.values(bundles).flatMap((bundle) => bundle!.css),\n    (asset) => asset.filename\n  );\n\n  const cssDirectory = assets[0]?.filename;\n  if (!cssDirectory) return [];\n\n  await fs.promises.mkdir(path.join(outputDir, path.dirname(cssDirectory)), { recursive: true });\n\n  await Promise.all(\n    assets.map((v) => fs.promises.writeFile(path.join(outputDir, v.filename), v.source))\n  );\n\n  return assets.map((v) => basePath + '/' + v.filename);\n}\n"],"names":["resolveAssetBundlePatternsAsync","exportAssetsAsync","exportCssAssetsAsync","Log","debug","require","projectRoot","exp","assets","assetBundlePatterns","length","fullPatterns","map","p","path","join","logPatterns","allBundledAssets","asset","shouldBundle","shouldBundleAsset","files","fileHashes","hash","type","flat","bundledAssets","Set","patterns","log","forEach","file","__packager_asset","some","pattern","minimatch","outputDir","bundles","uniqBy","Object","values","flatMap","bundle","saveAssetsAsync","resolveGoogleServicesFile","basePath","css","filename","cssDirectory","fs","promises","mkdir","dirname","recursive","Promise","all","v","writeFile","source"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/exportAssets.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport fs from 'fs';\nimport minimatch from 'minimatch';\nimport path from 'path';\n\nimport { BundleOutput } from './fork-bundleAsync';\nimport { Asset, saveAssetsAsync } from './saveAssets';\nimport * as Log from '../log';\nimport { resolveGoogleServicesFile } from '../start/server/middleware/resolveAssets';\nimport { uniqBy } from '../utils/array';\n\nconst debug = require('debug')('expo:export:exportAssets') as typeof console.log;\n\nfunction mapAssetHashToAssetString(asset: Asset, hash: string) {\n  return 'asset_' + hash + ('type' in asset && asset.type ? '.' + asset.type : '');\n}\n\nexport function assetPatternsToBeBundled(\n  exp: ExpoConfig & { extra?: { updates?: { assetPatternsToBeBundled?: string[] } } }\n): string[] | undefined {\n  return exp?.extra?.updates?.assetPatternsToBeBundled?.length\n    ? exp?.extra?.updates?.assetPatternsToBeBundled\n    : undefined;\n}\n\n/**\n * Given an asset and a set of strings representing the assets to be bundled, returns true if\n * the asset is part of the set to be bundled.\n * @param asset Asset object\n * @param bundledAssetsSet Set of strings\n * @returns true if the asset should be bundled\n */\nfunction assetShouldBeIncludedInExport(asset: Asset, bundledAssetsSet: Set<string> | undefined) {\n  if (!bundledAssetsSet) {\n    return true;\n  }\n  return (\n    asset.fileHashes.filter((hash) => bundledAssetsSet.has(mapAssetHashToAssetString(asset, hash)))\n      .length > 0\n  );\n}\n\n/**\n * Computes a set of strings representing the assets to be bundled with an export, given an array of assets,\n * and a set of patterns to match\n * @param assets The asset array\n * @param assetPatternsToBeBundled An array of strings with glob patterns to match\n * @param projectRoot The project root\n * @returns A set of asset strings\n */\nfunction setOfAssetsToBeBundled(\n  assets: Asset[],\n  assetPatternsToBeBundled: string[],\n  projectRoot: string\n): Set<string> | undefined {\n  // Convert asset patterns to a list of asset strings that match them.\n  // Assets strings are formatted as `asset_<hash>.<type>` and represent\n  // the name that the file will have in the app bundle. The `asset_` prefix is\n  // needed because android doesn't support assets that start with numbers.\n\n  const fullPatterns: string[] = assetPatternsToBeBundled.map((p: string) =>\n    path.join(projectRoot, p)\n  );\n\n  logPatterns(fullPatterns);\n\n  const allBundledAssets = assets\n    .map((asset) => {\n      const shouldBundle = shouldBundleAsset(asset, fullPatterns);\n      if (shouldBundle) {\n        debug(`${shouldBundle ? 'Include' : 'Exclude'} asset ${asset.files?.[0]}`);\n        return asset.fileHashes.map((hash) => mapAssetHashToAssetString(asset, hash));\n      }\n      return [];\n    })\n    .flat();\n\n  // The assets returned by the RN packager has duplicates so make sure we\n  // only bundle each once.\n  return new Set(allBundledAssets);\n}\n\n/**\n * Resolves the assetBundlePatterns from the manifest and returns the set of assets to bundle.\n *\n * @modifies {exp}\n */\nexport function resolveAssetPatternsToBeBundled<T extends ExpoConfig>(\n  projectRoot: string,\n  exp: T,\n  assets: Asset[]\n): Set<string> | undefined {\n  if (!assetPatternsToBeBundled(exp)) {\n    return undefined;\n  }\n  const bundledAssets = setOfAssetsToBeBundled(\n    assets,\n    assetPatternsToBeBundled(exp) ?? ['**/*'],\n    projectRoot\n  );\n  return bundledAssets;\n}\n\nfunction logPatterns(patterns: string[]) {\n  // Only log the patterns in debug mode, if they aren't already defined in the app.json, then all files will be targeted.\n  Log.log('\\nProcessing asset bundle patterns:');\n  patterns.forEach((p) => Log.log('- ' + p));\n}\n\nfunction shouldBundleAsset(asset: Asset, patterns: string[]) {\n  const file = asset.files?.[0];\n  return !!(\n    '__packager_asset' in asset &&\n    asset.__packager_asset &&\n    file &&\n    patterns.some((pattern) => minimatch(file, pattern))\n  );\n}\n\nexport async function exportAssetsAsync(\n  projectRoot: string,\n  {\n    exp,\n    outputDir,\n    bundles,\n  }: {\n    exp: ExpoConfig;\n    bundles: Partial<Record<ModPlatform, BundleOutput>>;\n    outputDir: string;\n  }\n) {\n  const assets: Asset[] = uniqBy(\n    Object.values(bundles).flatMap((bundle) => bundle!.assets),\n    (asset) => asset.hash\n  );\n\n  let bundledAssetsSet: Set<string> | undefined = undefined;\n  let filteredAssets = assets;\n  const embeddedHashSet: Set<string> = new Set();\n\n  if (assets[0]?.fileHashes) {\n    debug(`Assets = ${JSON.stringify(assets, null, 2)}`);\n    // Updates the manifest to reflect additional asset bundling + configs\n    // Get only asset strings for assets we will save\n    bundledAssetsSet = resolveAssetPatternsToBeBundled(projectRoot, exp, assets);\n    if (bundledAssetsSet) {\n      debug(`Bundled assets = ${JSON.stringify([...bundledAssetsSet], null, 2)}`);\n      // Filter asset objects to only ones that include assetPatternsToBeBundled matches\n      filteredAssets = assets.filter((asset) => {\n        const shouldInclude = assetShouldBeIncludedInExport(asset, bundledAssetsSet);\n        if (!shouldInclude) {\n          embeddedHashSet.add(asset.hash);\n        }\n        return shouldInclude;\n      });\n      debug(`Filtered assets count = ${filteredAssets.length}`);\n    }\n    Log.log('Saving assets');\n    await saveAssetsAsync(projectRoot, { assets: filteredAssets, outputDir });\n  }\n\n  // Add google services file if it exists\n  await resolveGoogleServicesFile(projectRoot, exp);\n\n  return { exp, assets, embeddedHashSet };\n}\n\nexport async function exportCssAssetsAsync({\n  outputDir,\n  bundles,\n  basePath,\n}: {\n  bundles: Partial<Record<ModPlatform, BundleOutput>>;\n  outputDir: string;\n  basePath: string;\n}) {\n  const assets = uniqBy(\n    Object.values(bundles).flatMap((bundle) => bundle!.css),\n    (asset) => asset.filename\n  );\n\n  const cssDirectory = assets[0]?.filename;\n  if (!cssDirectory) return [];\n\n  await fs.promises.mkdir(path.join(outputDir, path.dirname(cssDirectory)), { recursive: true });\n\n  await Promise.all(\n    assets.map((v) => fs.promises.writeFile(path.join(outputDir, v.filename), v.source))\n  );\n\n  return assets.map((v) => basePath + '/' + v.filename);\n}\n"],"names":["assetPatternsToBeBundled","resolveAssetPatternsToBeBundled","exportAssetsAsync","exportCssAssetsAsync","Log","debug","require","mapAssetHashToAssetString","asset","hash","type","exp","extra","updates","length","undefined","assetShouldBeIncludedInExport","bundledAssetsSet","fileHashes","filter","has","setOfAssetsToBeBundled","assets","projectRoot","fullPatterns","map","p","path","join","logPatterns","allBundledAssets","shouldBundle","shouldBundleAsset","files","flat","Set","bundledAssets","patterns","log","forEach","file","__packager_asset","some","pattern","minimatch","outputDir","bundles","uniqBy","Object","values","flatMap","bundle","filteredAssets","embeddedHashSet","JSON","stringify","shouldInclude","add","saveAssetsAsync","resolveGoogleServicesFile","basePath","css","filename","cssDirectory","fs","promises","mkdir","dirname","recursive","Promise","all","v","writeFile","source"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/exportHermes.js b/node_modules/@expo/cli/build/src/export/exportHermes.js
index 36be286..13a5b39 100644
--- a/node_modules/@expo/cli/build/src/export/exportHermes.js
+++ b/node_modules/@expo/cli/build/src/export/exportHermes.js
@@ -14,10 +14,11 @@ exports.isHermesBytecodeBundleAsync = isHermesBytecodeBundleAsync;
 exports.getHermesBytecodeBundleVersionAsync = getHermesBytecodeBundleVersionAsync;
 var _spawnAsync = _interopRequireDefault(require("@expo/spawn-async"));
 var _fsExtra = _interopRequireDefault(require("fs-extra"));
+var _metroSourceMap = require("metro-source-map");
 var _os = _interopRequireDefault(require("os"));
 var _path = _interopRequireDefault(require("path"));
 var _process = _interopRequireDefault(require("process"));
-var _resolveFromProject = require("../start/server/metro/resolveFromProject");
+var _resolveFrom = _interopRequireDefault(require("resolve-from"));
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
         default: obj
@@ -37,7 +38,7 @@ function importHermesCommandFromProject(projectRoot) {
     ];
     for (const location of hermescLocations){
         try {
-            return (0, _resolveFromProject).resolveFromProject(projectRoot, location);
+            return (0, _resolveFrom).default(projectRoot, location);
         } catch  {}
     }
     throw new Error("Cannot find the hermesc executable.");
@@ -116,10 +117,9 @@ async function buildHermesBundleAsync(projectRoot, { code , map , minify =false
     }
 }
 async function createHermesSourcemapAsync(projectRoot, sourcemap, hermesMapFile) {
-    const composeSourceMaps = (0, _resolveFromProject).importMetroSourceMapComposeSourceMapsFromProject(projectRoot);
     const bundlerSourcemap = JSON.parse(sourcemap);
     const hermesSourcemap = await _fsExtra.default.readJSON(hermesMapFile);
-    return JSON.stringify(composeSourceMaps([
+    return JSON.stringify((0, _metroSourceMap).composeSourceMaps([
         bundlerSourcemap,
         hermesSourcemap
     ]));
diff --git a/node_modules/@expo/cli/build/src/export/exportHermes.js.map b/node_modules/@expo/cli/build/src/export/exportHermes.js.map
index 597ef46..393f072 100644
--- a/node_modules/@expo/cli/build/src/export/exportHermes.js.map
+++ b/node_modules/@expo/cli/build/src/export/exportHermes.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/exportHermes.ts"],"sourcesContent":["import type { ExpoConfig, Platform } from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport process from 'process';\n\nimport {\n  importMetroSourceMapComposeSourceMapsFromProject,\n  resolveFromProject,\n} from '../start/server/metro/resolveFromProject';\n\nexport function importHermesCommandFromProject(projectRoot: string): string {\n  const platformExecutable = getHermesCommandPlatform();\n  const hermescLocations = [\n    // Override hermesc dir by environment variables\n    process.env['REACT_NATIVE_OVERRIDE_HERMES_DIR']\n      ? `${process.env['REACT_NATIVE_OVERRIDE_HERMES_DIR']}/build/bin/hermesc`\n      : '',\n\n    // Building hermes from source\n    'react-native/ReactAndroid/hermes-engine/build/hermes/bin/hermesc',\n\n    // Prebuilt hermesc in official react-native 0.69+\n    `react-native/sdks/hermesc/${platformExecutable}`,\n\n    // Legacy hermes-engine package\n    `hermes-engine/${platformExecutable}`,\n  ];\n\n  for (const location of hermescLocations) {\n    try {\n      return resolveFromProject(projectRoot, location);\n    } catch {}\n  }\n  throw new Error('Cannot find the hermesc executable.');\n}\n\nfunction getHermesCommandPlatform(): string {\n  switch (os.platform()) {\n    case 'darwin':\n      return 'osx-bin/hermesc';\n    case 'linux':\n      return 'linux64-bin/hermesc';\n    case 'win32':\n      return 'win64-bin/hermesc.exe';\n    default:\n      throw new Error(`Unsupported host platform for Hermes compiler: ${os.platform()}`);\n  }\n}\n\nexport function isEnableHermesManaged(\n  expoConfig: Partial<Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>>,\n  platform: Platform\n): boolean {\n  switch (platform) {\n    case 'android': {\n      return (expoConfig.android?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    case 'ios': {\n      return (expoConfig.ios?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    default:\n      return false;\n  }\n}\n\ninterface HermesBundleOutput {\n  hbc: Uint8Array;\n  sourcemap: string | null;\n}\nexport async function buildHermesBundleAsync(\n  projectRoot: string,\n  {\n    code,\n    map,\n    minify = false,\n  }: {\n    code: string;\n    map: string | null;\n    minify?: boolean;\n  }\n): Promise<HermesBundleOutput> {\n  const tempDir = path.join(os.tmpdir(), `expo-bundler-${process.pid}`);\n  await fs.ensureDir(tempDir);\n  try {\n    const tempBundleFile = path.join(tempDir, 'index.bundle');\n    await fs.writeFile(tempBundleFile, code);\n\n    if (map) {\n      const tempSourcemapFile = path.join(tempDir, 'index.bundle.map');\n      await fs.writeFile(tempSourcemapFile, map);\n    }\n\n    const tempHbcFile = path.join(tempDir, 'index.hbc');\n    const hermesCommand = importHermesCommandFromProject(projectRoot);\n    const args = ['-emit-binary', '-out', tempHbcFile, tempBundleFile];\n    if (minify) {\n      args.push('-O');\n    }\n    if (map) {\n      args.push('-output-source-map');\n    }\n    await spawnAsync(hermesCommand, args);\n\n    let hbc: Buffer;\n    let sourcemap: string | null = null;\n\n    if (!map) {\n      hbc = await fs.readFile(tempHbcFile);\n    } else {\n      [hbc, sourcemap] = await Promise.all([\n        fs.readFile(tempHbcFile),\n        createHermesSourcemapAsync(projectRoot, map, `${tempHbcFile}.map`),\n      ]);\n    }\n    return {\n      hbc,\n      sourcemap,\n    };\n  } finally {\n    await fs.remove(tempDir);\n  }\n}\n\nexport async function createHermesSourcemapAsync(\n  projectRoot: string,\n  sourcemap: string,\n  hermesMapFile: string\n): Promise<string> {\n  const composeSourceMaps = importMetroSourceMapComposeSourceMapsFromProject(projectRoot);\n  const bundlerSourcemap = JSON.parse(sourcemap);\n  const hermesSourcemap = await fs.readJSON(hermesMapFile);\n  return JSON.stringify(composeSourceMaps([bundlerSourcemap, hermesSourcemap]));\n}\n\nexport function parseGradleProperties(content: string): Record<string, string> {\n  const result: Record<string, string> = {};\n  for (let line of content.split('\\n')) {\n    line = line.trim();\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n\n    const sepIndex = line.indexOf('=');\n    const key = line.substr(0, sepIndex);\n    const value = line.substr(sepIndex + 1);\n    result[key] = value;\n  }\n  return result;\n}\n\nexport async function maybeThrowFromInconsistentEngineAsync(\n  projectRoot: string,\n  configFilePath: string,\n  platform: string,\n  isHermesManaged: boolean\n): Promise<void> {\n  const configFileName = path.basename(configFilePath);\n  if (\n    platform === 'android' &&\n    (await maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged))\n  ) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and Android native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In Android native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'gradle.properties')}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'app', 'build.gradle')}\\n` +\n        'Learn more: https://expo.fyi/hermes-android-config'\n    );\n  }\n\n  if (platform === 'ios' && (await maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged))) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and iOS native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In iOS native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile')}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile.properties.json')}\\n` +\n        'Learn more: https://expo.fyi/hermes-ios-config'\n    );\n  }\n}\n\nexport async function maybeInconsistentEngineAndroidAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check android native project if by chance to be consistent between app config\n\n  // Check gradle.properties from prebuild template\n  const gradlePropertiesPath = path.join(projectRoot, 'android', 'gradle.properties');\n  if (fs.existsSync(gradlePropertiesPath)) {\n    const props = parseGradleProperties(await fs.readFile(gradlePropertiesPath, 'utf8'));\n    const isHermesBare = props['hermesEnabled'] === 'true';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport async function maybeInconsistentEngineIosAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check ios native project if by chance to be consistent between app config\n\n  // Check ios/Podfile for \":hermes_enabled => true\"\n  const podfilePath = path.join(projectRoot, 'ios', 'Podfile');\n  if (fs.existsSync(podfilePath)) {\n    const content = await fs.readFile(podfilePath, 'utf8');\n    const isPropsReference =\n      content.search(\n        /^\\s*:hermes_enabled\\s*=>\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*nil\\s*\\|\\|\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*'hermes',?/m\n      ) >= 0;\n    const isHermesBare = content.search(/^\\s*:hermes_enabled\\s*=>\\s*true,?\\s+/m) >= 0;\n    if (!isPropsReference && isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  // Check Podfile.properties.json from prebuild template\n  const podfilePropertiesPath = path.join(projectRoot, 'ios', 'Podfile.properties.json');\n  if (fs.existsSync(podfilePropertiesPath)) {\n    const props = await parsePodfilePropertiesAsync(podfilePropertiesPath);\n    const isHermesBare = props['expo.jsEngine'] === 'hermes';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// https://github.com/facebook/hermes/blob/release-v0.5/include/hermes/BCGen/HBC/BytecodeFileFormat.h#L24-L25\nconst HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\n\nexport async function isHermesBytecodeBundleAsync(file: string): Promise<boolean> {\n  const header = await readHermesHeaderAsync(file);\n  return header.slice(0, 8).toString('hex') === HERMES_MAGIC_HEADER;\n}\n\nexport async function getHermesBytecodeBundleVersionAsync(file: string): Promise<number> {\n  const header = await readHermesHeaderAsync(file);\n  if (header.slice(0, 8).toString('hex') !== HERMES_MAGIC_HEADER) {\n    throw new Error('Invalid hermes bundle file');\n  }\n  return header.readUInt32LE(8);\n}\n\nasync function readHermesHeaderAsync(file: string): Promise<Buffer> {\n  const fd = await fs.open(file, 'r');\n  const buffer = Buffer.alloc(12);\n  await fs.read(fd, buffer, 0, 12, null);\n  await fs.close(fd);\n  return buffer;\n}\n\nasync function parsePodfilePropertiesAsync(\n  podfilePropertiesPath: string\n): Promise<Record<string, string>> {\n  try {\n    return JSON.parse(await fs.readFile(podfilePropertiesPath, 'utf8'));\n  } catch {\n    return {};\n  }\n}\n"],"names":["importHermesCommandFromProject","isEnableHermesManaged","buildHermesBundleAsync","createHermesSourcemapAsync","parseGradleProperties","maybeThrowFromInconsistentEngineAsync","maybeInconsistentEngineAndroidAsync","maybeInconsistentEngineIosAsync","isHermesBytecodeBundleAsync","getHermesBytecodeBundleVersionAsync","projectRoot","platformExecutable","getHermesCommandPlatform","hermescLocations","process","env","location","resolveFromProject","Error","os","platform","expoConfig","android","jsEngine","ios","code","map","minify","tempDir","path","join","tmpdir","pid","fs","ensureDir","tempBundleFile","writeFile","tempSourcemapFile","tempHbcFile","hermesCommand","args","push","spawnAsync","hbc","sourcemap","readFile","Promise","all","remove","hermesMapFile","composeSourceMaps","importMetroSourceMapComposeSourceMapsFromProject","bundlerSourcemap","JSON","parse","hermesSourcemap","readJSON","stringify","content","result","line","split","trim","startsWith","sepIndex","indexOf","key","substr","value","configFilePath","isHermesManaged","configFileName","basename","gradlePropertiesPath","existsSync","props","isHermesBare","podfilePath","isPropsReference","search","podfilePropertiesPath","parsePodfilePropertiesAsync","HERMES_MAGIC_HEADER","file","header","readHermesHeaderAsync","slice","toString","readUInt32LE","fd","open","buffer","Buffer","alloc","read","close"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/exportHermes.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport { composeSourceMaps } from 'metro-source-map';\nimport os from 'os';\nimport path from 'path';\nimport process from 'process';\nimport resolveFrom from 'resolve-from';\n\nexport function importHermesCommandFromProject(projectRoot: string): string {\n  const platformExecutable = getHermesCommandPlatform();\n  const hermescLocations = [\n    // Override hermesc dir by environment variables\n    process.env['REACT_NATIVE_OVERRIDE_HERMES_DIR']\n      ? `${process.env['REACT_NATIVE_OVERRIDE_HERMES_DIR']}/build/bin/hermesc`\n      : '',\n\n    // Building hermes from source\n    'react-native/ReactAndroid/hermes-engine/build/hermes/bin/hermesc',\n\n    // Prebuilt hermesc in official react-native 0.69+\n    `react-native/sdks/hermesc/${platformExecutable}`,\n\n    // Legacy hermes-engine package\n    `hermes-engine/${platformExecutable}`,\n  ];\n\n  for (const location of hermescLocations) {\n    try {\n      return resolveFrom(projectRoot, location);\n    } catch {}\n  }\n  throw new Error('Cannot find the hermesc executable.');\n}\n\nfunction getHermesCommandPlatform(): string {\n  switch (os.platform()) {\n    case 'darwin':\n      return 'osx-bin/hermesc';\n    case 'linux':\n      return 'linux64-bin/hermesc';\n    case 'win32':\n      return 'win64-bin/hermesc.exe';\n    default:\n      throw new Error(`Unsupported host platform for Hermes compiler: ${os.platform()}`);\n  }\n}\n\nexport function isEnableHermesManaged(\n  expoConfig: Partial<Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>>,\n  platform: string\n): boolean {\n  switch (platform) {\n    case 'android': {\n      return (expoConfig.android?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    case 'ios': {\n      return (expoConfig.ios?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    default:\n      return false;\n  }\n}\n\ninterface HermesBundleOutput {\n  hbc: Uint8Array;\n  sourcemap: string | null;\n}\nexport async function buildHermesBundleAsync(\n  projectRoot: string,\n  {\n    code,\n    map,\n    minify = false,\n  }: {\n    code: string;\n    map: string | null;\n    minify?: boolean;\n  }\n): Promise<HermesBundleOutput> {\n  const tempDir = path.join(os.tmpdir(), `expo-bundler-${process.pid}`);\n  await fs.ensureDir(tempDir);\n  try {\n    const tempBundleFile = path.join(tempDir, 'index.bundle');\n    await fs.writeFile(tempBundleFile, code);\n\n    if (map) {\n      const tempSourcemapFile = path.join(tempDir, 'index.bundle.map');\n      await fs.writeFile(tempSourcemapFile, map);\n    }\n\n    const tempHbcFile = path.join(tempDir, 'index.hbc');\n    const hermesCommand = importHermesCommandFromProject(projectRoot);\n    const args = ['-emit-binary', '-out', tempHbcFile, tempBundleFile];\n    if (minify) {\n      args.push('-O');\n    }\n    if (map) {\n      args.push('-output-source-map');\n    }\n    await spawnAsync(hermesCommand, args);\n\n    let hbc: Buffer;\n    let sourcemap: string | null = null;\n\n    if (!map) {\n      hbc = await fs.readFile(tempHbcFile);\n    } else {\n      [hbc, sourcemap] = await Promise.all([\n        fs.readFile(tempHbcFile),\n        createHermesSourcemapAsync(projectRoot, map, `${tempHbcFile}.map`),\n      ]);\n    }\n    return {\n      hbc,\n      sourcemap,\n    };\n  } finally {\n    await fs.remove(tempDir);\n  }\n}\n\nexport async function createHermesSourcemapAsync(\n  projectRoot: string,\n  sourcemap: string,\n  hermesMapFile: string\n): Promise<string> {\n  const bundlerSourcemap = JSON.parse(sourcemap);\n  const hermesSourcemap = await fs.readJSON(hermesMapFile);\n  return JSON.stringify(composeSourceMaps([bundlerSourcemap, hermesSourcemap]));\n}\n\nexport function parseGradleProperties(content: string): Record<string, string> {\n  const result: Record<string, string> = {};\n  for (let line of content.split('\\n')) {\n    line = line.trim();\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n\n    const sepIndex = line.indexOf('=');\n    const key = line.substr(0, sepIndex);\n    const value = line.substr(sepIndex + 1);\n    result[key] = value;\n  }\n  return result;\n}\n\nexport async function maybeThrowFromInconsistentEngineAsync(\n  projectRoot: string,\n  configFilePath: string,\n  platform: string,\n  isHermesManaged: boolean\n): Promise<void> {\n  const configFileName = path.basename(configFilePath);\n  if (\n    platform === 'android' &&\n    (await maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged))\n  ) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and Android native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In Android native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'gradle.properties')}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'app', 'build.gradle')}\\n` +\n        'Learn more: https://expo.fyi/hermes-android-config'\n    );\n  }\n\n  if (platform === 'ios' && (await maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged))) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and iOS native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In iOS native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile')}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile.properties.json')}\\n` +\n        'Learn more: https://expo.fyi/hermes-ios-config'\n    );\n  }\n}\n\nexport async function maybeInconsistentEngineAndroidAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check android native project if by chance to be consistent between app config\n\n  // Check gradle.properties from prebuild template\n  const gradlePropertiesPath = path.join(projectRoot, 'android', 'gradle.properties');\n  if (fs.existsSync(gradlePropertiesPath)) {\n    const props = parseGradleProperties(await fs.readFile(gradlePropertiesPath, 'utf8'));\n    const isHermesBare = props['hermesEnabled'] === 'true';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport async function maybeInconsistentEngineIosAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check ios native project if by chance to be consistent between app config\n\n  // Check ios/Podfile for \":hermes_enabled => true\"\n  const podfilePath = path.join(projectRoot, 'ios', 'Podfile');\n  if (fs.existsSync(podfilePath)) {\n    const content = await fs.readFile(podfilePath, 'utf8');\n    const isPropsReference =\n      content.search(\n        /^\\s*:hermes_enabled\\s*=>\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*nil\\s*\\|\\|\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*'hermes',?/m\n      ) >= 0;\n    const isHermesBare = content.search(/^\\s*:hermes_enabled\\s*=>\\s*true,?\\s+/m) >= 0;\n    if (!isPropsReference && isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  // Check Podfile.properties.json from prebuild template\n  const podfilePropertiesPath = path.join(projectRoot, 'ios', 'Podfile.properties.json');\n  if (fs.existsSync(podfilePropertiesPath)) {\n    const props = await parsePodfilePropertiesAsync(podfilePropertiesPath);\n    const isHermesBare = props['expo.jsEngine'] === 'hermes';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// https://github.com/facebook/hermes/blob/release-v0.5/include/hermes/BCGen/HBC/BytecodeFileFormat.h#L24-L25\nconst HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\n\nexport async function isHermesBytecodeBundleAsync(file: string): Promise<boolean> {\n  const header = await readHermesHeaderAsync(file);\n  return header.slice(0, 8).toString('hex') === HERMES_MAGIC_HEADER;\n}\n\nexport async function getHermesBytecodeBundleVersionAsync(file: string): Promise<number> {\n  const header = await readHermesHeaderAsync(file);\n  if (header.slice(0, 8).toString('hex') !== HERMES_MAGIC_HEADER) {\n    throw new Error('Invalid hermes bundle file');\n  }\n  return header.readUInt32LE(8);\n}\n\nasync function readHermesHeaderAsync(file: string): Promise<Buffer> {\n  const fd = await fs.open(file, 'r');\n  const buffer = Buffer.alloc(12);\n  await fs.read(fd, buffer, 0, 12, null);\n  await fs.close(fd);\n  return buffer;\n}\n\nasync function parsePodfilePropertiesAsync(\n  podfilePropertiesPath: string\n): Promise<Record<string, string>> {\n  try {\n    return JSON.parse(await fs.readFile(podfilePropertiesPath, 'utf8'));\n  } catch {\n    return {};\n  }\n}\n"],"names":["importHermesCommandFromProject","isEnableHermesManaged","buildHermesBundleAsync","createHermesSourcemapAsync","parseGradleProperties","maybeThrowFromInconsistentEngineAsync","maybeInconsistentEngineAndroidAsync","maybeInconsistentEngineIosAsync","isHermesBytecodeBundleAsync","getHermesBytecodeBundleVersionAsync","projectRoot","platformExecutable","getHermesCommandPlatform","hermescLocations","process","env","location","resolveFrom","Error","os","platform","expoConfig","android","jsEngine","ios","code","map","minify","tempDir","path","join","tmpdir","pid","fs","ensureDir","tempBundleFile","writeFile","tempSourcemapFile","tempHbcFile","hermesCommand","args","push","spawnAsync","hbc","sourcemap","readFile","Promise","all","remove","hermesMapFile","bundlerSourcemap","JSON","parse","hermesSourcemap","readJSON","stringify","composeSourceMaps","content","result","line","split","trim","startsWith","sepIndex","indexOf","key","substr","value","configFilePath","isHermesManaged","configFileName","basename","gradlePropertiesPath","existsSync","props","isHermesBare","podfilePath","isPropsReference","search","podfilePropertiesPath","parsePodfilePropertiesAsync","HERMES_MAGIC_HEADER","file","header","readHermesHeaderAsync","slice","toString","readUInt32LE","fd","open","buffer","Buffer","alloc","read","close"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js
index 67cbd52..53e13dc 100644
--- a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js
+++ b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js
@@ -88,7 +88,7 @@ async function exportFromServerAsync(projectRoot, devServerManager, { outputDir
     });
     const devServer = devServerManager.getDefaultDevServer();
     (0, _assert).default(devServer instanceof _metroBundlerDevServer.MetroBundlerDevServer);
-    const [resources, { manifest , renderAsync  }] = await Promise.all([
+    const [resources, { manifest , serverManifest , renderAsync  }] = await Promise.all([
         devServer.getStaticResourcesAsync({
             mode: "production",
             minify,
@@ -130,7 +130,8 @@ async function exportFromServerAsync(projectRoot, devServerManager, { outputDir
         const apiRoutes = await exportApiRoutesAsync({
             outputDir,
             server: devServer,
-            appDir
+            appDir,
+            manifest: serverManifest
         });
         // Add the api routes to the files to export.
         for (const [route, contents] of apiRoutes){
@@ -259,7 +260,7 @@ function getPathVariations(routePath) {
     generateVariations(segments1);
     return Array.from(variations);
 }
-async function exportApiRoutesAsync({ outputDir , server , appDir  }) {
+async function exportApiRoutesAsync({ outputDir , server , appDir , ...props }) {
     const functionsDir = "_expo/functions";
     const funcDir = _path.default.join(outputDir, functionsDir);
     _fs.default.mkdirSync(_path.default.join(funcDir), {
@@ -268,7 +269,8 @@ async function exportApiRoutesAsync({ outputDir , server , appDir  }) {
     const { manifest , files  } = await server.exportExpoRouterApiRoutesAsync({
         mode: "production",
         appDir,
-        outputDir: functionsDir
+        outputDir: functionsDir,
+        prerenderManifest: props.manifest
     });
     _log.Log.log(_chalk.default.bold`Exporting ${files.size} API Routes.`);
     files.set("_expo/routes.json", JSON.stringify(manifest, null, 2));
diff --git a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map
index 4bd8bb4..35e56a9 100644
--- a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map
+++ b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport prettyBytes from 'pretty-bytes';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { Log } from '../log';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport {\n  getApiRoutesForDirectory,\n  getRouterDirectoryWithManifest,\n} from '../start/server/metro/router';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = {\n  outputDir: string;\n  minify: boolean;\n  exportServer: boolean;\n  basePath: string;\n  includeMaps: boolean;\n};\n\n/** @private */\nexport async function unstable_exportStaticAsync(projectRoot: string, options: Options) {\n  Log.warn(\n    `Experimental static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  // TODO: Prevent starting the watcher.\n  const devServerManager = new DevServerManager(projectRoot, {\n    minify: options.minify,\n    mode: 'production',\n    location: {},\n  });\n  await devServerManager.startAsync([\n    {\n      type: 'metro',\n      options: {\n        location: {},\n        isExporting: true,\n      },\n    },\n  ]);\n\n  try {\n    await exportFromServerAsync(projectRoot, devServerManager, options);\n  } finally {\n    await devServerManager.stopAsync();\n  }\n}\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n    includeGroupVariations,\n  }: {\n    manifest: any;\n    renderAsync: (pathname: string) => Promise<string>;\n    includeGroupVariations?: boolean;\n  }\n): Promise<Map<string, string>> {\n  // name : contents\n  const files = new Map<string, string>();\n\n  await Promise.all(\n    getHtmlFiles({ manifest, includeGroupVariations }).map(async (outputPath) => {\n      const pathname = outputPath.replace(/(?:index)?\\.html$/, '');\n      try {\n        files.set(outputPath, '');\n        const data = await renderAsync(pathname);\n        files.set(outputPath, data);\n      } catch (e: any) {\n        await logMetroErrorAsync({ error: e, projectRoot });\n        throw new Error('Failed to statically export route: ' + pathname);\n      }\n    })\n  );\n\n  return files;\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServerManager: DevServerManager,\n  { outputDir, basePath, exportServer, minify, includeMaps }: Options\n): Promise<void> {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  const appDir = getRouterDirectoryWithManifest(projectRoot, exp);\n\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, { outputDir, basePath });\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const [resources, { manifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({ mode: 'production', minify, includeMaps }),\n    devServer.getStaticRenderFunctionAsync({\n      mode: 'production',\n      minify,\n    }),\n  ]);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  const files = await getFilesToExportFromServerAsync(projectRoot, {\n    manifest,\n    // Servers can handle group routes automatically and therefore\n    // don't require the build-time generation of every possible group\n    // variation.\n    includeGroupVariations: !exportServer,\n    async renderAsync(pathname: string) {\n      const template = await renderAsync(pathname);\n      let html = await devServer.composeResourcesWithHtml({\n        mode: 'production',\n        resources,\n        template,\n        basePath,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  resources.forEach((resource) => {\n    files.set(\n      resource.filename,\n      modifyBundlesWithSourceMaps(resource.filename, resource.source, includeMaps)\n    );\n  });\n\n  if (exportServer) {\n    const apiRoutes = await exportApiRoutesAsync({ outputDir, server: devServer, appDir });\n\n    // Add the api routes to the files to export.\n    for (const [route, contents] of apiRoutes) {\n      files.set(route, contents);\n    }\n  } else {\n    warnPossibleInvalidExportType(appDir);\n  }\n\n  fs.mkdirSync(path.join(outputDir), { recursive: true });\n\n  Log.log('');\n  Log.log(chalk.bold`Exporting ${files.size} files:`);\n  await Promise.all(\n    [...files.entries()]\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(async ([file, contents]) => {\n        const length = Buffer.byteLength(contents, 'utf8');\n        Log.log(file, chalk.gray`(${prettyBytes(length)})`);\n        const outputPath = path.join(outputDir, file);\n        await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n        await fs.promises.writeFile(outputPath, contents);\n      })\n  );\n  Log.log('');\n}\n\nexport function modifyBundlesWithSourceMaps(\n  filename: string,\n  source: string,\n  includeMaps: boolean\n): string {\n  if (filename.endsWith('.js')) {\n    // If the bundle ends with source map URLs then update them to point to the correct location.\n\n    // TODO: basePath support\n    const normalizedFilename = '/' + filename.replace(/^\\/+/, '');\n    //# sourceMappingURL=//localhost:8085/index.map?platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    //# sourceURL=http://localhost:8085/index.bundle//&platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    return source.replace(/^\\/\\/# (sourceMappingURL|sourceURL)=.*$/gm, (...props) => {\n      if (includeMaps) {\n        if (props[1] === 'sourceURL') {\n          return `//# ${props[1]}=` + normalizedFilename;\n        } else if (props[1] === 'sourceMappingURL') {\n          const mapName = normalizedFilename + '.map';\n          return `//# ${props[1]}=` + mapName;\n        }\n      }\n      return '';\n    });\n  }\n  return source;\n}\n\nexport function getHtmlFiles({\n  manifest,\n  includeGroupVariations,\n}: {\n  manifest: any;\n  includeGroupVariations?: boolean;\n}): string[] {\n  const htmlFiles = new Set<string>();\n\n  function traverseScreens(screens: string | { screens: any; path: string }, basePath = '') {\n    for (const value of Object.values(screens)) {\n      if (typeof value === 'string') {\n        let filePath = basePath + value;\n        if (value === '') {\n          filePath =\n            basePath === ''\n              ? 'index'\n              : basePath.endsWith('/')\n              ? basePath + 'index'\n              : basePath.slice(0, -1);\n        }\n        if (includeGroupVariations) {\n          // TODO: Dedupe requests for alias routes.\n          addOptionalGroups(filePath);\n        } else {\n          htmlFiles.add(filePath);\n        }\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = basePath + value.path + '/';\n        traverseScreens(value.screens, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add(variation);\n    }\n  }\n\n  traverseScreens(manifest.screens);\n\n  return Array.from(htmlFiles).map((value) => {\n    const parts = value.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part === '*not-found') {\n        return `+not-found`;\n      } else if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    return partsWithGroups.join('/') + '.html';\n  });\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>();\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], current = ''): void {\n    if (segments.length === 0) {\n      if (current) variations.add(current);\n      return;\n    }\n\n    const [head, ...rest] = segments;\n\n    if (head.startsWith('(foo,foo')) {\n    }\n\n    if (matchGroupName(head)) {\n      const groups = head.slice(1, -1).split(',');\n\n      if (groups.length > 1) {\n        for (const group of groups) {\n          // If there are multiple groups, recurse on each group.\n          generateVariations([`(${group.trim()})`, ...rest], current);\n        }\n        return;\n      } else {\n        // Start a fork where this group is included\n        generateVariations(rest, current ? `${current}/(${groups[0]})` : `(${groups[0]})`);\n        // This code will continue and add paths without this group included`\n      }\n    } else if (current) {\n      current = `${current}/${head}`;\n    } else {\n      current = head;\n    }\n\n    generateVariations(rest, current);\n  }\n\n  generateVariations(segments);\n\n  return Array.from(variations);\n}\n\nasync function exportApiRoutesAsync({\n  outputDir,\n  server,\n  appDir,\n}: {\n  outputDir: string;\n  server: MetroBundlerDevServer;\n  appDir: string;\n}): Promise<Map<string, string>> {\n  const functionsDir = '_expo/functions';\n  const funcDir = path.join(outputDir, functionsDir);\n  fs.mkdirSync(path.join(funcDir), { recursive: true });\n\n  const { manifest, files } = await server.exportExpoRouterApiRoutesAsync({\n    mode: 'production',\n    appDir,\n    outputDir: functionsDir,\n  });\n\n  Log.log(chalk.bold`Exporting ${files.size} API Routes.`);\n\n  files.set('_expo/routes.json', JSON.stringify(manifest, null, 2));\n\n  return files;\n}\n\nfunction warnPossibleInvalidExportType(appDir: string) {\n  const apiRoutes = getApiRoutesForDirectory(appDir);\n  if (apiRoutes.length) {\n    // TODO: Allow API Routes for native-only.\n    Log.warn(\n      chalk.yellow`Skipping export for API routes because \\`web.output\\` is not \"server\". You may want to remove the routes: ${apiRoutes\n        .map((v) => path.relative(appDir, v))\n        .join(', ')}`\n    );\n  }\n}\n"],"names":["unstable_exportStaticAsync","getFilesToExportFromServerAsync","exportFromServerAsync","modifyBundlesWithSourceMaps","getHtmlFiles","getPathVariations","debug","require","projectRoot","options","Log","warn","learnMore","devServerManager","DevServerManager","minify","mode","location","startAsync","type","isExporting","stopAsync","matchGroupName","name","match","manifest","renderAsync","includeGroupVariations","files","Map","Promise","all","map","outputPath","pathname","replace","set","data","e","logMetroErrorAsync","error","Error","outputDir","basePath","exportServer","includeMaps","exp","getConfig","skipSDKVersionRequirement","appDir","getRouterDirectoryWithManifest","injectFaviconTag","getVirtualFaviconAssetsAsync","devServer","getDefaultDevServer","assert","MetroBundlerDevServer","resources","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","composeResourcesWithHtml","forEach","resource","filename","source","apiRoutes","exportApiRoutesAsync","server","route","contents","warnPossibleInvalidExportType","fs","mkdirSync","path","join","recursive","log","chalk","bold","size","entries","sort","a","b","localeCompare","file","length","Buffer","byteLength","gray","prettyBytes","promises","mkdir","dirname","writeFile","endsWith","normalizedFilename","props","mapName","htmlFiles","Set","traverseScreens","screens","value","Object","values","filePath","slice","addOptionalGroups","add","newPath","variations","variation","Array","from","parts","split","partsWithGroups","part","startsWith","routePath","segments","generateVariations","current","head","rest","groups","group","trim","functionsDir","funcDir","exportExpoRouterApiRoutesAsync","JSON","stringify","getApiRoutesForDirectory","yellow","v","relative"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport prettyBytes from 'pretty-bytes';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { Log } from '../log';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { ExpoRouterServerManifestV1 } from '../start/server/metro/fetchRouterManifest';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport {\n  getApiRoutesForDirectory,\n  getRouterDirectoryWithManifest,\n} from '../start/server/metro/router';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = {\n  outputDir: string;\n  minify: boolean;\n  exportServer: boolean;\n  basePath: string;\n  includeMaps: boolean;\n};\n\n/** @private */\nexport async function unstable_exportStaticAsync(projectRoot: string, options: Options) {\n  Log.warn(\n    `Experimental static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  // TODO: Prevent starting the watcher.\n  const devServerManager = new DevServerManager(projectRoot, {\n    minify: options.minify,\n    mode: 'production',\n    location: {},\n  });\n  await devServerManager.startAsync([\n    {\n      type: 'metro',\n      options: {\n        location: {},\n        isExporting: true,\n      },\n    },\n  ]);\n\n  try {\n    await exportFromServerAsync(projectRoot, devServerManager, options);\n  } finally {\n    await devServerManager.stopAsync();\n  }\n}\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n    includeGroupVariations,\n  }: {\n    manifest: any;\n    renderAsync: (pathname: string) => Promise<string>;\n    includeGroupVariations?: boolean;\n  }\n): Promise<Map<string, string>> {\n  // name : contents\n  const files = new Map<string, string>();\n\n  await Promise.all(\n    getHtmlFiles({ manifest, includeGroupVariations }).map(async (outputPath) => {\n      const pathname = outputPath.replace(/(?:index)?\\.html$/, '');\n      try {\n        files.set(outputPath, '');\n        const data = await renderAsync(pathname);\n        files.set(outputPath, data);\n      } catch (e: any) {\n        await logMetroErrorAsync({ error: e, projectRoot });\n        throw new Error('Failed to statically export route: ' + pathname);\n      }\n    })\n  );\n\n  return files;\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServerManager: DevServerManager,\n  { outputDir, basePath, exportServer, minify, includeMaps }: Options\n): Promise<void> {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  const appDir = getRouterDirectoryWithManifest(projectRoot, exp);\n\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, { outputDir, basePath });\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const [resources, { manifest, serverManifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({ mode: 'production', minify, includeMaps }),\n    devServer.getStaticRenderFunctionAsync({\n      mode: 'production',\n      minify,\n    }),\n  ]);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  const files = await getFilesToExportFromServerAsync(projectRoot, {\n    manifest,\n    // Servers can handle group routes automatically and therefore\n    // don't require the build-time generation of every possible group\n    // variation.\n    includeGroupVariations: !exportServer,\n    async renderAsync(pathname: string) {\n      const template = await renderAsync(pathname);\n      let html = await devServer.composeResourcesWithHtml({\n        mode: 'production',\n        resources,\n        template,\n        basePath,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  resources.forEach((resource) => {\n    files.set(\n      resource.filename,\n      modifyBundlesWithSourceMaps(resource.filename, resource.source, includeMaps)\n    );\n  });\n\n  if (exportServer) {\n    const apiRoutes = await exportApiRoutesAsync({\n      outputDir,\n      server: devServer,\n      appDir,\n      manifest: serverManifest,\n    });\n\n    // Add the api routes to the files to export.\n    for (const [route, contents] of apiRoutes) {\n      files.set(route, contents);\n    }\n  } else {\n    warnPossibleInvalidExportType(appDir);\n  }\n\n  fs.mkdirSync(path.join(outputDir), { recursive: true });\n\n  Log.log('');\n  Log.log(chalk.bold`Exporting ${files.size} files:`);\n  await Promise.all(\n    [...files.entries()]\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(async ([file, contents]) => {\n        const length = Buffer.byteLength(contents, 'utf8');\n        Log.log(file, chalk.gray`(${prettyBytes(length)})`);\n        const outputPath = path.join(outputDir, file);\n        await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n        await fs.promises.writeFile(outputPath, contents);\n      })\n  );\n  Log.log('');\n}\n\nexport function modifyBundlesWithSourceMaps(\n  filename: string,\n  source: string,\n  includeMaps: boolean\n): string {\n  if (filename.endsWith('.js')) {\n    // If the bundle ends with source map URLs then update them to point to the correct location.\n\n    // TODO: basePath support\n    const normalizedFilename = '/' + filename.replace(/^\\/+/, '');\n    //# sourceMappingURL=//localhost:8085/index.map?platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    //# sourceURL=http://localhost:8085/index.bundle//&platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    return source.replace(/^\\/\\/# (sourceMappingURL|sourceURL)=.*$/gm, (...props) => {\n      if (includeMaps) {\n        if (props[1] === 'sourceURL') {\n          return `//# ${props[1]}=` + normalizedFilename;\n        } else if (props[1] === 'sourceMappingURL') {\n          const mapName = normalizedFilename + '.map';\n          return `//# ${props[1]}=` + mapName;\n        }\n      }\n      return '';\n    });\n  }\n  return source;\n}\n\nexport function getHtmlFiles({\n  manifest,\n  includeGroupVariations,\n}: {\n  manifest: any;\n  includeGroupVariations?: boolean;\n}): string[] {\n  const htmlFiles = new Set<string>();\n\n  function traverseScreens(screens: string | { screens: any; path: string }, basePath = '') {\n    for (const value of Object.values(screens)) {\n      if (typeof value === 'string') {\n        let filePath = basePath + value;\n        if (value === '') {\n          filePath =\n            basePath === ''\n              ? 'index'\n              : basePath.endsWith('/')\n              ? basePath + 'index'\n              : basePath.slice(0, -1);\n        }\n        if (includeGroupVariations) {\n          // TODO: Dedupe requests for alias routes.\n          addOptionalGroups(filePath);\n        } else {\n          htmlFiles.add(filePath);\n        }\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = basePath + value.path + '/';\n        traverseScreens(value.screens, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add(variation);\n    }\n  }\n\n  traverseScreens(manifest.screens);\n\n  return Array.from(htmlFiles).map((value) => {\n    const parts = value.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part === '*not-found') {\n        return `+not-found`;\n      } else if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    return partsWithGroups.join('/') + '.html';\n  });\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>();\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], current = ''): void {\n    if (segments.length === 0) {\n      if (current) variations.add(current);\n      return;\n    }\n\n    const [head, ...rest] = segments;\n\n    if (head.startsWith('(foo,foo')) {\n    }\n\n    if (matchGroupName(head)) {\n      const groups = head.slice(1, -1).split(',');\n\n      if (groups.length > 1) {\n        for (const group of groups) {\n          // If there are multiple groups, recurse on each group.\n          generateVariations([`(${group.trim()})`, ...rest], current);\n        }\n        return;\n      } else {\n        // Start a fork where this group is included\n        generateVariations(rest, current ? `${current}/(${groups[0]})` : `(${groups[0]})`);\n        // This code will continue and add paths without this group included`\n      }\n    } else if (current) {\n      current = `${current}/${head}`;\n    } else {\n      current = head;\n    }\n\n    generateVariations(rest, current);\n  }\n\n  generateVariations(segments);\n\n  return Array.from(variations);\n}\n\nasync function exportApiRoutesAsync({\n  outputDir,\n  server,\n  appDir,\n  ...props\n}: {\n  outputDir: string;\n  server: MetroBundlerDevServer;\n  appDir: string;\n  manifest: ExpoRouterServerManifestV1;\n}): Promise<Map<string, string>> {\n  const functionsDir = '_expo/functions';\n  const funcDir = path.join(outputDir, functionsDir);\n  fs.mkdirSync(path.join(funcDir), { recursive: true });\n\n  const { manifest, files } = await server.exportExpoRouterApiRoutesAsync({\n    mode: 'production',\n    appDir,\n    outputDir: functionsDir,\n    prerenderManifest: props.manifest,\n  });\n\n  Log.log(chalk.bold`Exporting ${files.size} API Routes.`);\n\n  files.set('_expo/routes.json', JSON.stringify(manifest, null, 2));\n\n  return files;\n}\n\nfunction warnPossibleInvalidExportType(appDir: string) {\n  const apiRoutes = getApiRoutesForDirectory(appDir);\n  if (apiRoutes.length) {\n    // TODO: Allow API Routes for native-only.\n    Log.warn(\n      chalk.yellow`Skipping export for API routes because \\`web.output\\` is not \"server\". You may want to remove the routes: ${apiRoutes\n        .map((v) => path.relative(appDir, v))\n        .join(', ')}`\n    );\n  }\n}\n"],"names":["unstable_exportStaticAsync","getFilesToExportFromServerAsync","exportFromServerAsync","modifyBundlesWithSourceMaps","getHtmlFiles","getPathVariations","debug","require","projectRoot","options","Log","warn","learnMore","devServerManager","DevServerManager","minify","mode","location","startAsync","type","isExporting","stopAsync","matchGroupName","name","match","manifest","renderAsync","includeGroupVariations","files","Map","Promise","all","map","outputPath","pathname","replace","set","data","e","logMetroErrorAsync","error","Error","outputDir","basePath","exportServer","includeMaps","exp","getConfig","skipSDKVersionRequirement","appDir","getRouterDirectoryWithManifest","injectFaviconTag","getVirtualFaviconAssetsAsync","devServer","getDefaultDevServer","assert","MetroBundlerDevServer","resources","serverManifest","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","composeResourcesWithHtml","forEach","resource","filename","source","apiRoutes","exportApiRoutesAsync","server","route","contents","warnPossibleInvalidExportType","fs","mkdirSync","path","join","recursive","log","chalk","bold","size","entries","sort","a","b","localeCompare","file","length","Buffer","byteLength","gray","prettyBytes","promises","mkdir","dirname","writeFile","endsWith","normalizedFilename","props","mapName","htmlFiles","Set","traverseScreens","screens","value","Object","values","filePath","slice","addOptionalGroups","add","newPath","variations","variation","Array","from","parts","split","partsWithGroups","part","startsWith","routePath","segments","generateVariations","current","head","rest","groups","group","trim","functionsDir","funcDir","exportExpoRouterApiRoutesAsync","prerenderManifest","JSON","stringify","getApiRoutesForDirectory","yellow","v","relative"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js b/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js
index 729e8d2..b86b835 100644
--- a/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js
+++ b/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js
@@ -6,12 +6,13 @@ exports.createBundlesAsync = createBundlesAsync;
 exports.getAssets = getAssets;
 var _config = require("@expo/config");
 var _chalk = _interopRequireDefault(require("chalk"));
+var _metro = _interopRequireDefault(require("metro"));
 var _getAssets = _interopRequireDefault(require("metro/src/DeltaBundler/Serializers/getAssets"));
+var _server = _interopRequireDefault(require("metro/src/Server"));
 var _splitBundleOptions = _interopRequireDefault(require("metro/src/lib/splitBundleOptions"));
 var _exportHermes = require("./exportHermes");
 var _getCssModulesFromBundler = require("../start/server/metro/getCssModulesFromBundler");
 var _instantiateMetro = require("../start/server/metro/instantiateMetro");
-var _resolveFromProject = require("../start/server/metro/resolveFromProject");
 var _manifestMiddleware = require("../start/server/middleware/ManifestMiddleware");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
@@ -58,13 +59,11 @@ async function bundleProductionMetroClientAsync(projectRoot, expoConfig, metroOp
     // Hermes won't be available.
     await Promise.all(bundles.map(({ platform  })=>assertEngineMismatchAsync(projectRoot, expoConfig, platform)
     ));
-    const metro = (0, _resolveFromProject).importMetroFromProject(projectRoot);
-    const Server = (0, _resolveFromProject).importMetroServerFromProject(projectRoot);
     const { config , reporter  } = await (0, _instantiateMetro).loadMetroConfigAsync(projectRoot, metroOptions, {
         exp: expoConfig,
         isExporting: true
     });
-    const metroServer = await metro.runMetro(config, {
+    const metroServer = await _metro.default.runMetro(config, {
         watch: false
     });
     const buildAsync = async (bundle)=>{
@@ -72,7 +71,7 @@ async function bundleProductionMetroClientAsync(projectRoot, expoConfig, metroOp
         const isHermes = (0, _exportHermes).isEnableHermesManaged(expoConfig, bundle.platform);
         var _dev, _minify;
         const bundleOptions = {
-            ...Server.DEFAULT_BUNDLE_OPTIONS,
+            ..._server.default.DEFAULT_BUNDLE_OPTIONS,
             bundleType: "bundle",
             platform: bundle.platform,
             entryFile: bundle.entryPoint,
@@ -81,6 +80,11 @@ async function bundleProductionMetroClientAsync(projectRoot, expoConfig, metroOp
             inlineSourceMap: false,
             sourceMapUrl: bundle.sourceMapUrl,
             createModuleIdFactory: config.serializer.createModuleIdFactory,
+            unstable_transformProfile: isHermes ? "hermes-stable" : "default",
+            customTransformOptions: {
+                __proto__: null,
+                engine: isHermes ? "hermes" : undefined
+            },
             onProgress: (transformedFileCount, totalFileCount)=>{
                 reporter.update({
                     buildID,
diff --git a/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js.map b/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js.map
index 8c63dde..53fbad8 100644
--- a/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js.map
+++ b/node_modules/@expo/cli/build/src/export/fork-bundleAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/fork-bundleAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfigFilePaths, Platform, ProjectConfig } from '@expo/config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport Metro, { AssetData } from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\nimport splitBundleOptions from 'metro/src/lib/splitBundleOptions';\nimport type { BundleOptions as MetroBundleOptions } from 'metro/src/shared/types';\nimport { ConfigT } from 'metro-config';\n\nimport {\n  buildHermesBundleAsync,\n  isEnableHermesManaged,\n  maybeThrowFromInconsistentEngineAsync,\n} from './exportHermes';\nimport { CSSAsset, getCssModulesFromBundler } from '../start/server/metro/getCssModulesFromBundler';\nimport { loadMetroConfigAsync } from '../start/server/metro/instantiateMetro';\nimport {\n  importMetroFromProject,\n  importMetroServerFromProject,\n} from '../start/server/metro/resolveFromProject';\nimport { getEntryWithServerRoot } from '../start/server/middleware/ManifestMiddleware';\n\nexport type MetroDevServerOptions = LoadOptions;\n\nexport type BundleOptions = {\n  entryPoint: string;\n  platform: 'android' | 'ios' | 'web';\n  dev?: boolean;\n  minify?: boolean;\n  sourceMapUrl?: string;\n  sourcemaps?: boolean;\n};\nexport type BundleAssetWithFileHashes = Metro.AssetData & {\n  fileHashes: string[]; // added by the hashAssets asset plugin\n};\nexport type BundleOutput = {\n  code: string;\n  map: string;\n  hermesBytecodeBundle?: Uint8Array;\n  hermesSourcemap?: string;\n  css: CSSAsset[];\n  assets: readonly BundleAssetWithFileHashes[];\n};\n\nlet nextBuildID = 0;\n\nasync function assertEngineMismatchAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>,\n  platform: Platform\n) {\n  const isHermesManaged = isEnableHermesManaged(exp, platform);\n\n  const paths = getConfigFilePaths(projectRoot);\n  const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n  await maybeThrowFromInconsistentEngineAsync(\n    projectRoot,\n    configFilePath,\n    platform,\n    isHermesManaged\n  );\n}\n\nexport async function createBundlesAsync(\n  projectRoot: string,\n  projectConfig: ProjectConfig,\n  bundleOptions: {\n    clear?: boolean;\n    maxWorkers?: number;\n    platforms: Platform[];\n    dev?: boolean;\n    minify?: boolean;\n    sourcemaps?: boolean;\n  }\n): Promise<Partial<Record<Platform, BundleOutput>>> {\n  if (!bundleOptions.platforms.length) {\n    return {};\n  }\n  const { exp, pkg } = projectConfig;\n\n  const bundles = await bundleProductionMetroClientAsync(\n    projectRoot,\n    exp,\n    {\n      // If not legacy, ignore the target option to prevent warnings from being thrown.\n      resetCache: bundleOptions.clear,\n      maxWorkers: bundleOptions.maxWorkers,\n    },\n    bundleOptions.platforms.map((platform: Platform) => ({\n      platform,\n      entryPoint: getEntryWithServerRoot(projectRoot, { platform, pkg }),\n      sourcemaps: bundleOptions.sourcemaps,\n      minify: bundleOptions.minify,\n      dev: bundleOptions.dev,\n    }))\n  );\n\n  // { ios: bundle, android: bundle }\n  return bundleOptions.platforms.reduce<Partial<Record<Platform, BundleOutput>>>(\n    (prev, platform, index) => ({\n      ...prev,\n      [platform]: bundles[index],\n    }),\n    {}\n  );\n}\n\nasync function bundleProductionMetroClientAsync(\n  projectRoot: string,\n  expoConfig: ExpoConfig,\n  metroOptions: MetroDevServerOptions,\n  bundles: BundleOptions[]\n): Promise<BundleOutput[]> {\n  // Assert early so the user doesn't have to wait until bundling is complete to find out that\n  // Hermes won't be available.\n  await Promise.all(\n    bundles.map(({ platform }) => assertEngineMismatchAsync(projectRoot, expoConfig, platform))\n  );\n\n  const metro = importMetroFromProject(projectRoot);\n  const Server = importMetroServerFromProject(projectRoot);\n\n  const { config, reporter } = await loadMetroConfigAsync(projectRoot, metroOptions, {\n    exp: expoConfig,\n    isExporting: true,\n  });\n\n  const metroServer = await metro.runMetro(config, {\n    watch: false,\n  });\n\n  const buildAsync = async (bundle: BundleOptions): Promise<BundleOutput> => {\n    const buildID = `bundle_${nextBuildID++}_${bundle.platform}`;\n    const isHermes = isEnableHermesManaged(expoConfig, bundle.platform);\n    const bundleOptions: MetroBundleOptions = {\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      bundleType: 'bundle',\n      platform: bundle.platform,\n      entryFile: bundle.entryPoint,\n      dev: bundle.dev ?? false,\n      minify: !isHermes && (bundle.minify ?? !bundle.dev),\n      inlineSourceMap: false,\n      sourceMapUrl: bundle.sourceMapUrl,\n      createModuleIdFactory: config.serializer.createModuleIdFactory,\n      onProgress: (transformedFileCount: number, totalFileCount: number) => {\n        reporter.update({\n          buildID,\n          type: 'bundle_transform_progressed',\n          transformedFileCount,\n          totalFileCount,\n        });\n      },\n    };\n    const bundleDetails = {\n      ...bundleOptions,\n      buildID,\n    };\n    reporter.update({\n      buildID,\n      type: 'bundle_build_started',\n      bundleDetails,\n    });\n    try {\n      const { code, map } = await metroServer.build(bundleOptions);\n      const [assets, css] = await Promise.all([\n        getAssets(metroServer, bundleOptions),\n        getCssModulesFromBundler(config, metroServer.getBundler(), bundleOptions),\n      ]);\n\n      reporter.update({\n        buildID,\n        type: 'bundle_build_done',\n      });\n      return { code, map, assets: assets as readonly BundleAssetWithFileHashes[], css };\n    } catch (error) {\n      reporter.update({\n        buildID,\n        type: 'bundle_build_failed',\n      });\n\n      throw error;\n    }\n  };\n\n  const maybeAddHermesBundleAsync = async (\n    bundle: BundleOptions,\n    bundleOutput: BundleOutput\n  ): Promise<BundleOutput> => {\n    const { platform } = bundle;\n    const isHermesManaged = isEnableHermesManaged(expoConfig, platform);\n    if (isHermesManaged) {\n      const platformTag = chalk.bold(\n        { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform\n      );\n\n      reporter.terminal.log(`${platformTag} Building Hermes bytecode for the bundle`);\n\n      const hermesBundleOutput = await buildHermesBundleAsync(projectRoot, {\n        code: bundleOutput.code,\n        map: bundle.sourcemaps ? bundleOutput.map : null,\n        minify: bundle.minify ?? !bundle.dev,\n      });\n      bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n      bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap ?? undefined;\n    }\n    return bundleOutput;\n  };\n\n  try {\n    const intermediateOutputs = await Promise.all(bundles.map((bundle) => buildAsync(bundle)));\n    const bundleOutputs: BundleOutput[] = [];\n    for (let i = 0; i < bundles.length; ++i) {\n      // hermesc does not support parallel building even we spawn processes.\n      // we should build them sequentially.\n      bundleOutputs.push(await maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n    }\n    return bundleOutputs;\n  } catch (error) {\n    // New line so errors don't show up inline with the progress bar\n    console.log('');\n    throw error;\n  } finally {\n    metroServer.end();\n  }\n}\n\n// Forked out of Metro because the `this._getServerRootDir()` doesn't match the development\n// behavior.\nexport async function getAssets(\n  metro: Metro.Server,\n  options: MetroBundleOptions\n): Promise<readonly AssetData[]> {\n  const { entryFile, onProgress, resolverOptions, transformOptions } = splitBundleOptions(options);\n\n  // @ts-expect-error: _bundler isn't exposed on the type.\n  const dependencies = await metro._bundler.getDependencies(\n    [entryFile],\n    transformOptions,\n    resolverOptions,\n    { onProgress, shallow: false, lazy: false }\n  );\n\n  // @ts-expect-error\n  const _config = metro._config as ConfigT;\n\n  return await getMetroAssets(dependencies, {\n    processModuleFilter: _config.serializer.processModuleFilter,\n    assetPlugins: _config.transformer.assetPlugins,\n    platform: transformOptions.platform!,\n    projectRoot: _config.projectRoot, // this._getServerRootDir(),\n    publicPath: _config.transformer.publicPath,\n  });\n}\n"],"names":["createBundlesAsync","getAssets","nextBuildID","assertEngineMismatchAsync","projectRoot","exp","platform","isHermesManaged","isEnableHermesManaged","paths","getConfigFilePaths","configFilePath","dynamicConfigPath","staticConfigPath","maybeThrowFromInconsistentEngineAsync","projectConfig","bundleOptions","platforms","length","pkg","bundles","bundleProductionMetroClientAsync","resetCache","clear","maxWorkers","map","entryPoint","getEntryWithServerRoot","sourcemaps","minify","dev","reduce","prev","index","expoConfig","metroOptions","Promise","all","metro","importMetroFromProject","Server","importMetroServerFromProject","config","reporter","loadMetroConfigAsync","isExporting","metroServer","runMetro","watch","buildAsync","bundle","buildID","isHermes","DEFAULT_BUNDLE_OPTIONS","bundleType","entryFile","inlineSourceMap","sourceMapUrl","createModuleIdFactory","serializer","onProgress","transformedFileCount","totalFileCount","update","type","bundleDetails","code","build","assets","css","getCssModulesFromBundler","getBundler","error","maybeAddHermesBundleAsync","bundleOutput","platformTag","chalk","bold","ios","android","web","terminal","log","hermesBundleOutput","buildHermesBundleAsync","hermesBytecodeBundle","hbc","hermesSourcemap","sourcemap","undefined","intermediateOutputs","bundleOutputs","i","push","console","end","options","resolverOptions","transformOptions","splitBundleOptions","dependencies","_bundler","getDependencies","shallow","lazy","_config","getMetroAssets","processModuleFilter","assetPlugins","transformer","publicPath"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/fork-bundleAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfigFilePaths, Platform, ProjectConfig } from '@expo/config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport Metro, { AssetData } from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\nimport Server from 'metro/src/Server';\nimport splitBundleOptions from 'metro/src/lib/splitBundleOptions';\nimport type { BundleOptions as MetroBundleOptions } from 'metro/src/shared/types';\nimport { ConfigT } from 'metro-config';\n\nimport {\n  buildHermesBundleAsync,\n  isEnableHermesManaged,\n  maybeThrowFromInconsistentEngineAsync,\n} from './exportHermes';\nimport { CSSAsset, getCssModulesFromBundler } from '../start/server/metro/getCssModulesFromBundler';\nimport { loadMetroConfigAsync } from '../start/server/metro/instantiateMetro';\nimport { getEntryWithServerRoot } from '../start/server/middleware/ManifestMiddleware';\n\nexport type MetroDevServerOptions = LoadOptions;\n\nexport type BundleOptions = {\n  entryPoint: string;\n  platform: 'android' | 'ios' | 'web';\n  dev?: boolean;\n  minify?: boolean;\n  sourceMapUrl?: string;\n  sourcemaps?: boolean;\n};\nexport type BundleAssetWithFileHashes = Metro.AssetData & {\n  fileHashes: string[]; // added by the hashAssets asset plugin\n};\nexport type BundleOutput = {\n  code: string;\n  map: string;\n  hermesBytecodeBundle?: Uint8Array;\n  hermesSourcemap?: string;\n  css: CSSAsset[];\n  assets: readonly BundleAssetWithFileHashes[];\n};\n\nlet nextBuildID = 0;\n\nasync function assertEngineMismatchAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>,\n  platform: Platform\n) {\n  const isHermesManaged = isEnableHermesManaged(exp, platform);\n\n  const paths = getConfigFilePaths(projectRoot);\n  const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n  await maybeThrowFromInconsistentEngineAsync(\n    projectRoot,\n    configFilePath,\n    platform,\n    isHermesManaged\n  );\n}\n\nexport async function createBundlesAsync(\n  projectRoot: string,\n  projectConfig: ProjectConfig,\n  bundleOptions: {\n    clear?: boolean;\n    maxWorkers?: number;\n    platforms: Platform[];\n    dev?: boolean;\n    minify?: boolean;\n    sourcemaps?: boolean;\n  }\n): Promise<Partial<Record<Platform, BundleOutput>>> {\n  if (!bundleOptions.platforms.length) {\n    return {};\n  }\n  const { exp, pkg } = projectConfig;\n\n  const bundles = await bundleProductionMetroClientAsync(\n    projectRoot,\n    exp,\n    {\n      // If not legacy, ignore the target option to prevent warnings from being thrown.\n      resetCache: bundleOptions.clear,\n      maxWorkers: bundleOptions.maxWorkers,\n    },\n    bundleOptions.platforms.map((platform: Platform) => ({\n      platform,\n      entryPoint: getEntryWithServerRoot(projectRoot, { platform, pkg }),\n      sourcemaps: bundleOptions.sourcemaps,\n      minify: bundleOptions.minify,\n      dev: bundleOptions.dev,\n    }))\n  );\n\n  // { ios: bundle, android: bundle }\n  return bundleOptions.platforms.reduce<Partial<Record<Platform, BundleOutput>>>(\n    (prev, platform, index) => ({\n      ...prev,\n      [platform]: bundles[index],\n    }),\n    {}\n  );\n}\n\nasync function bundleProductionMetroClientAsync(\n  projectRoot: string,\n  expoConfig: ExpoConfig,\n  metroOptions: MetroDevServerOptions,\n  bundles: BundleOptions[]\n): Promise<BundleOutput[]> {\n  // Assert early so the user doesn't have to wait until bundling is complete to find out that\n  // Hermes won't be available.\n  await Promise.all(\n    bundles.map(({ platform }) => assertEngineMismatchAsync(projectRoot, expoConfig, platform))\n  );\n\n  const { config, reporter } = await loadMetroConfigAsync(projectRoot, metroOptions, {\n    exp: expoConfig,\n    isExporting: true,\n  });\n\n  const metroServer = await Metro.runMetro(config, {\n    watch: false,\n  });\n\n  const buildAsync = async (bundle: BundleOptions): Promise<BundleOutput> => {\n    const buildID = `bundle_${nextBuildID++}_${bundle.platform}`;\n    const isHermes = isEnableHermesManaged(expoConfig, bundle.platform);\n    const bundleOptions: MetroBundleOptions = {\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      bundleType: 'bundle',\n      platform: bundle.platform,\n      entryFile: bundle.entryPoint,\n      dev: bundle.dev ?? false,\n      minify: !isHermes && (bundle.minify ?? !bundle.dev),\n      inlineSourceMap: false,\n      sourceMapUrl: bundle.sourceMapUrl,\n      createModuleIdFactory: config.serializer.createModuleIdFactory,\n      unstable_transformProfile: isHermes ? 'hermes-stable' : 'default',\n      customTransformOptions: {\n        __proto__: null,\n        engine: isHermes ? 'hermes' : undefined,\n      },\n      onProgress: (transformedFileCount: number, totalFileCount: number) => {\n        reporter.update({\n          buildID,\n          type: 'bundle_transform_progressed',\n          transformedFileCount,\n          totalFileCount,\n        });\n      },\n    };\n    const bundleDetails = {\n      ...bundleOptions,\n      buildID,\n    };\n    reporter.update({\n      buildID,\n      type: 'bundle_build_started',\n      bundleDetails,\n    });\n    try {\n      const { code, map } = await metroServer.build(bundleOptions);\n      const [assets, css] = await Promise.all([\n        getAssets(metroServer, bundleOptions),\n        getCssModulesFromBundler(config, metroServer.getBundler(), bundleOptions),\n      ]);\n\n      reporter.update({\n        buildID,\n        type: 'bundle_build_done',\n      });\n      return { code, map, assets: assets as readonly BundleAssetWithFileHashes[], css };\n    } catch (error) {\n      reporter.update({\n        buildID,\n        type: 'bundle_build_failed',\n      });\n\n      throw error;\n    }\n  };\n\n  const maybeAddHermesBundleAsync = async (\n    bundle: BundleOptions,\n    bundleOutput: BundleOutput\n  ): Promise<BundleOutput> => {\n    const { platform } = bundle;\n    const isHermesManaged = isEnableHermesManaged(expoConfig, platform);\n    if (isHermesManaged) {\n      const platformTag = chalk.bold(\n        { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform\n      );\n\n      reporter.terminal.log(`${platformTag} Building Hermes bytecode for the bundle`);\n\n      const hermesBundleOutput = await buildHermesBundleAsync(projectRoot, {\n        code: bundleOutput.code,\n        map: bundle.sourcemaps ? bundleOutput.map : null,\n        minify: bundle.minify ?? !bundle.dev,\n      });\n      bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n      bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap ?? undefined;\n    }\n    return bundleOutput;\n  };\n\n  try {\n    const intermediateOutputs = await Promise.all(bundles.map((bundle) => buildAsync(bundle)));\n    const bundleOutputs: BundleOutput[] = [];\n    for (let i = 0; i < bundles.length; ++i) {\n      // hermesc does not support parallel building even we spawn processes.\n      // we should build them sequentially.\n      bundleOutputs.push(await maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n    }\n    return bundleOutputs;\n  } catch (error) {\n    // New line so errors don't show up inline with the progress bar\n    console.log('');\n    throw error;\n  } finally {\n    metroServer.end();\n  }\n}\n\n// Forked out of Metro because the `this._getServerRootDir()` doesn't match the development\n// behavior.\nexport async function getAssets(\n  metro: Metro.Server,\n  options: MetroBundleOptions\n): Promise<readonly AssetData[]> {\n  const { entryFile, onProgress, resolverOptions, transformOptions } = splitBundleOptions(options);\n\n  // @ts-expect-error: _bundler isn't exposed on the type.\n  const dependencies = await metro._bundler.getDependencies(\n    [entryFile],\n    transformOptions,\n    resolverOptions,\n    { onProgress, shallow: false, lazy: false }\n  );\n\n  // @ts-expect-error\n  const _config = metro._config as ConfigT;\n\n  return await getMetroAssets(dependencies, {\n    processModuleFilter: _config.serializer.processModuleFilter,\n    assetPlugins: _config.transformer.assetPlugins,\n    platform: transformOptions.platform!,\n    projectRoot: _config.projectRoot, // this._getServerRootDir(),\n    publicPath: _config.transformer.publicPath,\n  });\n}\n"],"names":["createBundlesAsync","getAssets","nextBuildID","assertEngineMismatchAsync","projectRoot","exp","platform","isHermesManaged","isEnableHermesManaged","paths","getConfigFilePaths","configFilePath","dynamicConfigPath","staticConfigPath","maybeThrowFromInconsistentEngineAsync","projectConfig","bundleOptions","platforms","length","pkg","bundles","bundleProductionMetroClientAsync","resetCache","clear","maxWorkers","map","entryPoint","getEntryWithServerRoot","sourcemaps","minify","dev","reduce","prev","index","expoConfig","metroOptions","Promise","all","config","reporter","loadMetroConfigAsync","isExporting","metroServer","Metro","runMetro","watch","buildAsync","bundle","buildID","isHermes","Server","DEFAULT_BUNDLE_OPTIONS","bundleType","entryFile","inlineSourceMap","sourceMapUrl","createModuleIdFactory","serializer","unstable_transformProfile","customTransformOptions","__proto__","engine","undefined","onProgress","transformedFileCount","totalFileCount","update","type","bundleDetails","code","build","assets","css","getCssModulesFromBundler","getBundler","error","maybeAddHermesBundleAsync","bundleOutput","platformTag","chalk","bold","ios","android","web","terminal","log","hermesBundleOutput","buildHermesBundleAsync","hermesBytecodeBundle","hbc","hermesSourcemap","sourcemap","intermediateOutputs","bundleOutputs","i","push","console","end","metro","options","resolverOptions","transformOptions","splitBundleOptions","dependencies","_bundler","getDependencies","shallow","lazy","_config","getMetroAssets","processModuleFilter","assetPlugins","transformer","publicPath"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js
index f6419be..4e4322f 100644
--- a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js
+++ b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js
@@ -24,7 +24,7 @@ async function exportWebAsync(projectRoot, options) {
     const { exp  } = (0, _config).getConfig(projectRoot);
     const platformBundlers = (0, _platformBundlers).getPlatformBundlers(exp);
     // Create a bundler interface
-    const bundler = new _webpackBundlerDevServer.WebpackBundlerDevServer(projectRoot, platformBundlers, false);
+    const bundler = new _webpackBundlerDevServer.WebpackBundlerDevServer(projectRoot, platformBundlers);
     // If the user set `web.bundler: 'metro'` then they should use `expo export` instead.
     if (!bundler.isTargetingWeb()) {
         throw new _errors.CommandError(_chalk.default`{bold expo export:web} can only be used with Webpack. Use {bold expo export} for other bundlers.`);
diff --git a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map
index 9df0c9e..ce32a15 100644
--- a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map
+++ b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/export/web/exportWebAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport { Options } from './resolveOptions';\nimport { Log } from '../../log';\nimport { WebSupportProjectPrerequisite } from '../../start/doctor/web/WebSupportProjectPrerequisite';\nimport { getPlatformBundlers } from '../../start/server/platformBundlers';\nimport { WebpackBundlerDevServer } from '../../start/server/webpack/WebpackBundlerDevServer';\nimport { CommandError } from '../../utils/errors';\nimport { setNodeEnv } from '../../utils/nodeEnv';\n\nexport async function exportWebAsync(projectRoot: string, options: Options) {\n  // Ensure webpack is available\n  await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n\n  setNodeEnv(options.dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const { exp } = getConfig(projectRoot);\n  const platformBundlers = getPlatformBundlers(exp);\n  // Create a bundler interface\n  const bundler = new WebpackBundlerDevServer(projectRoot, platformBundlers, false);\n\n  // If the user set `web.bundler: 'metro'` then they should use `expo export` instead.\n  if (!bundler.isTargetingWeb()) {\n    throw new CommandError(\n      chalk`{bold expo export:web} can only be used with Webpack. Use {bold expo export} for other bundlers.`\n    );\n  }\n\n  Log.log(`Exporting with Webpack...`);\n\n  // Bundle the app\n  await bundler.bundleAsync({\n    mode: options.dev ? 'development' : 'production',\n    clear: options.clear,\n  });\n}\n"],"names":["exportWebAsync","projectRoot","options","WebSupportProjectPrerequisite","assertAsync","setNodeEnv","dev","require","load","exp","getConfig","platformBundlers","getPlatformBundlers","bundler","WebpackBundlerDevServer","isTargetingWeb","CommandError","chalk","Log","log","bundleAsync","mode","clear"],"mappings":"AAAA;;;;QAWsBA,cAAc,GAAdA,cAAc;AAXV,IAAA,OAAc,WAAd,cAAc,CAAA;AACtB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAGL,IAAA,IAAW,WAAX,WAAW,CAAA;AACe,IAAA,8BAAsD,WAAtD,sDAAsD,CAAA;AAChE,IAAA,iBAAqC,WAArC,qCAAqC,CAAA;AACjC,IAAA,wBAAoD,WAApD,oDAAoD,CAAA;AAC/D,IAAA,OAAoB,WAApB,oBAAoB,CAAA;AACtB,IAAA,QAAqB,WAArB,qBAAqB,CAAA;;;;;;AAEzC,eAAeA,cAAc,CAACC,WAAmB,EAAEC,OAAgB,EAAE;IAC1E,8BAA8B;IAC9B,MAAM,IAAIC,8BAA6B,8BAAA,CAACF,WAAW,CAAC,CAACG,WAAW,EAAE,CAAC;IAEnEC,CAAAA,GAAAA,QAAU,AAA4C,CAAA,WAA5C,CAACH,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY,CAAC,CAAC;IACvDC,OAAO,CAAC,WAAW,CAAC,CAACC,IAAI,CAACP,WAAW,CAAC,CAAC;IAEvC,MAAM,EAAEQ,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAa,CAAA,UAAb,CAACT,WAAW,CAAC,AAAC;IACvC,MAAMU,gBAAgB,GAAGC,CAAAA,GAAAA,iBAAmB,AAAK,CAAA,oBAAL,CAACH,GAAG,CAAC,AAAC;IAClD,6BAA6B;IAC7B,MAAMI,OAAO,GAAG,IAAIC,wBAAuB,wBAAA,CAACb,WAAW,EAAEU,gBAAgB,EAAE,KAAK,CAAC,AAAC;IAElF,qFAAqF;IACrF,IAAI,CAACE,OAAO,CAACE,cAAc,EAAE,EAAE;QAC7B,MAAM,IAAIC,OAAY,aAAA,CACpBC,MAAK,QAAA,CAAC,gGAAgG,CAAC,CACxG,CAAC;KACH;IAEDC,IAAG,IAAA,CAACC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAErC,iBAAiB;IACjB,MAAMN,OAAO,CAACO,WAAW,CAAC;QACxBC,IAAI,EAAEnB,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY;QAChDgB,KAAK,EAAEpB,OAAO,CAACoB,KAAK;KACrB,CAAC,CAAC;CACJ"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/export/web/exportWebAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport { Options } from './resolveOptions';\nimport { Log } from '../../log';\nimport { WebSupportProjectPrerequisite } from '../../start/doctor/web/WebSupportProjectPrerequisite';\nimport { getPlatformBundlers } from '../../start/server/platformBundlers';\nimport { WebpackBundlerDevServer } from '../../start/server/webpack/WebpackBundlerDevServer';\nimport { CommandError } from '../../utils/errors';\nimport { setNodeEnv } from '../../utils/nodeEnv';\n\nexport async function exportWebAsync(projectRoot: string, options: Options) {\n  // Ensure webpack is available\n  await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n\n  setNodeEnv(options.dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const { exp } = getConfig(projectRoot);\n  const platformBundlers = getPlatformBundlers(exp);\n  // Create a bundler interface\n  const bundler = new WebpackBundlerDevServer(projectRoot, platformBundlers);\n\n  // If the user set `web.bundler: 'metro'` then they should use `expo export` instead.\n  if (!bundler.isTargetingWeb()) {\n    throw new CommandError(\n      chalk`{bold expo export:web} can only be used with Webpack. Use {bold expo export} for other bundlers.`\n    );\n  }\n\n  Log.log(`Exporting with Webpack...`);\n\n  // Bundle the app\n  await bundler.bundleAsync({\n    mode: options.dev ? 'development' : 'production',\n    clear: options.clear,\n  });\n}\n"],"names":["exportWebAsync","projectRoot","options","WebSupportProjectPrerequisite","assertAsync","setNodeEnv","dev","require","load","exp","getConfig","platformBundlers","getPlatformBundlers","bundler","WebpackBundlerDevServer","isTargetingWeb","CommandError","chalk","Log","log","bundleAsync","mode","clear"],"mappings":"AAAA;;;;QAWsBA,cAAc,GAAdA,cAAc;AAXV,IAAA,OAAc,WAAd,cAAc,CAAA;AACtB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAGL,IAAA,IAAW,WAAX,WAAW,CAAA;AACe,IAAA,8BAAsD,WAAtD,sDAAsD,CAAA;AAChE,IAAA,iBAAqC,WAArC,qCAAqC,CAAA;AACjC,IAAA,wBAAoD,WAApD,oDAAoD,CAAA;AAC/D,IAAA,OAAoB,WAApB,oBAAoB,CAAA;AACtB,IAAA,QAAqB,WAArB,qBAAqB,CAAA;;;;;;AAEzC,eAAeA,cAAc,CAACC,WAAmB,EAAEC,OAAgB,EAAE;IAC1E,8BAA8B;IAC9B,MAAM,IAAIC,8BAA6B,8BAAA,CAACF,WAAW,CAAC,CAACG,WAAW,EAAE,CAAC;IAEnEC,CAAAA,GAAAA,QAAU,AAA4C,CAAA,WAA5C,CAACH,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY,CAAC,CAAC;IACvDC,OAAO,CAAC,WAAW,CAAC,CAACC,IAAI,CAACP,WAAW,CAAC,CAAC;IAEvC,MAAM,EAAEQ,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAa,CAAA,UAAb,CAACT,WAAW,CAAC,AAAC;IACvC,MAAMU,gBAAgB,GAAGC,CAAAA,GAAAA,iBAAmB,AAAK,CAAA,oBAAL,CAACH,GAAG,CAAC,AAAC;IAClD,6BAA6B;IAC7B,MAAMI,OAAO,GAAG,IAAIC,wBAAuB,wBAAA,CAACb,WAAW,EAAEU,gBAAgB,CAAC,AAAC;IAE3E,qFAAqF;IACrF,IAAI,CAACE,OAAO,CAACE,cAAc,EAAE,EAAE;QAC7B,MAAM,IAAIC,OAAY,aAAA,CACpBC,MAAK,QAAA,CAAC,gGAAgG,CAAC,CACxG,CAAC;KACH;IAEDC,IAAG,IAAA,CAACC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAErC,iBAAiB;IACjB,MAAMN,OAAO,CAACO,WAAW,CAAC;QACxBC,IAAI,EAAEnB,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY;QAChDgB,KAAK,EAAEpB,OAAO,CAACoB,KAAK;KACrB,CAAC,CAAC;CACJ"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/writeContents.js b/node_modules/@expo/cli/build/src/export/writeContents.js
index ae7ddff..54432ee 100644
--- a/node_modules/@expo/cli/build/src/export/writeContents.js
+++ b/node_modules/@expo/cli/build/src/export/writeContents.js
@@ -88,10 +88,11 @@ async function writeSourceMapsAsync({ bundles , hashes , fileNames , outputDir
         };
     }))).filter(Boolean);
 }
-async function writeMetadataJsonAsync({ outputDir , bundles , fileNames  }) {
+async function writeMetadataJsonAsync({ outputDir , bundles , fileNames , embeddedHashSet  }) {
     const contents = (0, _createMetadataJson).createMetadataJson({
         bundles,
-        fileNames
+        fileNames,
+        embeddedHashSet
     });
     const metadataPath = _path.default.join(outputDir, "metadata.json");
     debug(`Writing metadata.json to ${metadataPath}`);
diff --git a/node_modules/@expo/cli/build/src/export/writeContents.js.map b/node_modules/@expo/cli/build/src/export/writeContents.js.map
index 11bf3e8..9d4503f 100644
--- a/node_modules/@expo/cli/build/src/export/writeContents.js.map
+++ b/node_modules/@expo/cli/build/src/export/writeContents.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/writeContents.ts"],"sourcesContent":["import { Platform } from '@expo/config';\nimport crypto from 'crypto';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nimport { createMetadataJson } from './createMetadataJson';\nimport { BundleOutput } from './fork-bundleAsync';\nimport { Asset } from './saveAssets';\n\nconst debug = require('debug')('expo:export:write') as typeof console.log;\n\n/**\n * @param props.platform native platform for the bundle\n * @param props.format extension to use for the name\n * @param props.hash crypto hash for the bundle contents\n * @returns filename for the JS bundle.\n */\nfunction createBundleFileName({\n  platform,\n  format,\n  hash,\n}: {\n  platform: string;\n  format: 'javascript' | 'bytecode';\n  hash: string;\n}): string {\n  return `${platform}-${hash}.${format === 'javascript' ? 'js' : 'hbc'}`;\n}\n\n/**\n * @param bundle JS bundle as a string\n * @returns crypto hash for the provided bundle\n */\nfunction createBundleHash(bundle: string | Uint8Array): string {\n  return crypto.createHash('md5').update(bundle).digest('hex');\n}\n\nexport async function writeBundlesAsync({\n  bundles,\n  outputDir,\n  useServerRendering,\n}: {\n  bundles: Partial<Record<Platform, Pick<BundleOutput, 'hermesBytecodeBundle' | 'code'>>>;\n  outputDir: string;\n  useServerRendering?: boolean;\n}) {\n  const hashes: Partial<Record<Platform, string>> = {};\n  const fileNames: Partial<Record<Platform, string>> = {};\n\n  for (const [platform, bundleOutput] of Object.entries(bundles) as [\n    Platform,\n    Pick<BundleOutput, 'hermesBytecodeBundle' | 'code'>,\n  ][]) {\n    // TODO: Move native to use the newer `_expo/...` bundle writing system.\n    if (platform === 'web' && useServerRendering) {\n      continue;\n    }\n    const bundle = bundleOutput.hermesBytecodeBundle ?? bundleOutput.code;\n    const hash = createBundleHash(bundle);\n    const fileName = createBundleFileName({\n      platform,\n      format: bundleOutput.hermesBytecodeBundle ? 'bytecode' : 'javascript',\n      hash,\n    });\n\n    hashes[platform] = hash;\n    fileNames[platform] = fileName;\n    await fs.writeFile(path.join(outputDir, fileName), bundle);\n  }\n\n  return { hashes, fileNames };\n}\n\ntype SourceMapWriteResult = {\n  platform: string;\n  fileName: string;\n  hash: string;\n  map: string;\n  comment: string;\n};\n\nexport async function writeSourceMapsAsync({\n  bundles,\n  hashes,\n  fileNames,\n  outputDir,\n}: {\n  bundles: Partial<\n    Record<string, Pick<BundleOutput, 'hermesSourcemap' | 'map' | 'hermesBytecodeBundle' | 'code'>>\n  >;\n  hashes?: Record<string, string | undefined>;\n  fileNames?: Record<string, string | undefined>;\n  outputDir: string;\n}): Promise<SourceMapWriteResult[]> {\n  return (\n    await Promise.all(\n      Object.entries(bundles).map(async ([platform, bundle]) => {\n        if (!bundle) return null;\n        const sourceMap = bundle.hermesSourcemap ?? bundle.map;\n        if (!sourceMap) {\n          debug(`Skip writing sourcemap (platform: ${platform})`);\n          return null;\n        }\n\n        const hash =\n          hashes?.[platform] ?? createBundleHash(bundle.hermesBytecodeBundle ?? bundle.code!);\n        const mapName = `${platform}-${hash}.map`;\n        await fs.writeFile(path.join(outputDir, mapName), sourceMap);\n\n        const jsBundleFileName =\n          fileNames?.[platform] ??\n          createBundleFileName({\n            platform,\n            format: bundle.hermesBytecodeBundle ? 'bytecode' : 'javascript',\n            hash,\n          });\n        const jsPath = path.join(outputDir, jsBundleFileName);\n\n        // Add correct mapping to sourcemap paths\n        const mappingComment = `\\n//# sourceMappingURL=${mapName}`;\n        await fs.appendFile(jsPath, mappingComment);\n        return {\n          platform,\n          fileName: mapName,\n          hash,\n          map: sourceMap,\n          comment: mappingComment,\n        };\n      })\n    )\n  ).filter(Boolean) as SourceMapWriteResult[];\n}\n\nexport async function writeMetadataJsonAsync({\n  outputDir,\n  bundles,\n  fileNames,\n}: {\n  outputDir: string;\n  bundles: Record<string, Pick<BundleOutput, 'assets'> | undefined>;\n  fileNames: Record<string, string | undefined>;\n}) {\n  const contents = createMetadataJson({\n    bundles,\n    fileNames,\n  });\n  const metadataPath = path.join(outputDir, 'metadata.json');\n  debug(`Writing metadata.json to ${metadataPath}`);\n  await fs.writeFile(metadataPath, JSON.stringify(contents));\n  return contents;\n}\n\nexport async function writeAssetMapAsync({\n  outputDir,\n  assets,\n}: {\n  outputDir: string;\n  assets: Asset[];\n}) {\n  // Convert the assets array to a k/v pair where the asset hash is the key and the asset is the value.\n  const contents = Object.fromEntries(assets.map((asset) => [asset.hash, asset]));\n  await fs.writeFile(path.join(outputDir, 'assetmap.json'), JSON.stringify(contents));\n  return contents;\n}\n\nexport async function writeDebugHtmlAsync({\n  outputDir,\n  fileNames,\n}: {\n  outputDir: string;\n  fileNames: Record<string, string | undefined>;\n}) {\n  // Make a debug html so user can debug their bundles\n  const contents = `\n      ${Object.values(fileNames)\n        .filter((value) => value != null)\n        .map((fileName) => `<script src=\"${path.join('bundles', fileName!)}\"></script>`)\n        .join('\\n      ')}\n      Open up this file in Chrome. In the JavaScript developer console, navigate to the Source tab.\n      You can see a red colored folder containing the original source code from your bundle.\n      `;\n\n  await fs.writeFile(path.join(outputDir, 'debug.html'), contents);\n  return contents;\n}\n"],"names":["writeBundlesAsync","writeSourceMapsAsync","writeMetadataJsonAsync","writeAssetMapAsync","writeDebugHtmlAsync","debug","require","createBundleFileName","platform","format","hash","createBundleHash","bundle","crypto","createHash","update","digest","bundles","outputDir","useServerRendering","hashes","fileNames","bundleOutput","Object","entries","hermesBytecodeBundle","code","fileName","fs","writeFile","path","join","Promise","all","map","sourceMap","hermesSourcemap","mapName","jsBundleFileName","jsPath","mappingComment","appendFile","comment","filter","Boolean","contents","createMetadataJson","metadataPath","JSON","stringify","assets","fromEntries","asset","values","value"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/writeContents.ts"],"sourcesContent":["import { Platform } from '@expo/config';\nimport crypto from 'crypto';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nimport { createMetadataJson } from './createMetadataJson';\nimport { BundleOutput } from './fork-bundleAsync';\nimport { Asset } from './saveAssets';\n\nconst debug = require('debug')('expo:export:write') as typeof console.log;\n\n/**\n * @param props.platform native platform for the bundle\n * @param props.format extension to use for the name\n * @param props.hash crypto hash for the bundle contents\n * @returns filename for the JS bundle.\n */\nfunction createBundleFileName({\n  platform,\n  format,\n  hash,\n}: {\n  platform: string;\n  format: 'javascript' | 'bytecode';\n  hash: string;\n}): string {\n  return `${platform}-${hash}.${format === 'javascript' ? 'js' : 'hbc'}`;\n}\n\n/**\n * @param bundle JS bundle as a string\n * @returns crypto hash for the provided bundle\n */\nfunction createBundleHash(bundle: string | Uint8Array): string {\n  return crypto.createHash('md5').update(bundle).digest('hex');\n}\n\nexport async function writeBundlesAsync({\n  bundles,\n  outputDir,\n  useServerRendering,\n}: {\n  bundles: Partial<Record<Platform, Pick<BundleOutput, 'hermesBytecodeBundle' | 'code'>>>;\n  outputDir: string;\n  useServerRendering?: boolean;\n}) {\n  const hashes: Partial<Record<Platform, string>> = {};\n  const fileNames: Partial<Record<Platform, string>> = {};\n\n  for (const [platform, bundleOutput] of Object.entries(bundles) as [\n    Platform,\n    Pick<BundleOutput, 'hermesBytecodeBundle' | 'code'>,\n  ][]) {\n    // TODO: Move native to use the newer `_expo/...` bundle writing system.\n    if (platform === 'web' && useServerRendering) {\n      continue;\n    }\n    const bundle = bundleOutput.hermesBytecodeBundle ?? bundleOutput.code;\n    const hash = createBundleHash(bundle);\n    const fileName = createBundleFileName({\n      platform,\n      format: bundleOutput.hermesBytecodeBundle ? 'bytecode' : 'javascript',\n      hash,\n    });\n\n    hashes[platform] = hash;\n    fileNames[platform] = fileName;\n    await fs.writeFile(path.join(outputDir, fileName), bundle);\n  }\n\n  return { hashes, fileNames };\n}\n\ntype SourceMapWriteResult = {\n  platform: string;\n  fileName: string;\n  hash: string;\n  map: string;\n  comment: string;\n};\n\nexport async function writeSourceMapsAsync({\n  bundles,\n  hashes,\n  fileNames,\n  outputDir,\n}: {\n  bundles: Partial<\n    Record<string, Pick<BundleOutput, 'hermesSourcemap' | 'map' | 'hermesBytecodeBundle' | 'code'>>\n  >;\n  hashes?: Record<string, string | undefined>;\n  fileNames?: Record<string, string | undefined>;\n  outputDir: string;\n}): Promise<SourceMapWriteResult[]> {\n  return (\n    await Promise.all(\n      Object.entries(bundles).map(async ([platform, bundle]) => {\n        if (!bundle) return null;\n        const sourceMap = bundle.hermesSourcemap ?? bundle.map;\n        if (!sourceMap) {\n          debug(`Skip writing sourcemap (platform: ${platform})`);\n          return null;\n        }\n\n        const hash =\n          hashes?.[platform] ?? createBundleHash(bundle.hermesBytecodeBundle ?? bundle.code!);\n        const mapName = `${platform}-${hash}.map`;\n        await fs.writeFile(path.join(outputDir, mapName), sourceMap);\n\n        const jsBundleFileName =\n          fileNames?.[platform] ??\n          createBundleFileName({\n            platform,\n            format: bundle.hermesBytecodeBundle ? 'bytecode' : 'javascript',\n            hash,\n          });\n        const jsPath = path.join(outputDir, jsBundleFileName);\n\n        // Add correct mapping to sourcemap paths\n        const mappingComment = `\\n//# sourceMappingURL=${mapName}`;\n        await fs.appendFile(jsPath, mappingComment);\n        return {\n          platform,\n          fileName: mapName,\n          hash,\n          map: sourceMap,\n          comment: mappingComment,\n        };\n      })\n    )\n  ).filter(Boolean) as SourceMapWriteResult[];\n}\n\nexport async function writeMetadataJsonAsync({\n  outputDir,\n  bundles,\n  fileNames,\n  embeddedHashSet,\n}: {\n  outputDir: string;\n  bundles: Record<string, Pick<BundleOutput, 'assets'> | undefined>;\n  fileNames: Record<string, string | undefined>;\n  embeddedHashSet?: Set<string>;\n}) {\n  const contents = createMetadataJson({\n    bundles,\n    fileNames,\n    embeddedHashSet,\n  });\n  const metadataPath = path.join(outputDir, 'metadata.json');\n  debug(`Writing metadata.json to ${metadataPath}`);\n  await fs.writeFile(metadataPath, JSON.stringify(contents));\n  return contents;\n}\n\nexport async function writeAssetMapAsync({\n  outputDir,\n  assets,\n}: {\n  outputDir: string;\n  assets: Asset[];\n}) {\n  // Convert the assets array to a k/v pair where the asset hash is the key and the asset is the value.\n  const contents = Object.fromEntries(assets.map((asset) => [asset.hash, asset]));\n  await fs.writeFile(path.join(outputDir, 'assetmap.json'), JSON.stringify(contents));\n  return contents;\n}\n\nexport async function writeDebugHtmlAsync({\n  outputDir,\n  fileNames,\n}: {\n  outputDir: string;\n  fileNames: Record<string, string | undefined>;\n}) {\n  // Make a debug html so user can debug their bundles\n  const contents = `\n      ${Object.values(fileNames)\n        .filter((value) => value != null)\n        .map((fileName) => `<script src=\"${path.join('bundles', fileName!)}\"></script>`)\n        .join('\\n      ')}\n      Open up this file in Chrome. In the JavaScript developer console, navigate to the Source tab.\n      You can see a red colored folder containing the original source code from your bundle.\n      `;\n\n  await fs.writeFile(path.join(outputDir, 'debug.html'), contents);\n  return contents;\n}\n"],"names":["writeBundlesAsync","writeSourceMapsAsync","writeMetadataJsonAsync","writeAssetMapAsync","writeDebugHtmlAsync","debug","require","createBundleFileName","platform","format","hash","createBundleHash","bundle","crypto","createHash","update","digest","bundles","outputDir","useServerRendering","hashes","fileNames","bundleOutput","Object","entries","hermesBytecodeBundle","code","fileName","fs","writeFile","path","join","Promise","all","map","sourceMap","hermesSourcemap","mapName","jsBundleFileName","jsPath","mappingComment","appendFile","comment","filter","Boolean","embeddedHashSet","contents","createMetadataJson","metadataPath","JSON","stringify","assets","fromEntries","asset","values","value"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/applyPlugins.js b/node_modules/@expo/cli/build/src/install/applyPlugins.js
new file mode 100644
index 0000000..fb3287c
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/install/applyPlugins.js
@@ -0,0 +1,52 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+exports.applyPluginsAsync = applyPluginsAsync;
+var _config = require("@expo/config");
+var Log = _interopRequireWildcard(require("../log"));
+function _interopRequireWildcard(obj) {
+    if (obj && obj.__esModule) {
+        return obj;
+    } else {
+        var newObj = {};
+        if (obj != null) {
+            for(var key in obj){
+                if (Object.prototype.hasOwnProperty.call(obj, key)) {
+                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
+                    if (desc.get || desc.set) {
+                        Object.defineProperty(newObj, key, desc);
+                    } else {
+                        newObj[key] = obj[key];
+                    }
+                }
+            }
+        }
+        newObj.default = obj;
+        return newObj;
+    }
+}
+async function applyPluginsAsync(projectRoot, packages) {
+    const { autoAddConfigPluginsAsync  } = await Promise.resolve().then(function() {
+        return _interopRequireWildcard(require("./utils/autoAddConfigPlugins.js"));
+    });
+    try {
+        const { exp  } = (0, _config).getConfig(projectRoot, {
+            skipSDKVersionRequirement: true
+        });
+        // Only auto add plugins if the plugins array is defined or if the project is using SDK +42.
+        await autoAddConfigPluginsAsync(projectRoot, exp, // Split any possible NPM tags. i.e. `expo@latest` -> `expo`
+        packages.map((pkg)=>pkg.split("@")[0]
+        ).filter(Boolean));
+    } catch (error) {
+        // If we fail to apply plugins, the log a warning and continue.
+        if (error.isPluginError) {
+            Log.warn(`Skipping config plugin check: ` + error.message);
+            return;
+        }
+        // Any other error, rethrow.
+        throw error;
+    }
+}
+
+//# sourceMappingURL=applyPlugins.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/applyPlugins.js.map b/node_modules/@expo/cli/build/src/install/applyPlugins.js.map
new file mode 100644
index 0000000..6bfaa28
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/install/applyPlugins.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../src/install/applyPlugins.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\n\nimport * as Log from '../log';\n\n/**\n * A convenience feature for automatically applying Expo Config Plugins to the `app.json` after installing them.\n * This should be dropped in favor of autolinking in the future.\n */\nexport async function applyPluginsAsync(projectRoot: string, packages: string[]) {\n  const { autoAddConfigPluginsAsync } = await import('./utils/autoAddConfigPlugins.js');\n\n  try {\n    const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n    // Only auto add plugins if the plugins array is defined or if the project is using SDK +42.\n    await autoAddConfigPluginsAsync(\n      projectRoot,\n      exp,\n      // Split any possible NPM tags. i.e. `expo@latest` -> `expo`\n      packages.map((pkg) => pkg.split('@')[0]).filter(Boolean)\n    );\n  } catch (error: any) {\n    // If we fail to apply plugins, the log a warning and continue.\n    if (error.isPluginError) {\n      Log.warn(`Skipping config plugin check: ` + error.message);\n      return;\n    }\n    // Any other error, rethrow.\n    throw error;\n  }\n}\n"],"names":["applyPluginsAsync","Log","projectRoot","packages","autoAddConfigPluginsAsync","exp","getConfig","skipSDKVersionRequirement","map","pkg","split","filter","Boolean","error","isPluginError","warn","message"],"mappings":"AAAA;;;;QAQsBA,iBAAiB,GAAjBA,iBAAiB;AARb,IAAA,OAAc,WAAd,cAAc,CAAA;AAE5BC,IAAAA,GAAG,mCAAM,QAAQ,EAAd;;;;;;;;;;;;;;;;;;;;;;AAMR,eAAeD,iBAAiB,CAACE,WAAmB,EAAEC,QAAkB,EAAE;IAC/E,MAAM,EAAEC,yBAAyB,CAAA,EAAE,GAAG,MAAM;+CAAO,iCAAiC;MAAC,AAAC;IAEtF,IAAI;QACF,MAAM,EAAEC,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAkD,CAAA,UAAlD,CAACJ,WAAW,EAAE;YAAEK,yBAAyB,EAAE,IAAI;SAAE,CAAC,AAAC;QAE5E,4FAA4F;QAC5F,MAAMH,yBAAyB,CAC7BF,WAAW,EACXG,GAAG,EACH,4DAA4D;QAC5DF,QAAQ,CAACK,GAAG,CAAC,CAACC,GAAG,GAAKA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CACzD,CAAC;KACH,CAAC,OAAOC,KAAK,EAAO;QACnB,+DAA+D;QAC/D,IAAIA,KAAK,CAACC,aAAa,EAAE;YACvBb,GAAG,CAACc,IAAI,CAAC,CAAC,8BAA8B,CAAC,GAAGF,KAAK,CAACG,OAAO,CAAC,CAAC;YAC3D,OAAO;SACR;QACD,4BAA4B;QAC5B,MAAMH,KAAK,CAAC;KACb;CACF"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/checkPackages.js b/node_modules/@expo/cli/build/src/install/checkPackages.js
index 1295b54..142008e 100644
--- a/node_modules/@expo/cli/build/src/install/checkPackages.js
+++ b/node_modules/@expo/cli/build/src/install/checkPackages.js
@@ -5,7 +5,7 @@ Object.defineProperty(exports, "__esModule", {
 exports.checkPackagesAsync = checkPackagesAsync;
 var _config = require("@expo/config");
 var _chalk = _interopRequireDefault(require("chalk"));
-var _installAsync = require("./installAsync");
+var _fixPackages = require("./fixPackages");
 var Log = _interopRequireWildcard(require("../log"));
 var _validateDependenciesVersions = require("../start/doctor/dependencies/validateDependenciesVersions");
 var _interactive = require("../utils/interactive");
@@ -64,7 +64,7 @@ async function checkPackagesAsync(projectRoot, { packages , packageManager , opt
     if (value) {
         debug("Installing fixed dependencies:", dependencies);
         // Install the corrected dependencies.
-        return (0, _installAsync).fixPackagesAsync(projectRoot, {
+        return (0, _fixPackages).fixPackagesAsync(projectRoot, {
             packageManager,
             packages: dependencies,
             packageManagerArguments,
diff --git a/node_modules/@expo/cli/build/src/install/checkPackages.js.map b/node_modules/@expo/cli/build/src/install/checkPackages.js.map
index 33f3997..11e143b 100644
--- a/node_modules/@expo/cli/build/src/install/checkPackages.js.map
+++ b/node_modules/@expo/cli/build/src/install/checkPackages.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/install/checkPackages.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\n\nimport { fixPackagesAsync } from './installAsync';\nimport { Options } from './resolveOptions';\nimport * as Log from '../log';\nimport {\n  getVersionedDependenciesAsync,\n  logIncorrectDependencies,\n} from '../start/doctor/dependencies/validateDependenciesVersions';\nimport { isInteractive } from '../utils/interactive';\nimport { learnMore } from '../utils/link';\nimport { confirmAsync } from '../utils/prompts';\nimport { joinWithCommasAnd } from '../utils/strings';\n\nconst debug = require('debug')('expo:install:check') as typeof console.log;\n\n// Exposed for testing.\nexport async function checkPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    options: { fix },\n    packageManagerArguments,\n  }: {\n    /**\n     * List of packages to version\n     * @example ['uuid', 'react-native-reanimated@latest']\n     */\n    packages: string[];\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n\n    /** How the check should resolve */\n    options: Pick<Options, 'fix'>;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n) {\n  // Read the project Expo config without plugins.\n  const { exp, pkg } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  if (pkg.expo?.install?.exclude?.length) {\n    Log.log(\n      chalk`Skipped ${fix ? 'fixing' : 'checking'} dependencies: ${joinWithCommasAnd(\n        pkg.expo.install.exclude\n      )}. These dependencies are listed in {bold expo.install.exclude} in package.json. ${learnMore(\n        'https://expo.dev/more/expo-cli/#configuring-dependency-validation'\n      )}`\n    );\n  }\n\n  const dependencies = await getVersionedDependenciesAsync(projectRoot, exp, pkg, packages);\n\n  if (!dependencies.length) {\n    Log.exit(chalk.greenBright('Dependencies are up to date'), 0);\n  }\n\n  logIncorrectDependencies(dependencies);\n\n  const value =\n    // If `--fix` then always fix.\n    fix ||\n    // Otherwise prompt to fix when not running in CI.\n    (isInteractive() && (await confirmAsync({ message: 'Fix dependencies?' }).catch(() => false)));\n\n  if (value) {\n    debug('Installing fixed dependencies:', dependencies);\n    // Install the corrected dependencies.\n    return fixPackagesAsync(projectRoot, {\n      packageManager,\n      packages: dependencies,\n      packageManagerArguments,\n      sdkVersion: exp.sdkVersion!,\n    });\n  }\n  // Exit with non-zero exit code if any of the dependencies are out of date.\n  Log.exit(chalk.red('Found outdated dependencies'), 1);\n}\n"],"names":["checkPackagesAsync","Log","debug","require","projectRoot","packages","packageManager","options","fix","packageManagerArguments","pkg","exp","getConfig","skipPlugins","expo","install","exclude","length","log","chalk","joinWithCommasAnd","learnMore","dependencies","getVersionedDependenciesAsync","exit","greenBright","logIncorrectDependencies","value","isInteractive","confirmAsync","message","catch","fixPackagesAsync","sdkVersion","red"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/install/checkPackages.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\n\nimport { fixPackagesAsync } from './fixPackages';\nimport { Options } from './resolveOptions';\nimport * as Log from '../log';\nimport {\n  getVersionedDependenciesAsync,\n  logIncorrectDependencies,\n} from '../start/doctor/dependencies/validateDependenciesVersions';\nimport { isInteractive } from '../utils/interactive';\nimport { learnMore } from '../utils/link';\nimport { confirmAsync } from '../utils/prompts';\nimport { joinWithCommasAnd } from '../utils/strings';\n\nconst debug = require('debug')('expo:install:check') as typeof console.log;\n\n/**\n * Handles `expo install --fix|check'.\n * Checks installed dependencies against bundledNativeModules and versions endpoints to find any incompatibilities.\n * If `--fix` is passed, it will install the correct versions of the dependencies.\n * If `--check` is passed, it will prompt the user to install the correct versions of the dependencies (on interactive terminal).\n */\nexport async function checkPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    options: { fix },\n    packageManagerArguments,\n  }: {\n    /**\n     * List of packages to version\n     * @example ['uuid', 'react-native-reanimated@latest']\n     */\n    packages: string[];\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n\n    /** How the check should resolve */\n    options: Pick<Options, 'fix'>;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n) {\n  // Read the project Expo config without plugins.\n  const { exp, pkg } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  if (pkg.expo?.install?.exclude?.length) {\n    Log.log(\n      chalk`Skipped ${fix ? 'fixing' : 'checking'} dependencies: ${joinWithCommasAnd(\n        pkg.expo.install.exclude\n      )}. These dependencies are listed in {bold expo.install.exclude} in package.json. ${learnMore(\n        'https://expo.dev/more/expo-cli/#configuring-dependency-validation'\n      )}`\n    );\n  }\n\n  const dependencies = await getVersionedDependenciesAsync(projectRoot, exp, pkg, packages);\n\n  if (!dependencies.length) {\n    Log.exit(chalk.greenBright('Dependencies are up to date'), 0);\n  }\n\n  logIncorrectDependencies(dependencies);\n\n  const value =\n    // If `--fix` then always fix.\n    fix ||\n    // Otherwise prompt to fix when not running in CI.\n    (isInteractive() && (await confirmAsync({ message: 'Fix dependencies?' }).catch(() => false)));\n\n  if (value) {\n    debug('Installing fixed dependencies:', dependencies);\n    // Install the corrected dependencies.\n    return fixPackagesAsync(projectRoot, {\n      packageManager,\n      packages: dependencies,\n      packageManagerArguments,\n      sdkVersion: exp.sdkVersion!,\n    });\n  }\n  // Exit with non-zero exit code if any of the dependencies are out of date.\n  Log.exit(chalk.red('Found outdated dependencies'), 1);\n}\n"],"names":["checkPackagesAsync","Log","debug","require","projectRoot","packages","packageManager","options","fix","packageManagerArguments","pkg","exp","getConfig","skipPlugins","expo","install","exclude","length","log","chalk","joinWithCommasAnd","learnMore","dependencies","getVersionedDependenciesAsync","exit","greenBright","logIncorrectDependencies","value","isInteractive","confirmAsync","message","catch","fixPackagesAsync","sdkVersion","red"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/fixPackages.js b/node_modules/@expo/cli/build/src/install/fixPackages.js
new file mode 100644
index 0000000..9857e2b
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/install/fixPackages.js
@@ -0,0 +1,84 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+exports.fixPackagesAsync = fixPackagesAsync;
+var _chalk = _interopRequireDefault(require("chalk"));
+var _applyPlugins = require("./applyPlugins");
+var _installExpoPackage = require("./installExpoPackage");
+var Log = _interopRequireWildcard(require("../log"));
+var _getVersionedPackages = require("../start/doctor/dependencies/getVersionedPackages");
+var _array = require("../utils/array");
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
+function _interopRequireWildcard(obj) {
+    if (obj && obj.__esModule) {
+        return obj;
+    } else {
+        var newObj = {};
+        if (obj != null) {
+            for(var key in obj){
+                if (Object.prototype.hasOwnProperty.call(obj, key)) {
+                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
+                    if (desc.get || desc.set) {
+                        Object.defineProperty(newObj, key, desc);
+                    } else {
+                        newObj[key] = obj[key];
+                    }
+                }
+            }
+        }
+        newObj.default = obj;
+        return newObj;
+    }
+}
+async function fixPackagesAsync(projectRoot, { packages , packageManager , sdkVersion , packageManagerArguments  }) {
+    if (!packages.length) {
+        return;
+    }
+    const { dependencies =[] , devDependencies =[]  } = (0, _array).groupBy(packages, (dep)=>dep.packageType
+    );
+    const versioningMessages = (0, _getVersionedPackages).getOperationLog({
+        othersCount: 0,
+        nativeModulesCount: packages.length,
+        sdkVersion
+    });
+    // display all packages to update, including expo package
+    Log.log(_chalk.default`\u203A Installing ${versioningMessages.length ? versioningMessages.join(" and ") + " " : ""}using {bold ${packageManager.name}}`);
+    // if updating expo package, install this first, then run expo install --fix again under new version
+    const expoDep = dependencies.find((dep)=>dep.packageName === "expo"
+    );
+    if (expoDep) {
+        await (0, _installExpoPackage).installExpoPackageAsync(projectRoot, {
+            packageManager,
+            packageManagerArguments,
+            expoPackageToInstall: `expo@${expoDep.expectedVersionOrRange}`,
+            followUpCommandArgs: [
+                "--fix"
+            ]
+        });
+        // follow-up commands will be spawned in a detached process, so return immediately
+        return;
+    }
+    if (dependencies.length) {
+        const versionedPackages = dependencies.map((dep)=>`${dep.packageName}@${dep.expectedVersionOrRange}`
+        );
+        await packageManager.addAsync([
+            ...packageManagerArguments,
+            ...versionedPackages
+        ]);
+        await (0, _applyPlugins).applyPluginsAsync(projectRoot, versionedPackages);
+    }
+    if (devDependencies.length) {
+        await packageManager.addDevAsync([
+            ...packageManagerArguments,
+            ...devDependencies.map((dep)=>`${dep.packageName}@${dep.expectedVersionOrRange}`
+            ), 
+        ]);
+    }
+}
+
+//# sourceMappingURL=fixPackages.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/fixPackages.js.map b/node_modules/@expo/cli/build/src/install/fixPackages.js.map
new file mode 100644
index 0000000..89fda64
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/install/fixPackages.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../src/install/fixPackages.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\n\nimport { applyPluginsAsync } from './applyPlugins';\nimport { installExpoPackageAsync } from './installExpoPackage';\nimport * as Log from '../log';\nimport { getOperationLog } from '../start/doctor/dependencies/getVersionedPackages';\nimport { getVersionedDependenciesAsync } from '../start/doctor/dependencies/validateDependenciesVersions';\nimport { groupBy } from '../utils/array';\n\n/**\n * Given a list of incompatible packages, installs the correct versions of the packages with the package manager used for the project.\n */\nexport async function fixPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    sdkVersion,\n    packageManagerArguments,\n  }: {\n    packages: Awaited<ReturnType<typeof getVersionedDependenciesAsync>>;\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n    /**\n     * SDK to version `packages` for.\n     * @example '44.0.0'\n     */\n    sdkVersion: string;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n): Promise<void> {\n  if (!packages.length) {\n    return;\n  }\n\n  const { dependencies = [], devDependencies = [] } = groupBy(packages, (dep) => dep.packageType);\n  const versioningMessages = getOperationLog({\n    othersCount: 0, // All fixable packages are versioned\n    nativeModulesCount: packages.length,\n    sdkVersion,\n  });\n\n  // display all packages to update, including expo package\n  Log.log(\n    chalk`\\u203A Installing ${\n      versioningMessages.length ? versioningMessages.join(' and ') + ' ' : ''\n    }using {bold ${packageManager.name}}`\n  );\n\n  // if updating expo package, install this first, then run expo install --fix again under new version\n  const expoDep = dependencies.find((dep) => dep.packageName === 'expo');\n  if (expoDep) {\n    await installExpoPackageAsync(projectRoot, {\n      packageManager,\n      packageManagerArguments,\n      expoPackageToInstall: `expo@${expoDep.expectedVersionOrRange}`,\n      followUpCommandArgs: ['--fix'],\n    });\n    // follow-up commands will be spawned in a detached process, so return immediately\n    return;\n  }\n\n  if (dependencies.length) {\n    const versionedPackages = dependencies.map(\n      (dep) => `${dep.packageName}@${dep.expectedVersionOrRange}`\n    );\n\n    await packageManager.addAsync([...packageManagerArguments, ...versionedPackages]);\n\n    await applyPluginsAsync(projectRoot, versionedPackages);\n  }\n\n  if (devDependencies.length) {\n    await packageManager.addDevAsync([\n      ...packageManagerArguments,\n      ...devDependencies.map((dep) => `${dep.packageName}@${dep.expectedVersionOrRange}`),\n    ]);\n  }\n}\n"],"names":["fixPackagesAsync","Log","projectRoot","packages","packageManager","sdkVersion","packageManagerArguments","length","dependencies","devDependencies","groupBy","dep","packageType","versioningMessages","getOperationLog","othersCount","nativeModulesCount","log","chalk","join","name","expoDep","find","packageName","installExpoPackageAsync","expoPackageToInstall","expectedVersionOrRange","followUpCommandArgs","versionedPackages","map","addAsync","applyPluginsAsync","addDevAsync"],"mappings":"AAAA;;;;QAasBA,gBAAgB,GAAhBA,gBAAgB;AAZpB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAES,IAAA,aAAgB,WAAhB,gBAAgB,CAAA;AACV,IAAA,mBAAsB,WAAtB,sBAAsB,CAAA;AAClDC,IAAAA,GAAG,mCAAM,QAAQ,EAAd;AACiB,IAAA,qBAAmD,WAAnD,mDAAmD,CAAA;AAE3D,IAAA,MAAgB,WAAhB,gBAAgB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKjC,eAAeD,gBAAgB,CACpCE,WAAmB,EACnB,EACEC,QAAQ,CAAA,EACRC,cAAc,CAAA,EACdC,UAAU,CAAA,EACVC,uBAAuB,CAAA,EAexB,EACc;IACf,IAAI,CAACH,QAAQ,CAACI,MAAM,EAAE;QACpB,OAAO;KACR;IAED,MAAM,EAAEC,YAAY,EAAG,EAAE,CAAA,EAAEC,eAAe,EAAG,EAAE,CAAA,EAAE,GAAGC,CAAAA,GAAAA,MAAO,AAAoC,CAAA,QAApC,CAACP,QAAQ,EAAE,CAACQ,GAAG,GAAKA,GAAG,CAACC,WAAW;IAAA,CAAC,AAAC;IAChG,MAAMC,kBAAkB,GAAGC,CAAAA,GAAAA,qBAAe,AAIxC,CAAA,gBAJwC,CAAC;QACzCC,WAAW,EAAE,CAAC;QACdC,kBAAkB,EAAEb,QAAQ,CAACI,MAAM;QACnCF,UAAU;KACX,CAAC,AAAC;IAEH,yDAAyD;IACzDJ,GAAG,CAACgB,GAAG,CACLC,MAAK,QAAA,CAAC,kBAAkB,EACtBL,kBAAkB,CAACN,MAAM,GAAGM,kBAAkB,CAACM,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE,CACxE,YAAY,EAAEf,cAAc,CAACgB,IAAI,CAAC,CAAC,CAAC,CACtC,CAAC;IAEF,oGAAoG;IACpG,MAAMC,OAAO,GAAGb,YAAY,CAACc,IAAI,CAAC,CAACX,GAAG,GAAKA,GAAG,CAACY,WAAW,KAAK,MAAM;IAAA,CAAC,AAAC;IACvE,IAAIF,OAAO,EAAE;QACX,MAAMG,CAAAA,GAAAA,mBAAuB,AAK3B,CAAA,wBAL2B,CAACtB,WAAW,EAAE;YACzCE,cAAc;YACdE,uBAAuB;YACvBmB,oBAAoB,EAAE,CAAC,KAAK,EAAEJ,OAAO,CAACK,sBAAsB,CAAC,CAAC;YAC9DC,mBAAmB,EAAE;gBAAC,OAAO;aAAC;SAC/B,CAAC,CAAC;QACH,kFAAkF;QAClF,OAAO;KACR;IAED,IAAInB,YAAY,CAACD,MAAM,EAAE;QACvB,MAAMqB,iBAAiB,GAAGpB,YAAY,CAACqB,GAAG,CACxC,CAAClB,GAAG,GAAK,CAAC,EAAEA,GAAG,CAACY,WAAW,CAAC,CAAC,EAAEZ,GAAG,CAACe,sBAAsB,CAAC,CAAC;QAAA,CAC5D,AAAC;QAEF,MAAMtB,cAAc,CAAC0B,QAAQ,CAAC;eAAIxB,uBAAuB;eAAKsB,iBAAiB;SAAC,CAAC,CAAC;QAElF,MAAMG,CAAAA,GAAAA,aAAiB,AAAgC,CAAA,kBAAhC,CAAC7B,WAAW,EAAE0B,iBAAiB,CAAC,CAAC;KACzD;IAED,IAAInB,eAAe,CAACF,MAAM,EAAE;QAC1B,MAAMH,cAAc,CAAC4B,WAAW,CAAC;eAC5B1B,uBAAuB;eACvBG,eAAe,CAACoB,GAAG,CAAC,CAAClB,GAAG,GAAK,CAAC,EAAEA,GAAG,CAACY,WAAW,CAAC,CAAC,EAAEZ,GAAG,CAACe,sBAAsB,CAAC,CAAC;YAAA,CAAC;SACpF,CAAC,CAAC;KACJ;CACF"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/installAsync.js b/node_modules/@expo/cli/build/src/install/installAsync.js
index fd2e152..2cb6152 100644
--- a/node_modules/@expo/cli/build/src/install/installAsync.js
+++ b/node_modules/@expo/cli/build/src/install/installAsync.js
@@ -4,14 +4,14 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.installAsync = installAsync;
 exports.installPackagesAsync = installPackagesAsync;
-exports.fixPackagesAsync = fixPackagesAsync;
 var _config = require("@expo/config");
 var PackageManager = _interopRequireWildcard(require("@expo/package-manager"));
 var _chalk = _interopRequireDefault(require("chalk"));
+var _applyPlugins = require("./applyPlugins");
 var _checkPackages = require("./checkPackages");
+var _installExpoPackage = require("./installExpoPackage");
 var Log = _interopRequireWildcard(require("../log"));
 var _getVersionedPackages = require("../start/doctor/dependencies/getVersionedPackages");
-var _array = require("../utils/array");
 var _findUp = require("../utils/findUp");
 var _link = require("../utils/link");
 var _nodeEnv = require("../utils/nodeEnv");
@@ -82,7 +82,7 @@ async function installAsync(packages, options, packageManagerArguments = []) {
 }
 async function installPackagesAsync(projectRoot, { packages , packageManager , sdkVersion , packageManagerArguments  }) {
     // Read the project Expo config without plugins.
-    const { pkg  } = (0, _config).getConfig(projectRoot, {
+    const { pkg: pkg1  } = (0, _config).getConfig(projectRoot, {
         // Sometimes users will add a plugin to the config before installing the library,
         // this wouldn't work unless we dangerously disable plugin serialization.
         skipPlugins: true
@@ -92,72 +92,43 @@ async function installPackagesAsync(projectRoot, { packages , packageManager , s
         packages,
         // sdkVersion is always defined because we don't skipSDKVersionRequirement in getConfig.
         sdkVersion,
-        pkg
+        pkg: pkg1
     });
     Log.log(_chalk.default`\u203A Installing ${versioning.messages.length ? versioning.messages.join(" and ") + " " : ""}using {bold ${packageManager.name}}`);
     if (versioning.excludedNativeModules.length) {
-        Log.log(_chalk.default`\u203A Using latest version instead of ${(0, _strings).joinWithCommasAnd(versioning.excludedNativeModules.map(({ bundledNativeVersion , name  })=>`${bundledNativeVersion} for ${name}`
-        ))} because ${versioning.excludedNativeModules.length > 1 ? "they are" : "it is"} listed in {bold expo.install.exclude} in package.json. ${(0, _link).learnMore("https://expo.dev/more/expo-cli/#configuring-dependency-validation")}`);
-    }
-    await packageManager.addAsync([
-        ...packageManagerArguments,
-        ...versioning.packages
-    ]);
-    await applyPluginsAsync(projectRoot, versioning.packages);
-}
-async function fixPackagesAsync(projectRoot, { packages , packageManager , sdkVersion , packageManagerArguments  }) {
-    if (!packages.length) {
-        return;
-    }
-    const { dependencies =[] , devDependencies =[]  } = (0, _array).groupBy(packages, (dep)=>dep.packageType
-    );
-    const versioningMessages = (0, _getVersionedPackages).getOperationLog({
-        othersCount: 0,
-        nativeModulesCount: packages.length,
-        sdkVersion
-    });
-    Log.log(_chalk.default`\u203A Installing ${versioningMessages.length ? versioningMessages.join(" and ") + " " : ""}using {bold ${packageManager.name}}`);
-    if (dependencies.length) {
-        const versionedPackages = dependencies.map((dep)=>`${dep.packageName}@${dep.expectedVersionOrRange}`
+        const alreadyExcluded = versioning.excludedNativeModules.filter((module)=>module.isExcludedFromValidation
         );
-        await packageManager.addAsync([
-            ...packageManagerArguments,
-            ...versionedPackages
-        ]);
-        await applyPluginsAsync(projectRoot, versionedPackages);
+        const specifiedExactVersion = versioning.excludedNativeModules.filter((module)=>!module.isExcludedFromValidation
+        );
+        if (alreadyExcluded.length) {
+            Log.log(_chalk.default`\u203A Using ${(0, _strings).joinWithCommasAnd(alreadyExcluded.map(({ bundledNativeVersion , name , specifiedVersion  })=>`${specifiedVersion || "latest"} instead of  ${bundledNativeVersion} for ${name}`
+            ))} because ${alreadyExcluded.length > 1 ? "they are" : "it is"} listed in {bold expo.install.exclude} in package.json. ${(0, _link).learnMore("https://expo.dev/more/expo-cli/#configuring-dependency-validation")}`);
+        }
+        if (specifiedExactVersion.length) {
+            Log.log(_chalk.default`\u203A Using ${(0, _strings).joinWithCommasAnd(specifiedExactVersion.map(({ bundledNativeVersion , name , specifiedVersion  })=>`${specifiedVersion} instead of ${bundledNativeVersion} for ${name}`
+            ))} because ${specifiedExactVersion.length > 1 ? "these versions" : "this version"} was explicitly provided. Packages excluded from dependency validation should be listed in {bold expo.install.exclude} in package.json. ${(0, _link).learnMore("https://expo.dev/more/expo-cli/#configuring-dependency-validation")}`);
+        }
     }
-    if (devDependencies.length) {
-        await packageManager.addDevAsync([
-            ...packageManagerArguments,
-            ...devDependencies.map((dep)=>`${dep.packageName}@${dep.expectedVersionOrRange}`
+    // if updating expo package, install this first, then re-run the command minus expo to install everything else
+    if (packages.find((pkg)=>pkg === "expo"
+    )) {
+        const packagesMinusExpo = packages.filter((pkg)=>pkg !== "expo"
+        );
+        await (0, _installExpoPackage).installExpoPackageAsync(projectRoot, {
+            packageManager,
+            packageManagerArguments,
+            expoPackageToInstall: versioning.packages.find((pkg)=>pkg.startsWith("expo@")
             ),
-        ]);
-    }
-}
-/**
- * A convenience feature for automatically applying Expo Config Plugins to the `app.json` after installing them.
- * This should be dropped in favor of autolinking in the future.
- */ async function applyPluginsAsync(projectRoot, packages) {
-    const { autoAddConfigPluginsAsync  } = await Promise.resolve().then(function() {
-        return _interopRequireWildcard(require("./utils/autoAddConfigPlugins.js"));
-    });
-    try {
-        const { exp  } = (0, _config).getConfig(projectRoot, {
-            skipSDKVersionRequirement: true
+            followUpCommandArgs: packagesMinusExpo
         });
-        // Only auto add plugins if the plugins array is defined or if the project is using SDK +42.
-        await autoAddConfigPluginsAsync(projectRoot, exp, // Split any possible NPM tags. i.e. `expo@latest` -> `expo`
-        packages.map((pkg)=>pkg.split("@")[0]
-        ).filter(Boolean));
-    } catch (error) {
-        // If we fail to apply plugins, the log a warning and continue.
-        if (error.isPluginError) {
-            Log.warn(`Skipping config plugin check: ` + error.message);
-            return;
-        }
-        // Any other error, rethrow.
-        throw error;
+        // follow-up commands will be spawned in a detached process, so return immediately
+        return;
     }
+    await packageManager.addAsync([
+        ...packageManagerArguments,
+        ...versioning.packages
+    ]);
+    await (0, _applyPlugins).applyPluginsAsync(projectRoot, versioning.packages);
 }
 
 //# sourceMappingURL=installAsync.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/installAsync.js.map b/node_modules/@expo/cli/build/src/install/installAsync.js.map
index b13bcb6..28632cb 100644
--- a/node_modules/@expo/cli/build/src/install/installAsync.js.map
+++ b/node_modules/@expo/cli/build/src/install/installAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/install/installAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\n\nimport { checkPackagesAsync } from './checkPackages';\nimport { Options } from './resolveOptions';\nimport * as Log from '../log';\nimport {\n  getOperationLog,\n  getVersionedPackagesAsync,\n} from '../start/doctor/dependencies/getVersionedPackages';\nimport { getVersionedDependenciesAsync } from '../start/doctor/dependencies/validateDependenciesVersions';\nimport { groupBy } from '../utils/array';\nimport { findUpProjectRootOrAssert } from '../utils/findUp';\nimport { learnMore } from '../utils/link';\nimport { setNodeEnv } from '../utils/nodeEnv';\nimport { joinWithCommasAnd } from '../utils/strings';\n\nexport async function installAsync(\n  packages: string[],\n  options: Options & { projectRoot?: string },\n  packageManagerArguments: string[] = []\n) {\n  setNodeEnv('development');\n  // Locate the project root based on the process current working directory.\n  // This enables users to run `npx expo install` from a subdirectory of the project.\n  const projectRoot = options.projectRoot ?? findUpProjectRootOrAssert(process.cwd());\n  require('@expo/env').load(projectRoot);\n\n  // Resolve the package manager used by the project, or based on the provided arguments.\n  const packageManager = PackageManager.createForProject(projectRoot, {\n    npm: options.npm,\n    yarn: options.yarn,\n    bun: options.bun,\n    pnpm: options.pnpm,\n    silent: options.silent,\n    log: Log.log,\n  });\n\n  if (options.check || options.fix) {\n    return await checkPackagesAsync(projectRoot, {\n      packages,\n      options,\n      packageManager,\n      packageManagerArguments,\n    });\n  }\n\n  // Read the project Expo config without plugins.\n  const { exp } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  // Resolve the versioned packages, then install them.\n  return installPackagesAsync(projectRoot, {\n    packageManager,\n    packages,\n    packageManagerArguments,\n    sdkVersion: exp.sdkVersion!,\n  });\n}\n\n/** Version packages and install in a project. */\nexport async function installPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    sdkVersion,\n    packageManagerArguments,\n  }: {\n    /**\n     * List of packages to version, grouped by the type of dependency.\n     * @example ['uuid', 'react-native-reanimated@latest']\n     */\n    packages: string[];\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n    /**\n     * SDK to version `packages` for.\n     * @example '44.0.0'\n     */\n    sdkVersion: string;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n): Promise<void> {\n  // Read the project Expo config without plugins.\n  const { pkg } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  //assertNotInstallingExcludedPackages(projectRoot, packages, pkg);\n\n  const versioning = await getVersionedPackagesAsync(projectRoot, {\n    packages,\n    // sdkVersion is always defined because we don't skipSDKVersionRequirement in getConfig.\n    sdkVersion,\n    pkg,\n  });\n\n  Log.log(\n    chalk`\\u203A Installing ${\n      versioning.messages.length ? versioning.messages.join(' and ') + ' ' : ''\n    }using {bold ${packageManager.name}}`\n  );\n\n  if (versioning.excludedNativeModules.length) {\n    Log.log(\n      chalk`\\u203A Using latest version instead of ${joinWithCommasAnd(\n        versioning.excludedNativeModules.map(\n          ({ bundledNativeVersion, name }) => `${bundledNativeVersion} for ${name}`\n        )\n      )} because ${\n        versioning.excludedNativeModules.length > 1 ? 'they are' : 'it is'\n      } listed in {bold expo.install.exclude} in package.json. ${learnMore(\n        'https://expo.dev/more/expo-cli/#configuring-dependency-validation'\n      )}`\n    );\n  }\n\n  await packageManager.addAsync([...packageManagerArguments, ...versioning.packages]);\n\n  await applyPluginsAsync(projectRoot, versioning.packages);\n}\n\nexport async function fixPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    sdkVersion,\n    packageManagerArguments,\n  }: {\n    packages: Awaited<ReturnType<typeof getVersionedDependenciesAsync>>;\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n    /**\n     * SDK to version `packages` for.\n     * @example '44.0.0'\n     */\n    sdkVersion: string;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n): Promise<void> {\n  if (!packages.length) {\n    return;\n  }\n\n  const { dependencies = [], devDependencies = [] } = groupBy(packages, (dep) => dep.packageType);\n  const versioningMessages = getOperationLog({\n    othersCount: 0, // All fixable packages are versioned\n    nativeModulesCount: packages.length,\n    sdkVersion,\n  });\n\n  Log.log(\n    chalk`\\u203A Installing ${\n      versioningMessages.length ? versioningMessages.join(' and ') + ' ' : ''\n    }using {bold ${packageManager.name}}`\n  );\n\n  if (dependencies.length) {\n    const versionedPackages = dependencies.map(\n      (dep) => `${dep.packageName}@${dep.expectedVersionOrRange}`\n    );\n\n    await packageManager.addAsync([...packageManagerArguments, ...versionedPackages]);\n\n    await applyPluginsAsync(projectRoot, versionedPackages);\n  }\n\n  if (devDependencies.length) {\n    await packageManager.addDevAsync([\n      ...packageManagerArguments,\n      ...devDependencies.map((dep) => `${dep.packageName}@${dep.expectedVersionOrRange}`),\n    ]);\n  }\n}\n\n/**\n * A convenience feature for automatically applying Expo Config Plugins to the `app.json` after installing them.\n * This should be dropped in favor of autolinking in the future.\n */\nasync function applyPluginsAsync(projectRoot: string, packages: string[]) {\n  const { autoAddConfigPluginsAsync } = await import('./utils/autoAddConfigPlugins.js');\n\n  try {\n    const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n    // Only auto add plugins if the plugins array is defined or if the project is using SDK +42.\n    await autoAddConfigPluginsAsync(\n      projectRoot,\n      exp,\n      // Split any possible NPM tags. i.e. `expo@latest` -> `expo`\n      packages.map((pkg) => pkg.split('@')[0]).filter(Boolean)\n    );\n  } catch (error: any) {\n    // If we fail to apply plugins, the log a warning and continue.\n    if (error.isPluginError) {\n      Log.warn(`Skipping config plugin check: ` + error.message);\n      return;\n    }\n    // Any other error, rethrow.\n    throw error;\n  }\n}\n"],"names":["installAsync","installPackagesAsync","fixPackagesAsync","PackageManager","Log","packages","options","packageManagerArguments","setNodeEnv","projectRoot","findUpProjectRootOrAssert","process","cwd","require","load","packageManager","createForProject","npm","yarn","bun","pnpm","silent","log","check","fix","checkPackagesAsync","exp","getConfig","skipPlugins","sdkVersion","pkg","versioning","getVersionedPackagesAsync","chalk","messages","length","join","name","excludedNativeModules","joinWithCommasAnd","map","bundledNativeVersion","learnMore","addAsync","applyPluginsAsync","dependencies","devDependencies","groupBy","dep","packageType","versioningMessages","getOperationLog","othersCount","nativeModulesCount","versionedPackages","packageName","expectedVersionOrRange","addDevAsync","autoAddConfigPluginsAsync","skipSDKVersionRequirement","split","filter","Boolean","error","isPluginError","warn","message"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/install/installAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\n\nimport { applyPluginsAsync } from './applyPlugins';\nimport { checkPackagesAsync } from './checkPackages';\nimport { installExpoPackageAsync } from './installExpoPackage';\nimport { Options } from './resolveOptions';\nimport * as Log from '../log';\nimport { getVersionedPackagesAsync } from '../start/doctor/dependencies/getVersionedPackages';\nimport { findUpProjectRootOrAssert } from '../utils/findUp';\nimport { learnMore } from '../utils/link';\nimport { setNodeEnv } from '../utils/nodeEnv';\nimport { joinWithCommasAnd } from '../utils/strings';\n\n/**\n * Installs versions of specified packages compatible with the current Expo SDK version, or\n * checks/ fixes dependendencies in project if they don't match compatible versions specified in bundledNativeModules or versions endpoints.\n *\n * @param packages list of packages to install, if installing specific packages and not checking/ fixing\n * @param options options, including check or fix\n * @param packageManagerArguments arguments to forward to the package manager invoked while installing\n * @returns Promise<void>\n */\nexport async function installAsync(\n  packages: string[],\n  options: Options & { projectRoot?: string },\n  packageManagerArguments: string[] = []\n) {\n  setNodeEnv('development');\n  // Locate the project root based on the process current working directory.\n  // This enables users to run `npx expo install` from a subdirectory of the project.\n  const projectRoot = options.projectRoot ?? findUpProjectRootOrAssert(process.cwd());\n  require('@expo/env').load(projectRoot);\n\n  // Resolve the package manager used by the project, or based on the provided arguments.\n  const packageManager = PackageManager.createForProject(projectRoot, {\n    npm: options.npm,\n    yarn: options.yarn,\n    bun: options.bun,\n    pnpm: options.pnpm,\n    silent: options.silent,\n    log: Log.log,\n  });\n\n  if (options.check || options.fix) {\n    return await checkPackagesAsync(projectRoot, {\n      packages,\n      options,\n      packageManager,\n      packageManagerArguments,\n    });\n  }\n\n  // Read the project Expo config without plugins.\n  const { exp } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  // Resolve the versioned packages, then install them.\n  return installPackagesAsync(projectRoot, {\n    packageManager,\n    packages,\n    packageManagerArguments,\n    sdkVersion: exp.sdkVersion!,\n  });\n}\n\n/** Version packages and install in a project. */\nexport async function installPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    packageManager,\n    sdkVersion,\n    packageManagerArguments,\n  }: {\n    /**\n     * List of packages to version, grouped by the type of dependency.\n     * @example ['uuid', 'react-native-reanimated@latest']\n     */\n    packages: string[];\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n    /**\n     * SDK to version `packages` for.\n     * @example '44.0.0'\n     */\n    sdkVersion: string;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n  }\n): Promise<void> {\n  // Read the project Expo config without plugins.\n  const { pkg } = getConfig(projectRoot, {\n    // Sometimes users will add a plugin to the config before installing the library,\n    // this wouldn't work unless we dangerously disable plugin serialization.\n    skipPlugins: true,\n  });\n\n  //assertNotInstallingExcludedPackages(projectRoot, packages, pkg);\n\n  const versioning = await getVersionedPackagesAsync(projectRoot, {\n    packages,\n    // sdkVersion is always defined because we don't skipSDKVersionRequirement in getConfig.\n    sdkVersion,\n    pkg,\n  });\n\n  Log.log(\n    chalk`\\u203A Installing ${\n      versioning.messages.length ? versioning.messages.join(' and ') + ' ' : ''\n    }using {bold ${packageManager.name}}`\n  );\n\n  if (versioning.excludedNativeModules.length) {\n    const alreadyExcluded = versioning.excludedNativeModules.filter(\n      (module) => module.isExcludedFromValidation\n    );\n    const specifiedExactVersion = versioning.excludedNativeModules.filter(\n      (module) => !module.isExcludedFromValidation\n    );\n\n    if (alreadyExcluded.length) {\n      Log.log(\n        chalk`\\u203A Using ${joinWithCommasAnd(\n          alreadyExcluded.map(\n            ({ bundledNativeVersion, name, specifiedVersion }) =>\n              `${specifiedVersion || 'latest'} instead of  ${bundledNativeVersion} for ${name}`\n          )\n        )} because ${\n          alreadyExcluded.length > 1 ? 'they are' : 'it is'\n        } listed in {bold expo.install.exclude} in package.json. ${learnMore(\n          'https://expo.dev/more/expo-cli/#configuring-dependency-validation'\n        )}`\n      );\n    }\n\n    if (specifiedExactVersion.length) {\n      Log.log(\n        chalk`\\u203A Using ${joinWithCommasAnd(\n          specifiedExactVersion.map(\n            ({ bundledNativeVersion, name, specifiedVersion }) =>\n              `${specifiedVersion} instead of ${bundledNativeVersion} for ${name}`\n          )\n        )} because ${\n          specifiedExactVersion.length > 1 ? 'these versions' : 'this version'\n        } was explicitly provided. Packages excluded from dependency validation should be listed in {bold expo.install.exclude} in package.json. ${learnMore(\n          'https://expo.dev/more/expo-cli/#configuring-dependency-validation'\n        )}`\n      );\n    }\n  }\n\n  // if updating expo package, install this first, then re-run the command minus expo to install everything else\n  if (packages.find((pkg) => pkg === 'expo')) {\n    const packagesMinusExpo = packages.filter((pkg) => pkg !== 'expo');\n\n    await installExpoPackageAsync(projectRoot, {\n      packageManager,\n      packageManagerArguments,\n      expoPackageToInstall: versioning.packages.find((pkg) => pkg.startsWith('expo@'))!,\n      followUpCommandArgs: packagesMinusExpo,\n    });\n\n    // follow-up commands will be spawned in a detached process, so return immediately\n    return;\n  }\n\n  await packageManager.addAsync([...packageManagerArguments, ...versioning.packages]);\n\n  await applyPluginsAsync(projectRoot, versioning.packages);\n}\n"],"names":["installAsync","installPackagesAsync","PackageManager","Log","packages","options","packageManagerArguments","setNodeEnv","projectRoot","findUpProjectRootOrAssert","process","cwd","require","load","packageManager","createForProject","npm","yarn","bun","pnpm","silent","log","check","fix","checkPackagesAsync","exp","getConfig","skipPlugins","sdkVersion","pkg","versioning","getVersionedPackagesAsync","chalk","messages","length","join","name","excludedNativeModules","alreadyExcluded","filter","module","isExcludedFromValidation","specifiedExactVersion","joinWithCommasAnd","map","bundledNativeVersion","specifiedVersion","learnMore","find","packagesMinusExpo","installExpoPackageAsync","expoPackageToInstall","startsWith","followUpCommandArgs","addAsync","applyPluginsAsync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/installExpoPackage.js b/node_modules/@expo/cli/build/src/install/installExpoPackage.js
new file mode 100644
index 0000000..7ded122
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/install/installExpoPackage.js
@@ -0,0 +1,79 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+exports.installExpoPackageAsync = installExpoPackageAsync;
+var _spawnAsync = _interopRequireDefault(require("@expo/spawn-async"));
+var _chalk = _interopRequireDefault(require("chalk"));
+var Log = _interopRequireWildcard(require("../log"));
+var _getRunningProcess = require("../utils/getRunningProcess");
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
+function _interopRequireWildcard(obj) {
+    if (obj && obj.__esModule) {
+        return obj;
+    } else {
+        var newObj = {};
+        if (obj != null) {
+            for(var key in obj){
+                if (Object.prototype.hasOwnProperty.call(obj, key)) {
+                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
+                    if (desc.get || desc.set) {
+                        Object.defineProperty(newObj, key, desc);
+                    } else {
+                        newObj[key] = obj[key];
+                    }
+                }
+            }
+        }
+        newObj.default = obj;
+        return newObj;
+    }
+}
+async function installExpoPackageAsync(projectRoot, { packageManager , packageManagerArguments , expoPackageToInstall , followUpCommandArgs  }) {
+    // Check if there's potentially a dev server running in the current folder and warn about it
+    // (not guaranteed to be Expo CLI, and the CLI isn't always running on 8081, but it's a good guess)
+    const isExpoMaybeRunningForProject = !!await (0, _getRunningProcess).getRunningProcess(8081);
+    if (isExpoMaybeRunningForProject) {
+        Log.warn("The Expo CLI appears to be running this project in another terminal window. Close and restart any Expo CLI instances after the installation to complete the update.");
+    }
+    // Safe to use current process to upgrade Expo package- doesn't affect current process
+    try {
+        await packageManager.addAsync([
+            ...packageManagerArguments,
+            expoPackageToInstall
+        ]);
+    } catch (error) {
+        Log.error(_chalk.default`Cannot install the latest Expo package. Install {bold expo@latest} with ${packageManager.name} and then run {bold npx expo install} again.`);
+        throw error;
+    }
+    Log.log(_chalk.default`\u203A Running {bold npx expo install} under the updated expo version`);
+    let commandSegments = [
+        "expo",
+        "install",
+        ...followUpCommandArgs
+    ];
+    if (packageManagerArguments.length) {
+        commandSegments = [
+            ...commandSegments,
+            "--",
+            ...packageManagerArguments
+        ];
+    }
+    Log.log("> " + commandSegments.join(" "));
+    // Spawn a new process to install the rest of the packages, as only then will the latest Expo package be used
+    if (followUpCommandArgs.length) {
+        await (0, _spawnAsync).default("npx", commandSegments, {
+            stdio: "inherit",
+            cwd: projectRoot,
+            env: {
+                ...process.env
+            }
+        });
+    }
+}
+
+//# sourceMappingURL=installExpoPackage.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/install/installExpoPackage.js.map b/node_modules/@expo/cli/build/src/install/installExpoPackage.js.map
new file mode 100644
index 0000000..1c126b3
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/install/installExpoPackage.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../src/install/installExpoPackage.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\n\nimport * as Log from '../log';\nimport { getRunningProcess } from '../utils/getRunningProcess';\n\n/**\n * Given a list of incompatible packages, installs the correct versions of the packages with the package manager used for the project.\n * This exits immediately after spawning the install command, since the command shouldn't remain running while it is being updated.\n */\nexport async function installExpoPackageAsync(\n  projectRoot: string,\n  {\n    packageManager,\n    packageManagerArguments,\n    expoPackageToInstall,\n    followUpCommandArgs,\n  }: {\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n    expoPackageToInstall: string;\n    followUpCommandArgs: string[];\n  }\n) {\n  // Check if there's potentially a dev server running in the current folder and warn about it\n  // (not guaranteed to be Expo CLI, and the CLI isn't always running on 8081, but it's a good guess)\n  const isExpoMaybeRunningForProject = !!(await getRunningProcess(8081));\n\n  if (isExpoMaybeRunningForProject) {\n    Log.warn(\n      'The Expo CLI appears to be running this project in another terminal window. Close and restart any Expo CLI instances after the installation to complete the update.'\n    );\n  }\n\n  // Safe to use current process to upgrade Expo package- doesn't affect current process\n  try {\n    await packageManager.addAsync([...packageManagerArguments, expoPackageToInstall]);\n  } catch (error) {\n    Log.error(\n      chalk`Cannot install the latest Expo package. Install {bold expo@latest} with ${packageManager.name} and then run {bold npx expo install} again.`\n    );\n    throw error;\n  }\n\n  Log.log(chalk`\\u203A Running {bold npx expo install} under the updated expo version`);\n\n  let commandSegments = ['expo', 'install', ...followUpCommandArgs];\n  if (packageManagerArguments.length) {\n    commandSegments = [...commandSegments, '--', ...packageManagerArguments];\n  }\n\n  Log.log('> ' + commandSegments.join(' '));\n\n  // Spawn a new process to install the rest of the packages, as only then will the latest Expo package be used\n  if (followUpCommandArgs.length) {\n    await spawnAsync('npx', commandSegments, {\n      stdio: 'inherit',\n      cwd: projectRoot,\n      env: { ...process.env },\n    });\n  }\n}\n"],"names":["installExpoPackageAsync","Log","projectRoot","packageManager","packageManagerArguments","expoPackageToInstall","followUpCommandArgs","isExpoMaybeRunningForProject","getRunningProcess","warn","addAsync","error","chalk","name","log","commandSegments","length","join","spawnAsync","stdio","cwd","env","process"],"mappings":"AAAA;;;;QAWsBA,uBAAuB,GAAvBA,uBAAuB;AAVtB,IAAA,WAAmB,kCAAnB,mBAAmB,EAAA;AACxB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAEbC,IAAAA,GAAG,mCAAM,QAAQ,EAAd;AACmB,IAAA,kBAA4B,WAA5B,4BAA4B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvD,eAAeD,uBAAuB,CAC3CE,WAAmB,EACnB,EACEC,cAAc,CAAA,EACdC,uBAAuB,CAAA,EACvBC,oBAAoB,CAAA,EACpBC,mBAAmB,CAAA,EAWpB,EACD;IACA,4FAA4F;IAC5F,mGAAmG;IACnG,MAAMC,4BAA4B,GAAG,CAAC,CAAE,MAAMC,CAAAA,GAAAA,kBAAiB,AAAM,CAAA,kBAAN,CAAC,IAAI,CAAC,AAAC,AAAC;IAEvE,IAAID,4BAA4B,EAAE;QAChCN,GAAG,CAACQ,IAAI,CACN,qKAAqK,CACtK,CAAC;KACH;IAED,sFAAsF;IACtF,IAAI;QACF,MAAMN,cAAc,CAACO,QAAQ,CAAC;eAAIN,uBAAuB;YAAEC,oBAAoB;SAAC,CAAC,CAAC;KACnF,CAAC,OAAOM,KAAK,EAAE;QACdV,GAAG,CAACU,KAAK,CACPC,MAAK,QAAA,CAAC,wEAAwE,EAAET,cAAc,CAACU,IAAI,CAAC,4CAA4C,CAAC,CAClJ,CAAC;QACF,MAAMF,KAAK,CAAC;KACb;IAEDV,GAAG,CAACa,GAAG,CAACF,MAAK,QAAA,CAAC,qEAAqE,CAAC,CAAC,CAAC;IAEtF,IAAIG,eAAe,GAAG;QAAC,MAAM;QAAE,SAAS;WAAKT,mBAAmB;KAAC,AAAC;IAClE,IAAIF,uBAAuB,CAACY,MAAM,EAAE;QAClCD,eAAe,GAAG;eAAIA,eAAe;YAAE,IAAI;eAAKX,uBAAuB;SAAC,CAAC;KAC1E;IAEDH,GAAG,CAACa,GAAG,CAAC,IAAI,GAAGC,eAAe,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAE1C,6GAA6G;IAC7G,IAAIX,mBAAmB,CAACU,MAAM,EAAE;QAC9B,MAAME,CAAAA,GAAAA,WAAU,AAId,CAAA,QAJc,CAAC,KAAK,EAAEH,eAAe,EAAE;YACvCI,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAElB,WAAW;YAChBmB,GAAG,EAAE;gBAAE,GAAGC,OAAO,CAACD,GAAG;aAAE;SACxB,CAAC,CAAC;KACJ;CACF"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js b/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js
index 503c4cb..2783ec4 100644
--- a/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js
+++ b/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js
@@ -22,14 +22,18 @@ const debug = require("debug")("expo:doctor:dependencies:getVersionedPackages");
     if (!version) {
         return {};
     }
-    const { relatedPackages , facebookReactVersion , facebookReactNativeVersion  } = version;
+    const { relatedPackages , facebookReactVersion , facebookReactNativeVersion , expoVersion  } = version;
     const reactVersion = facebookReactVersion ? {
         react: facebookReactVersion,
         "react-dom": facebookReactVersion
     } : undefined;
+    const expoVersionIfAvailable = expoVersion ? {
+        expo: expoVersion
+    } : undefined;
     return {
         ...relatedPackages,
         ...reactVersion,
+        ...expoVersionIfAvailable,
         "react-native": facebookReactNativeVersion
     };
 }
@@ -82,7 +86,7 @@ async function getVersionedPackagesAsync(projectRoot, { packages , sdkVersion ,
     let othersCount = 0;
     const excludedNativeModules = [];
     const versionedPackages = packages.map((arg)=>{
-        const { name , type , raw  } = (0, _npmPackageArg).default(arg);
+        const { name , type , raw , rawSpec  } = (0, _npmPackageArg).default(arg);
         if ([
             "tag",
             "version",
@@ -91,11 +95,15 @@ async function getVersionedPackagesAsync(projectRoot, { packages , sdkVersion ,
             var ref, ref1, ref2;
             // Unimodule packages from npm registry are modified to use the bundled version.
             // Some packages have the recommended version listed in https://exp.host/--/api/v2/versions.
-            if (pkg == null ? void 0 : (ref = pkg.expo) == null ? void 0 : (ref1 = ref.install) == null ? void 0 : (ref2 = ref1.exclude) == null ? void 0 : ref2.includes(name)) {
+            const isExcludedFromValidation = pkg == null ? void 0 : (ref = pkg.expo) == null ? void 0 : (ref1 = ref.install) == null ? void 0 : (ref2 = ref1.exclude) == null ? void 0 : ref2.includes(name);
+            const hasSpecifiedExactVersion = rawSpec !== "";
+            if (isExcludedFromValidation || hasSpecifiedExactVersion) {
                 othersCount++;
                 excludedNativeModules.push({
                     name,
-                    bundledNativeVersion: versionsForSdk[name]
+                    bundledNativeVersion: versionsForSdk[name],
+                    isExcludedFromValidation,
+                    specifiedVersion: rawSpec
                 });
                 return raw;
             }
diff --git a/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js.map b/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js.map
index 7977e3c..4bd3ca0 100644
--- a/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js.map
+++ b/node_modules/@expo/cli/build/src/start/doctor/dependencies/getVersionedPackages.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/doctor/dependencies/getVersionedPackages.ts"],"sourcesContent":["import { PackageJSONConfig } from '@expo/config';\nimport npmPackageArg from 'npm-package-arg';\n\nimport { getVersionedNativeModulesAsync } from './bundledNativeModules';\nimport { getVersionsAsync, SDKVersion } from '../../../api/getVersions';\nimport { Log } from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\n\nconst debug = require('debug')(\n  'expo:doctor:dependencies:getVersionedPackages'\n) as typeof console.log;\n\nexport type DependencyList = Record<string, string>;\n\n/** Adds `react-dom`, `react`, and `react-native` to the list of known package versions (`relatedPackages`) */\nfunction normalizeSdkVersionObject(version?: SDKVersion): Record<string, string> {\n  if (!version) {\n    return {};\n  }\n  const { relatedPackages, facebookReactVersion, facebookReactNativeVersion } = version;\n\n  const reactVersion = facebookReactVersion\n    ? {\n        react: facebookReactVersion,\n        'react-dom': facebookReactVersion,\n      }\n    : undefined;\n\n  return {\n    ...relatedPackages,\n    ...reactVersion,\n    'react-native': facebookReactNativeVersion,\n  };\n}\n\n/** Get the known versions for a given SDK, combines all sources. */\nexport async function getCombinedKnownVersionsAsync({\n  projectRoot,\n  sdkVersion,\n  skipCache,\n}: {\n  projectRoot: string;\n  sdkVersion?: string;\n  skipCache?: boolean;\n}) {\n  const bundledNativeModules = sdkVersion\n    ? await getVersionedNativeModulesAsync(projectRoot, sdkVersion)\n    : {};\n  const versionsForSdk = await getRemoteVersionsForSdkAsync({ sdkVersion, skipCache });\n  return {\n    ...bundledNativeModules,\n    // Prefer the remote versions over the bundled versions, this enables us to push\n    // emergency fixes that users can access without having to update the `expo` package.\n    ...versionsForSdk,\n  };\n}\n\n/** @returns a key/value list of known dependencies and their version (including range). */\nexport async function getRemoteVersionsForSdkAsync({\n  sdkVersion,\n  skipCache,\n}: { sdkVersion?: string; skipCache?: boolean } = {}): Promise<DependencyList> {\n  if (env.EXPO_OFFLINE) {\n    Log.warn('Dependency validation is unreliable in offline-mode');\n    return {};\n  }\n\n  try {\n    const { sdkVersions } = await getVersionsAsync({ skipCache });\n\n    // We only want versioned dependencies so skip if they cannot be found.\n    if (!sdkVersion || !(sdkVersion in sdkVersions)) {\n      debug(\n        `Skipping versioned dependencies because the SDK version is not found. (sdkVersion: ${sdkVersion}, available: ${Object.keys(\n          sdkVersions\n        ).join(', ')})`\n      );\n      return {};\n    }\n\n    const version = sdkVersions[sdkVersion as keyof typeof sdkVersions] as unknown as SDKVersion;\n\n    return normalizeSdkVersionObject(version);\n  } catch (error: any) {\n    if (error instanceof CommandError && error.code === 'OFFLINE') {\n      return getRemoteVersionsForSdkAsync({ sdkVersion, skipCache });\n    }\n    throw error;\n  }\n}\n\n/**\n * Versions a list of `packages` against a given `sdkVersion` based on local and remote versioning resources.\n *\n * @param projectRoot\n * @param param1\n * @returns\n */\nexport async function getVersionedPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    sdkVersion,\n    pkg,\n  }: {\n    /** List of npm packages to process. */\n    packages: string[];\n    /** Target SDK Version number to version the `packages` for. */\n    sdkVersion: string;\n    pkg: PackageJSONConfig;\n  }\n): Promise<{\n  packages: string[];\n  messages: string[];\n  excludedNativeModules: { name: string; bundledNativeVersion: string }[];\n}> {\n  const versionsForSdk = await getCombinedKnownVersionsAsync({\n    projectRoot,\n    sdkVersion,\n    skipCache: true,\n  });\n\n  let nativeModulesCount = 0;\n  let othersCount = 0;\n  const excludedNativeModules: { name: string; bundledNativeVersion: string }[] = [];\n\n  const versionedPackages = packages.map((arg) => {\n    const { name, type, raw } = npmPackageArg(arg);\n\n    if (['tag', 'version', 'range'].includes(type) && name && versionsForSdk[name]) {\n      // Unimodule packages from npm registry are modified to use the bundled version.\n      // Some packages have the recommended version listed in https://exp.host/--/api/v2/versions.\n      if (pkg?.expo?.install?.exclude?.includes(name)) {\n        othersCount++;\n        excludedNativeModules.push({ name, bundledNativeVersion: versionsForSdk[name] });\n        return raw;\n      }\n      nativeModulesCount++;\n      return `${name}@${versionsForSdk[name]}`;\n    } else {\n      // Other packages are passed through unmodified.\n      othersCount++;\n      return raw;\n    }\n  });\n\n  const messages = getOperationLog({\n    othersCount,\n    nativeModulesCount,\n    sdkVersion,\n  });\n\n  return {\n    packages: versionedPackages,\n    messages,\n    excludedNativeModules,\n  };\n}\n\n/** Craft a set of messages regarding the install operations. */\nexport function getOperationLog({\n  nativeModulesCount,\n  sdkVersion,\n  othersCount,\n}: {\n  nativeModulesCount: number;\n  othersCount: number;\n  sdkVersion: string;\n}): string[] {\n  return [\n    nativeModulesCount > 0 &&\n      `${nativeModulesCount} SDK ${sdkVersion} compatible native ${\n        nativeModulesCount === 1 ? 'module' : 'modules'\n      }`,\n    othersCount > 0 && `${othersCount} other ${othersCount === 1 ? 'package' : 'packages'}`,\n  ].filter(Boolean) as string[];\n}\n"],"names":["getCombinedKnownVersionsAsync","getRemoteVersionsForSdkAsync","getVersionedPackagesAsync","getOperationLog","debug","require","normalizeSdkVersionObject","version","relatedPackages","facebookReactVersion","facebookReactNativeVersion","reactVersion","react","undefined","projectRoot","sdkVersion","skipCache","bundledNativeModules","getVersionedNativeModulesAsync","versionsForSdk","env","EXPO_OFFLINE","Log","warn","sdkVersions","getVersionsAsync","Object","keys","join","error","CommandError","code","packages","pkg","nativeModulesCount","othersCount","excludedNativeModules","versionedPackages","map","arg","name","type","raw","npmPackageArg","includes","expo","install","exclude","push","bundledNativeVersion","messages","filter","Boolean"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/doctor/dependencies/getVersionedPackages.ts"],"sourcesContent":["import { PackageJSONConfig } from '@expo/config';\nimport npmPackageArg from 'npm-package-arg';\n\nimport { getVersionedNativeModulesAsync } from './bundledNativeModules';\nimport { getVersionsAsync, SDKVersion } from '../../../api/getVersions';\nimport { Log } from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\n\nconst debug = require('debug')(\n  'expo:doctor:dependencies:getVersionedPackages'\n) as typeof console.log;\n\nexport type DependencyList = Record<string, string>;\n\n/** Adds `react-dom`, `react`, and `react-native` to the list of known package versions (`relatedPackages`) */\nfunction normalizeSdkVersionObject(version?: SDKVersion): Record<string, string> {\n  if (!version) {\n    return {};\n  }\n  const { relatedPackages, facebookReactVersion, facebookReactNativeVersion, expoVersion } =\n    version;\n\n  const reactVersion = facebookReactVersion\n    ? {\n        react: facebookReactVersion,\n        'react-dom': facebookReactVersion,\n      }\n    : undefined;\n\n  const expoVersionIfAvailable = expoVersion ? { expo: expoVersion } : undefined;\n\n  return {\n    ...relatedPackages,\n    ...reactVersion,\n    ...expoVersionIfAvailable,\n    'react-native': facebookReactNativeVersion,\n  };\n}\n\n/** Get the known versions for a given SDK, combines all sources. */\nexport async function getCombinedKnownVersionsAsync({\n  projectRoot,\n  sdkVersion,\n  skipCache,\n}: {\n  projectRoot: string;\n  sdkVersion?: string;\n  skipCache?: boolean;\n}) {\n  const bundledNativeModules = sdkVersion\n    ? await getVersionedNativeModulesAsync(projectRoot, sdkVersion)\n    : {};\n  const versionsForSdk = await getRemoteVersionsForSdkAsync({ sdkVersion, skipCache });\n  return {\n    ...bundledNativeModules,\n    // Prefer the remote versions over the bundled versions, this enables us to push\n    // emergency fixes that users can access without having to update the `expo` package.\n    ...versionsForSdk,\n  };\n}\n\n/** @returns a key/value list of known dependencies and their version (including range). */\nexport async function getRemoteVersionsForSdkAsync({\n  sdkVersion,\n  skipCache,\n}: { sdkVersion?: string; skipCache?: boolean } = {}): Promise<DependencyList> {\n  if (env.EXPO_OFFLINE) {\n    Log.warn('Dependency validation is unreliable in offline-mode');\n    return {};\n  }\n\n  try {\n    const { sdkVersions } = await getVersionsAsync({ skipCache });\n\n    // We only want versioned dependencies so skip if they cannot be found.\n    if (!sdkVersion || !(sdkVersion in sdkVersions)) {\n      debug(\n        `Skipping versioned dependencies because the SDK version is not found. (sdkVersion: ${sdkVersion}, available: ${Object.keys(\n          sdkVersions\n        ).join(', ')})`\n      );\n      return {};\n    }\n\n    const version = sdkVersions[sdkVersion as keyof typeof sdkVersions] as unknown as SDKVersion;\n\n    return normalizeSdkVersionObject(version);\n  } catch (error: any) {\n    if (error instanceof CommandError && error.code === 'OFFLINE') {\n      return getRemoteVersionsForSdkAsync({ sdkVersion, skipCache });\n    }\n    throw error;\n  }\n}\n\ntype ExcludedNativeModules = {\n  name: string;\n  bundledNativeVersion: string;\n  isExcludedFromValidation: boolean;\n  specifiedVersion?: string; // e.g. 1.2.3, latest\n};\n\n/**\n * Versions a list of `packages` against a given `sdkVersion` based on local and remote versioning resources.\n *\n * @param projectRoot\n * @param param1\n * @returns\n */\nexport async function getVersionedPackagesAsync(\n  projectRoot: string,\n  {\n    packages,\n    sdkVersion,\n    pkg,\n  }: {\n    /** List of npm packages to process. */\n    packages: string[];\n    /** Target SDK Version number to version the `packages` for. */\n    sdkVersion: string;\n    pkg: PackageJSONConfig;\n  }\n): Promise<{\n  packages: string[];\n  messages: string[];\n  excludedNativeModules: ExcludedNativeModules[];\n}> {\n  const versionsForSdk = await getCombinedKnownVersionsAsync({\n    projectRoot,\n    sdkVersion,\n    skipCache: true,\n  });\n\n  let nativeModulesCount = 0;\n  let othersCount = 0;\n  const excludedNativeModules: ExcludedNativeModules[] = [];\n\n  const versionedPackages = packages.map((arg) => {\n    const { name, type, raw, rawSpec } = npmPackageArg(arg);\n\n    if (['tag', 'version', 'range'].includes(type) && name && versionsForSdk[name]) {\n      // Unimodule packages from npm registry are modified to use the bundled version.\n      // Some packages have the recommended version listed in https://exp.host/--/api/v2/versions.\n      const isExcludedFromValidation = pkg?.expo?.install?.exclude?.includes(name);\n      const hasSpecifiedExactVersion = rawSpec !== '';\n      if (isExcludedFromValidation || hasSpecifiedExactVersion) {\n        othersCount++;\n        excludedNativeModules.push({\n          name,\n          bundledNativeVersion: versionsForSdk[name],\n          isExcludedFromValidation,\n          specifiedVersion: rawSpec,\n        });\n        return raw;\n      }\n      nativeModulesCount++;\n      return `${name}@${versionsForSdk[name]}`;\n    } else {\n      // Other packages are passed through unmodified.\n      othersCount++;\n      return raw;\n    }\n  });\n\n  const messages = getOperationLog({\n    othersCount,\n    nativeModulesCount,\n    sdkVersion,\n  });\n\n  return {\n    packages: versionedPackages,\n    messages,\n    excludedNativeModules,\n  };\n}\n\n/** Craft a set of messages regarding the install operations. */\nexport function getOperationLog({\n  nativeModulesCount,\n  sdkVersion,\n  othersCount,\n}: {\n  nativeModulesCount: number;\n  othersCount: number;\n  sdkVersion: string;\n}): string[] {\n  return [\n    nativeModulesCount > 0 &&\n      `${nativeModulesCount} SDK ${sdkVersion} compatible native ${\n        nativeModulesCount === 1 ? 'module' : 'modules'\n      }`,\n    othersCount > 0 && `${othersCount} other ${othersCount === 1 ? 'package' : 'packages'}`,\n  ].filter(Boolean) as string[];\n}\n"],"names":["getCombinedKnownVersionsAsync","getRemoteVersionsForSdkAsync","getVersionedPackagesAsync","getOperationLog","debug","require","normalizeSdkVersionObject","version","relatedPackages","facebookReactVersion","facebookReactNativeVersion","expoVersion","reactVersion","react","undefined","expoVersionIfAvailable","expo","projectRoot","sdkVersion","skipCache","bundledNativeModules","getVersionedNativeModulesAsync","versionsForSdk","env","EXPO_OFFLINE","Log","warn","sdkVersions","getVersionsAsync","Object","keys","join","error","CommandError","code","packages","pkg","nativeModulesCount","othersCount","excludedNativeModules","versionedPackages","map","arg","name","type","raw","rawSpec","npmPackageArg","includes","isExcludedFromValidation","install","exclude","hasSpecifiedExactVersion","push","bundledNativeVersion","specifiedVersion","messages","filter","Boolean"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js b/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js
index 86cf006..18f2536 100644
--- a/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js
+++ b/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js
@@ -57,10 +57,10 @@ function logIncorrectDependencies(incorrectDeps) {
     if (!incorrectDeps.length) {
         return true;
     }
-    Log.warn(_chalk.default`Some dependencies are incompatible with the installed {bold expo} version:`);
+    Log.warn(_chalk.default`The following packages should be updated for best compatibility with the installed {bold expo} version:`);
     incorrectDeps.forEach((dep)=>logInvalidDependency(dep)
     );
-    Log.warn("Your project may not work correctly until you install the correct versions of the packages.\n" + _chalk.default`Fix with: {bold npx expo install --fix}`);
+    Log.warn("Your project may not work correctly until you install the correct versions of the packages.");
     return false;
 }
 async function getVersionedDependenciesAsync(projectRoot, exp, pkg, packagesToCheck) {
@@ -157,7 +157,7 @@ function findIncorrectDependencies(pkg, packageVersions, bundledNativeModules) {
     for (const packageName of packages){
         const expectedVersionOrRange = bundledNativeModules[packageName];
         const actualVersion = packageVersions[packageName];
-        if (typeof expectedVersionOrRange === "string" && !_semver.default.intersects(expectedVersionOrRange, actualVersion)) {
+        if (isDependencyVersionIncorrect(packageName, expectedVersionOrRange, actualVersion)) {
             incorrectDeps.push({
                 packageName,
                 packageType: findDependencyType(pkg, packageName),
@@ -168,6 +168,23 @@ function findIncorrectDependencies(pkg, packageVersions, bundledNativeModules) {
     }
     return incorrectDeps;
 }
+function isDependencyVersionIncorrect(packageName, expectedVersionOrRange, actualVersion) {
+    if (typeof expectedVersionOrRange !== "string") {
+        return false;
+    }
+    // we never want to go backwards with the expo patch version
+    if (packageName === "expo") {
+        if (_semver.default.ltr(actualVersion, expectedVersionOrRange)) {
+            return true;
+        }
+        return false;
+    }
+    // all other packages: version range is based on Expo SDK version, so we always want to match range
+    if (!_semver.default.intersects(expectedVersionOrRange, actualVersion)) {
+        return true;
+    }
+    return false;
+}
 function findDependencyType(pkg, packageName) {
     if (pkg.devDependencies && packageName in pkg.devDependencies) {
         return "devDependencies";
diff --git a/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js.map b/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js.map
index 80b3f9b..1210e3b 100644
--- a/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js.map
+++ b/node_modules/@expo/cli/build/src/start/doctor/dependencies/validateDependenciesVersions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/doctor/dependencies/validateDependenciesVersions.ts"],"sourcesContent":["import { ExpoConfig, PackageJSONConfig } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport resolveFrom from 'resolve-from';\nimport semver from 'semver';\n\nimport { BundledNativeModules } from './bundledNativeModules';\nimport { getCombinedKnownVersionsAsync } from './getVersionedPackages';\nimport * as Log from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\n\nconst debug = require('debug')('expo:doctor:dependencies:validate') as typeof console.log;\n\ninterface IncorrectDependency {\n  packageName: string;\n  packageType: 'dependencies' | 'devDependencies';\n  expectedVersionOrRange: string;\n  actualVersion: string;\n}\n\n/**\n * Print a list of incorrect dependency versions.\n * This only checks dependencies when not running in offline mode.\n *\n * @param projectRoot Expo project root.\n * @param exp Expo project config.\n * @param pkg Project's `package.json`.\n * @param packagesToCheck A list of packages to check, if undefined or empty, all will be checked.\n * @returns `true` if there are no incorrect dependencies.\n */\nexport async function validateDependenciesVersionsAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'>,\n  pkg: PackageJSONConfig,\n  packagesToCheck?: string[]\n): Promise<boolean | null> {\n  if (env.EXPO_OFFLINE) {\n    Log.warn('Skipping dependency validation in offline mode');\n    return null;\n  }\n\n  const incorrectDeps = await getVersionedDependenciesAsync(projectRoot, exp, pkg, packagesToCheck);\n  return logIncorrectDependencies(incorrectDeps);\n}\n\nfunction logInvalidDependency({\n  packageName,\n  expectedVersionOrRange,\n  actualVersion,\n}: IncorrectDependency) {\n  Log.warn(\n    // chalk` - {underline ${packageName}} - expected version: {underline ${expectedVersionOrRange}} - actual version installed: {underline ${actualVersion}}`\n    chalk`  {bold ${packageName}}{cyan @}{red ${actualVersion}} - expected version: {green ${expectedVersionOrRange}}`\n  );\n}\n\nexport function logIncorrectDependencies(incorrectDeps: IncorrectDependency[]) {\n  if (!incorrectDeps.length) {\n    return true;\n  }\n\n  Log.warn(chalk`Some dependencies are incompatible with the installed {bold expo} version:`);\n  incorrectDeps.forEach((dep) => logInvalidDependency(dep));\n\n  Log.warn(\n    'Your project may not work correctly until you install the correct versions of the packages.\\n' +\n      chalk`Fix with: {bold npx expo install --fix}`\n  );\n  return false;\n}\n\n/**\n * Return a list of versioned dependencies for the project SDK version.\n *\n * @param projectRoot Expo project root.\n * @param exp Expo project config.\n * @param pkg Project's `package.json`.\n * @param packagesToCheck A list of packages to check, if undefined or empty, all will be checked.\n * @returns A list of incorrect dependencies.\n */\nexport async function getVersionedDependenciesAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'>,\n  pkg: PackageJSONConfig,\n  packagesToCheck?: string[]\n): Promise<IncorrectDependency[]> {\n  // This should never happen under normal circumstances since\n  // the CLI is versioned in the `expo` package.\n  assert(exp.sdkVersion, 'SDK Version is missing');\n\n  // Get from both endpoints and combine the known package versions.\n  const combinedKnownPackages = await getCombinedKnownVersionsAsync({\n    projectRoot,\n    sdkVersion: exp.sdkVersion,\n  });\n  // debug(`Known dependencies: %O`, combinedKnownPackages);\n\n  const resolvedDependencies = packagesToCheck?.length\n    ? // Diff the provided packages to ensure we only check against installed packages.\n      getFilteredObject(packagesToCheck, { ...pkg.dependencies, ...pkg.devDependencies })\n    : // If no packages are provided, check against the `package.json` `dependencies` + `devDependencies` object.\n      { ...pkg.dependencies, ...pkg.devDependencies };\n  debug(`Checking dependencies for ${exp.sdkVersion}: %O`, resolvedDependencies);\n\n  // intersection of packages from package.json and bundled native modules\n  const { known: resolvedPackagesToCheck, unknown } = getPackagesToCheck(\n    resolvedDependencies,\n    combinedKnownPackages\n  );\n  debug(`Comparing known versions: %O`, resolvedPackagesToCheck);\n  debug(`Skipping packages that cannot be versioned automatically: %O`, unknown);\n  // read package versions from the file system (node_modules)\n  const packageVersions = await resolvePackageVersionsAsync(projectRoot, resolvedPackagesToCheck);\n  debug(`Package versions: %O`, packageVersions);\n  // find incorrect dependencies by comparing the actual package versions with the bundled native module version ranges\n  let incorrectDeps = findIncorrectDependencies(pkg, packageVersions, combinedKnownPackages);\n  debug(`Incorrect dependencies: %O`, incorrectDeps);\n\n  if (pkg?.expo?.install?.exclude) {\n    const packagesToExclude = pkg.expo.install.exclude;\n    const incorrectAndExcludedDeps = incorrectDeps.filter((dep) =>\n      packagesToExclude.includes(dep.packageName)\n    );\n    debug(\n      `Incorrect dependency warnings filtered out by expo.install.exclude: %O`,\n      incorrectAndExcludedDeps.map((dep) => dep.packageName)\n    );\n    incorrectDeps = incorrectDeps.filter((dep) => !packagesToExclude.includes(dep.packageName));\n  }\n\n  return incorrectDeps;\n}\n\nfunction getFilteredObject(keys: string[], object: Record<string, string>) {\n  return keys.reduce<Record<string, string>>((acc, key) => {\n    acc[key] = object[key];\n    return acc;\n  }, {});\n}\n\nfunction getPackagesToCheck(\n  dependencies: Record<string, string> | null | undefined,\n  bundledNativeModules: BundledNativeModules\n): { known: string[]; unknown: string[] } {\n  const dependencyNames = Object.keys(dependencies ?? {});\n  const known: string[] = [];\n  const unknown: string[] = [];\n  for (const dependencyName of dependencyNames) {\n    if (dependencyName in bundledNativeModules) {\n      known.push(dependencyName);\n    } else {\n      unknown.push(dependencyName);\n    }\n  }\n  return { known, unknown };\n}\n\nasync function resolvePackageVersionsAsync(\n  projectRoot: string,\n  packages: string[]\n): Promise<Record<string, string>> {\n  const packageVersionsFromPackageJSON = await Promise.all(\n    packages.map((packageName) => getPackageVersionAsync(projectRoot, packageName))\n  );\n  return packages.reduce(\n    (acc, packageName, idx) => {\n      acc[packageName] = packageVersionsFromPackageJSON[idx];\n      return acc;\n    },\n    {} as Record<string, string>\n  );\n}\n\nasync function getPackageVersionAsync(projectRoot: string, packageName: string): Promise<string> {\n  let packageJsonPath: string | undefined;\n  try {\n    packageJsonPath = resolveFrom(projectRoot, `${packageName}/package.json`);\n  } catch (error: any) {\n    // This is a workaround for packages using `exports`. If this doesn't\n    // include `package.json`, we have to use the error message to get the location.\n    if (error.code === 'ERR_PACKAGE_PATH_NOT_EXPORTED') {\n      packageJsonPath = error.message.match(/(\"exports\"|defined) in (.*)$/i)?.[2];\n    }\n  }\n  if (!packageJsonPath) {\n    throw new CommandError(\n      `\"${packageName}\" is added as a dependency in your project's package.json but it doesn't seem to be installed. Please run \"yarn\" or \"npm install\" to fix this issue.`\n    );\n  }\n  const packageJson = await JsonFile.readAsync<BundledNativeModules>(packageJsonPath);\n  return packageJson.version;\n}\n\nfunction findIncorrectDependencies(\n  pkg: PackageJSONConfig,\n  packageVersions: Record<string, string>,\n  bundledNativeModules: BundledNativeModules\n): IncorrectDependency[] {\n  const packages = Object.keys(packageVersions);\n  const incorrectDeps: IncorrectDependency[] = [];\n  for (const packageName of packages) {\n    const expectedVersionOrRange = bundledNativeModules[packageName];\n    const actualVersion = packageVersions[packageName];\n    if (\n      typeof expectedVersionOrRange === 'string' &&\n      !semver.intersects(expectedVersionOrRange, actualVersion)\n    ) {\n      incorrectDeps.push({\n        packageName,\n        packageType: findDependencyType(pkg, packageName),\n        expectedVersionOrRange,\n        actualVersion,\n      });\n    }\n  }\n  return incorrectDeps;\n}\n\nfunction findDependencyType(\n  pkg: PackageJSONConfig,\n  packageName: string\n): IncorrectDependency['packageType'] {\n  if (pkg.devDependencies && packageName in pkg.devDependencies) {\n    return 'devDependencies';\n  }\n\n  return 'dependencies';\n}\n"],"names":["validateDependenciesVersionsAsync","logIncorrectDependencies","getVersionedDependenciesAsync","Log","debug","require","projectRoot","exp","pkg","packagesToCheck","env","EXPO_OFFLINE","warn","incorrectDeps","logInvalidDependency","packageName","expectedVersionOrRange","actualVersion","chalk","length","forEach","dep","assert","sdkVersion","combinedKnownPackages","getCombinedKnownVersionsAsync","resolvedDependencies","getFilteredObject","dependencies","devDependencies","known","resolvedPackagesToCheck","unknown","getPackagesToCheck","packageVersions","resolvePackageVersionsAsync","findIncorrectDependencies","expo","install","exclude","packagesToExclude","incorrectAndExcludedDeps","filter","includes","map","keys","object","reduce","acc","key","bundledNativeModules","dependencyNames","Object","dependencyName","push","packages","packageVersionsFromPackageJSON","Promise","all","getPackageVersionAsync","idx","packageJsonPath","resolveFrom","error","code","message","match","CommandError","packageJson","JsonFile","readAsync","version","semver","intersects","packageType","findDependencyType"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/doctor/dependencies/validateDependenciesVersions.ts"],"sourcesContent":["import { ExpoConfig, PackageJSONConfig } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport resolveFrom from 'resolve-from';\nimport semver from 'semver';\n\nimport { BundledNativeModules } from './bundledNativeModules';\nimport { getCombinedKnownVersionsAsync } from './getVersionedPackages';\nimport * as Log from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\n\nconst debug = require('debug')('expo:doctor:dependencies:validate') as typeof console.log;\n\ninterface IncorrectDependency {\n  packageName: string;\n  packageType: 'dependencies' | 'devDependencies';\n  expectedVersionOrRange: string;\n  actualVersion: string;\n}\n\n/**\n * Print a list of incorrect dependency versions.\n * This only checks dependencies when not running in offline mode.\n *\n * @param projectRoot Expo project root.\n * @param exp Expo project config.\n * @param pkg Project's `package.json`.\n * @param packagesToCheck A list of packages to check, if undefined or empty, all will be checked.\n * @returns `true` if there are no incorrect dependencies.\n */\nexport async function validateDependenciesVersionsAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'>,\n  pkg: PackageJSONConfig,\n  packagesToCheck?: string[]\n): Promise<boolean | null> {\n  if (env.EXPO_OFFLINE) {\n    Log.warn('Skipping dependency validation in offline mode');\n    return null;\n  }\n\n  const incorrectDeps = await getVersionedDependenciesAsync(projectRoot, exp, pkg, packagesToCheck);\n  return logIncorrectDependencies(incorrectDeps);\n}\n\nfunction logInvalidDependency({\n  packageName,\n  expectedVersionOrRange,\n  actualVersion,\n}: IncorrectDependency) {\n  Log.warn(\n    // chalk` - {underline ${packageName}} - expected version: {underline ${expectedVersionOrRange}} - actual version installed: {underline ${actualVersion}}`\n    chalk`  {bold ${packageName}}{cyan @}{red ${actualVersion}} - expected version: {green ${expectedVersionOrRange}}`\n  );\n}\n\nexport function logIncorrectDependencies(incorrectDeps: IncorrectDependency[]) {\n  if (!incorrectDeps.length) {\n    return true;\n  }\n\n  Log.warn(\n    chalk`The following packages should be updated for best compatibility with the installed {bold expo} version:`\n  );\n  incorrectDeps.forEach((dep) => logInvalidDependency(dep));\n\n  Log.warn(\n    'Your project may not work correctly until you install the correct versions of the packages.'\n  );\n\n  return false;\n}\n\n/**\n * Return a list of versioned dependencies for the project SDK version.\n *\n * @param projectRoot Expo project root.\n * @param exp Expo project config.\n * @param pkg Project's `package.json`.\n * @param packagesToCheck A list of packages to check, if undefined or empty, all will be checked.\n * @returns A list of incorrect dependencies.\n */\nexport async function getVersionedDependenciesAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'>,\n  pkg: PackageJSONConfig,\n  packagesToCheck?: string[]\n): Promise<IncorrectDependency[]> {\n  // This should never happen under normal circumstances since\n  // the CLI is versioned in the `expo` package.\n  assert(exp.sdkVersion, 'SDK Version is missing');\n\n  // Get from both endpoints and combine the known package versions.\n  const combinedKnownPackages = await getCombinedKnownVersionsAsync({\n    projectRoot,\n    sdkVersion: exp.sdkVersion,\n  });\n  // debug(`Known dependencies: %O`, combinedKnownPackages);\n\n  const resolvedDependencies = packagesToCheck?.length\n    ? // Diff the provided packages to ensure we only check against installed packages.\n      getFilteredObject(packagesToCheck, { ...pkg.dependencies, ...pkg.devDependencies })\n    : // If no packages are provided, check against the `package.json` `dependencies` + `devDependencies` object.\n      { ...pkg.dependencies, ...pkg.devDependencies };\n  debug(`Checking dependencies for ${exp.sdkVersion}: %O`, resolvedDependencies);\n\n  // intersection of packages from package.json and bundled native modules\n  const { known: resolvedPackagesToCheck, unknown } = getPackagesToCheck(\n    resolvedDependencies,\n    combinedKnownPackages\n  );\n  debug(`Comparing known versions: %O`, resolvedPackagesToCheck);\n  debug(`Skipping packages that cannot be versioned automatically: %O`, unknown);\n  // read package versions from the file system (node_modules)\n  const packageVersions = await resolvePackageVersionsAsync(projectRoot, resolvedPackagesToCheck);\n  debug(`Package versions: %O`, packageVersions);\n  // find incorrect dependencies by comparing the actual package versions with the bundled native module version ranges\n  let incorrectDeps = findIncorrectDependencies(pkg, packageVersions, combinedKnownPackages);\n  debug(`Incorrect dependencies: %O`, incorrectDeps);\n\n  if (pkg?.expo?.install?.exclude) {\n    const packagesToExclude = pkg.expo.install.exclude;\n    const incorrectAndExcludedDeps = incorrectDeps.filter((dep) =>\n      packagesToExclude.includes(dep.packageName)\n    );\n    debug(\n      `Incorrect dependency warnings filtered out by expo.install.exclude: %O`,\n      incorrectAndExcludedDeps.map((dep) => dep.packageName)\n    );\n    incorrectDeps = incorrectDeps.filter((dep) => !packagesToExclude.includes(dep.packageName));\n  }\n\n  return incorrectDeps;\n}\n\nfunction getFilteredObject(keys: string[], object: Record<string, string>) {\n  return keys.reduce<Record<string, string>>((acc, key) => {\n    acc[key] = object[key];\n    return acc;\n  }, {});\n}\n\nfunction getPackagesToCheck(\n  dependencies: Record<string, string> | null | undefined,\n  bundledNativeModules: BundledNativeModules\n): { known: string[]; unknown: string[] } {\n  const dependencyNames = Object.keys(dependencies ?? {});\n  const known: string[] = [];\n  const unknown: string[] = [];\n  for (const dependencyName of dependencyNames) {\n    if (dependencyName in bundledNativeModules) {\n      known.push(dependencyName);\n    } else {\n      unknown.push(dependencyName);\n    }\n  }\n  return { known, unknown };\n}\n\nasync function resolvePackageVersionsAsync(\n  projectRoot: string,\n  packages: string[]\n): Promise<Record<string, string>> {\n  const packageVersionsFromPackageJSON = await Promise.all(\n    packages.map((packageName) => getPackageVersionAsync(projectRoot, packageName))\n  );\n  return packages.reduce(\n    (acc, packageName, idx) => {\n      acc[packageName] = packageVersionsFromPackageJSON[idx];\n      return acc;\n    },\n    {} as Record<string, string>\n  );\n}\n\nasync function getPackageVersionAsync(projectRoot: string, packageName: string): Promise<string> {\n  let packageJsonPath: string | undefined;\n  try {\n    packageJsonPath = resolveFrom(projectRoot, `${packageName}/package.json`);\n  } catch (error: any) {\n    // This is a workaround for packages using `exports`. If this doesn't\n    // include `package.json`, we have to use the error message to get the location.\n    if (error.code === 'ERR_PACKAGE_PATH_NOT_EXPORTED') {\n      packageJsonPath = error.message.match(/(\"exports\"|defined) in (.*)$/i)?.[2];\n    }\n  }\n  if (!packageJsonPath) {\n    throw new CommandError(\n      `\"${packageName}\" is added as a dependency in your project's package.json but it doesn't seem to be installed. Please run \"yarn\" or \"npm install\" to fix this issue.`\n    );\n  }\n  const packageJson = await JsonFile.readAsync<BundledNativeModules>(packageJsonPath);\n  return packageJson.version;\n}\n\nfunction findIncorrectDependencies(\n  pkg: PackageJSONConfig,\n  packageVersions: Record<string, string>,\n  bundledNativeModules: BundledNativeModules\n): IncorrectDependency[] {\n  const packages = Object.keys(packageVersions);\n  const incorrectDeps: IncorrectDependency[] = [];\n  for (const packageName of packages) {\n    const expectedVersionOrRange = bundledNativeModules[packageName];\n    const actualVersion = packageVersions[packageName];\n    if (isDependencyVersionIncorrect(packageName, expectedVersionOrRange, actualVersion)) {\n      incorrectDeps.push({\n        packageName,\n        packageType: findDependencyType(pkg, packageName),\n        expectedVersionOrRange,\n        actualVersion,\n      });\n    }\n  }\n  return incorrectDeps;\n}\n\nfunction isDependencyVersionIncorrect(\n  packageName: string,\n  expectedVersionOrRange: string | undefined,\n  actualVersion: string\n) {\n  if (typeof expectedVersionOrRange !== 'string') {\n    return false;\n  }\n\n  // we never want to go backwards with the expo patch version\n  if (packageName === 'expo') {\n    if (semver.ltr(actualVersion, expectedVersionOrRange)) {\n      return true;\n    }\n    return false;\n  }\n\n  // all other packages: version range is based on Expo SDK version, so we always want to match range\n  if (!semver.intersects(expectedVersionOrRange, actualVersion)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction findDependencyType(\n  pkg: PackageJSONConfig,\n  packageName: string\n): IncorrectDependency['packageType'] {\n  if (pkg.devDependencies && packageName in pkg.devDependencies) {\n    return 'devDependencies';\n  }\n\n  return 'dependencies';\n}\n"],"names":["validateDependenciesVersionsAsync","logIncorrectDependencies","getVersionedDependenciesAsync","Log","debug","require","projectRoot","exp","pkg","packagesToCheck","env","EXPO_OFFLINE","warn","incorrectDeps","logInvalidDependency","packageName","expectedVersionOrRange","actualVersion","chalk","length","forEach","dep","assert","sdkVersion","combinedKnownPackages","getCombinedKnownVersionsAsync","resolvedDependencies","getFilteredObject","dependencies","devDependencies","known","resolvedPackagesToCheck","unknown","getPackagesToCheck","packageVersions","resolvePackageVersionsAsync","findIncorrectDependencies","expo","install","exclude","packagesToExclude","incorrectAndExcludedDeps","filter","includes","map","keys","object","reduce","acc","key","bundledNativeModules","dependencyNames","Object","dependencyName","push","packages","packageVersionsFromPackageJSON","Promise","all","getPackageVersionAsync","idx","packageJsonPath","resolveFrom","error","code","message","match","CommandError","packageJson","JsonFile","readAsync","version","isDependencyVersionIncorrect","packageType","findDependencyType","semver","ltr","intersects"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js
index 165dd65..4df8045 100644
--- a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js
+++ b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js
@@ -111,9 +111,9 @@ class DevServerManagerActions {
         this.devServerManager.broadcastMessage("reload");
     }
     async openMoreToolsAsync() {
+        // Options match: Chrome > View > Developer
         try {
-            // Options match: Chrome > View > Developer
-            const value = await (0, _prompts).selectAsync(_chalk.default`Dev tools {dim (native only)}`, [
+            const defaultMenuItems = [
                 {
                     title: "Inspect elements",
                     value: "toggleElementInspector"
@@ -131,15 +131,34 @@ class DevServerManagerActions {
                     value: "reload"
                 },
                 {
-                    title: "Start React devtools",
-                    value: "startReactDevTools"
-                }, 
-            ]);
-            if (value === "startReactDevTools") {
-                this.startReactDevToolsAsync();
-            } else {
+                    title: "Open React devtools",
+                    value: "openReactDevTools",
+                    action: this.openReactDevToolsAsync
+                }
+            ];
+            const pluginMenuItems = (await this.devServerManager.devtoolsPluginManager.queryPluginsAsync()).map((plugin)=>({
+                    title: _chalk.default`Open devtools plugin - {bold ${plugin.packageName}}`,
+                    value: `devtoolsPlugin:${plugin.packageName}`,
+                    action: async ()=>{
+                        const url = new URL(plugin.webpageEndpoint, this.devServerManager.getDefaultDevServer().getUrlCreator().constructUrl({
+                            scheme: "http"
+                        }));
+                        await (0, _open).openBrowserAsync(url.toString());
+                    }
+                })
+            );
+            const menuItems = [
+                ...defaultMenuItems,
+                ...pluginMenuItems
+            ];
+            const value = await (0, _prompts).selectAsync(_chalk.default`Dev tools {dim (native only)}`, menuItems);
+            const menuItem = menuItems.find((item)=>item.value === value
+            );
+            if (menuItem == null ? void 0 : menuItem.action) {
+                menuItem.action();
+            } else if (menuItem == null ? void 0 : menuItem.value) {
                 this.devServerManager.broadcastMessage("sendDevCommand", {
-                    name: value
+                    name: menuItem.value
                 });
             }
         } catch (error) {
@@ -149,7 +168,7 @@ class DevServerManagerActions {
             (0, _commandsTable).printHelp();
         }
     }
-    async startReactDevToolsAsync() {
+    async openReactDevToolsAsync() {
         await (0, _reactDevToolsProxy).startReactDevToolsProxyAsync();
         const url = this.devServerManager.getDefaultDevServer().getReactDevToolsUrl();
         await (0, _open).openBrowserAsync(url);
diff --git a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map
index b472f9f..a888569 100644
--- a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map
+++ b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/interface/interactiveActions.ts"],"sourcesContent":["import assert from 'assert';\nimport chalk from 'chalk';\n\nimport { BLT, printHelp, printItem, printQRCode, printUsage, StartOptions } from './commandsTable';\nimport * as Log from '../../log';\nimport { delayAsync } from '../../utils/delay';\nimport { learnMore } from '../../utils/link';\nimport { openBrowserAsync } from '../../utils/open';\nimport { selectAsync } from '../../utils/prompts';\nimport { DevServerManager } from '../server/DevServerManager';\nimport {\n  addReactDevToolsReloadListener,\n  startReactDevToolsProxyAsync,\n} from '../server/ReactDevToolsProxy';\nimport {\n  openJsInspector,\n  queryAllInspectorAppsAsync,\n} from '../server/middleware/inspector/JsInspector';\n\nconst debug = require('debug')('expo:start:interface:interactiveActions') as typeof console.log;\n\n/** Wraps the DevServerManager and adds an interface for user actions. */\nexport class DevServerManagerActions {\n  constructor(private devServerManager: DevServerManager) {}\n\n  printDevServerInfo(\n    options: Pick<StartOptions, 'devClient' | 'isWebSocketsEnabled' | 'platforms'>\n  ) {\n    // If native dev server is running, print its URL.\n    if (this.devServerManager.getNativeDevServerPort()) {\n      const devServer = this.devServerManager.getDefaultDevServer();\n      try {\n        const nativeRuntimeUrl = devServer.getNativeRuntimeUrl()!;\n        const interstitialPageUrl = devServer.getRedirectUrl();\n\n        printQRCode(interstitialPageUrl ?? nativeRuntimeUrl);\n\n        if (interstitialPageUrl) {\n          Log.log(\n            printItem(\n              chalk`Choose an app to open your project at {underline ${interstitialPageUrl}}`\n            )\n          );\n        }\n        Log.log(printItem(chalk`Metro waiting on {underline ${nativeRuntimeUrl}}`));\n        if (options.devClient === false) {\n          // TODO: if development build, change this message!\n          Log.log(\n            printItem('Scan the QR code above with Expo Go (Android) or the Camera app (iOS)')\n          );\n        } else {\n          Log.log(\n            printItem(\n              'Scan the QR code above to open the project in a development build. ' +\n                learnMore('https://expo.fyi/start')\n            )\n          );\n        }\n      } catch (error) {\n        console.log('err', error);\n        // @ts-ignore: If there is no development build scheme, then skip the QR code.\n        if (error.code !== 'NO_DEV_CLIENT_SCHEME') {\n          throw error;\n        } else {\n          const serverUrl = devServer.getDevServerUrl();\n          Log.log(printItem(chalk`Metro waiting on {underline ${serverUrl}}`));\n          Log.log(printItem(`Linking is disabled because the client scheme cannot be resolved.`));\n        }\n      }\n    }\n\n    const webDevServer = this.devServerManager.getWebDevServer();\n    const webUrl = webDevServer?.getDevServerUrl({ hostType: 'localhost' });\n    if (webUrl) {\n      Log.log();\n      Log.log(printItem(chalk`Web is waiting on {underline ${webUrl}}`));\n    }\n\n    printUsage(options, { verbose: false });\n    printHelp();\n    Log.log();\n  }\n\n  async openJsInspectorAsync() {\n    Log.log('Opening JavaScript inspector in the browser...');\n    const metroServerOrigin = this.devServerManager.getDefaultDevServer().getJsInspectorBaseUrl();\n    assert(metroServerOrigin, 'Metro dev server is not running');\n    const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n    if (!apps.length) {\n      Log.warn(\n        `No compatible apps connected. JavaScript Debugging can only be used with the Hermes engine. ${learnMore(\n          'https://docs.expo.dev/guides/using-hermes/'\n        )}`\n      );\n      return;\n    }\n    try {\n      for (const app of apps) {\n        await openJsInspector(app);\n      }\n    } catch (error: any) {\n      Log.error('Failed to open JavaScript inspector. This is often an issue with Google Chrome.');\n      Log.exception(error);\n    }\n  }\n\n  reloadApp() {\n    Log.log(`${BLT} Reloading apps`);\n    // Send reload requests over the dev servers\n    this.devServerManager.broadcastMessage('reload');\n  }\n\n  async openMoreToolsAsync() {\n    try {\n      // Options match: Chrome > View > Developer\n      const value = await selectAsync(chalk`Dev tools {dim (native only)}`, [\n        { title: 'Inspect elements', value: 'toggleElementInspector' },\n        { title: 'Toggle performance monitor', value: 'togglePerformanceMonitor' },\n        { title: 'Toggle developer menu', value: 'toggleDevMenu' },\n        { title: 'Reload app', value: 'reload' },\n        { title: 'Start React devtools', value: 'startReactDevTools' },\n        // TODO: Maybe a \"View Source\" option to open code.\n        // Toggling Remote JS Debugging is pretty rough, so leaving it disabled.\n        // { title: 'Toggle Remote Debugging', value: 'toggleRemoteDebugging' },\n      ]);\n      if (value === 'startReactDevTools') {\n        this.startReactDevToolsAsync();\n      } else {\n        this.devServerManager.broadcastMessage('sendDevCommand', { name: value });\n      }\n    } catch (error: any) {\n      debug(error);\n      // do nothing\n    } finally {\n      printHelp();\n    }\n  }\n\n  async startReactDevToolsAsync() {\n    await startReactDevToolsProxyAsync();\n    const url = this.devServerManager.getDefaultDevServer().getReactDevToolsUrl();\n    await openBrowserAsync(url);\n    addReactDevToolsReloadListener(() => {\n      this.reconnectReactDevTools();\n    });\n    this.reconnectReactDevTools();\n  }\n\n  async reconnectReactDevTools() {\n    // Wait a little time for react-devtools to be initialized in browser\n    await delayAsync(3000);\n    this.devServerManager.broadcastMessage('sendDevCommand', { name: 'reconnectReactDevTools' });\n  }\n\n  toggleDevMenu() {\n    Log.log(`${BLT} Toggling dev menu`);\n    this.devServerManager.broadcastMessage('devMenu');\n  }\n}\n"],"names":["Log","debug","require","DevServerManagerActions","constructor","devServerManager","printDevServerInfo","options","getNativeDevServerPort","devServer","getDefaultDevServer","nativeRuntimeUrl","getNativeRuntimeUrl","interstitialPageUrl","getRedirectUrl","printQRCode","log","printItem","chalk","devClient","learnMore","error","console","code","serverUrl","getDevServerUrl","webDevServer","getWebDevServer","webUrl","hostType","printUsage","verbose","printHelp","openJsInspectorAsync","metroServerOrigin","getJsInspectorBaseUrl","assert","apps","queryAllInspectorAppsAsync","length","warn","app","openJsInspector","exception","reloadApp","BLT","broadcastMessage","openMoreToolsAsync","value","selectAsync","title","startReactDevToolsAsync","name","startReactDevToolsProxyAsync","url","getReactDevToolsUrl","openBrowserAsync","addReactDevToolsReloadListener","reconnectReactDevTools","delayAsync","toggleDevMenu"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/interface/interactiveActions.ts"],"sourcesContent":["import assert from 'assert';\nimport chalk from 'chalk';\n\nimport { BLT, printHelp, printItem, printQRCode, printUsage, StartOptions } from './commandsTable';\nimport * as Log from '../../log';\nimport { delayAsync } from '../../utils/delay';\nimport { learnMore } from '../../utils/link';\nimport { openBrowserAsync } from '../../utils/open';\nimport { ExpoChoice, selectAsync } from '../../utils/prompts';\nimport { DevServerManager } from '../server/DevServerManager';\nimport {\n  addReactDevToolsReloadListener,\n  startReactDevToolsProxyAsync,\n} from '../server/ReactDevToolsProxy';\nimport {\n  openJsInspector,\n  queryAllInspectorAppsAsync,\n} from '../server/middleware/inspector/JsInspector';\n\nconst debug = require('debug')('expo:start:interface:interactiveActions') as typeof console.log;\n\ninterface MoreToolMenuItem extends ExpoChoice<string> {\n  action?: () => unknown;\n}\n\n/** Wraps the DevServerManager and adds an interface for user actions. */\nexport class DevServerManagerActions {\n  constructor(private devServerManager: DevServerManager) {}\n\n  printDevServerInfo(\n    options: Pick<StartOptions, 'devClient' | 'isWebSocketsEnabled' | 'platforms'>\n  ) {\n    // If native dev server is running, print its URL.\n    if (this.devServerManager.getNativeDevServerPort()) {\n      const devServer = this.devServerManager.getDefaultDevServer();\n      try {\n        const nativeRuntimeUrl = devServer.getNativeRuntimeUrl()!;\n        const interstitialPageUrl = devServer.getRedirectUrl();\n\n        printQRCode(interstitialPageUrl ?? nativeRuntimeUrl);\n\n        if (interstitialPageUrl) {\n          Log.log(\n            printItem(\n              chalk`Choose an app to open your project at {underline ${interstitialPageUrl}}`\n            )\n          );\n        }\n        Log.log(printItem(chalk`Metro waiting on {underline ${nativeRuntimeUrl}}`));\n        if (options.devClient === false) {\n          // TODO: if development build, change this message!\n          Log.log(\n            printItem('Scan the QR code above with Expo Go (Android) or the Camera app (iOS)')\n          );\n        } else {\n          Log.log(\n            printItem(\n              'Scan the QR code above to open the project in a development build. ' +\n                learnMore('https://expo.fyi/start')\n            )\n          );\n        }\n      } catch (error) {\n        console.log('err', error);\n        // @ts-ignore: If there is no development build scheme, then skip the QR code.\n        if (error.code !== 'NO_DEV_CLIENT_SCHEME') {\n          throw error;\n        } else {\n          const serverUrl = devServer.getDevServerUrl();\n          Log.log(printItem(chalk`Metro waiting on {underline ${serverUrl}}`));\n          Log.log(printItem(`Linking is disabled because the client scheme cannot be resolved.`));\n        }\n      }\n    }\n\n    const webDevServer = this.devServerManager.getWebDevServer();\n    const webUrl = webDevServer?.getDevServerUrl({ hostType: 'localhost' });\n    if (webUrl) {\n      Log.log();\n      Log.log(printItem(chalk`Web is waiting on {underline ${webUrl}}`));\n    }\n\n    printUsage(options, { verbose: false });\n    printHelp();\n    Log.log();\n  }\n\n  async openJsInspectorAsync() {\n    Log.log('Opening JavaScript inspector in the browser...');\n    const metroServerOrigin = this.devServerManager.getDefaultDevServer().getJsInspectorBaseUrl();\n    assert(metroServerOrigin, 'Metro dev server is not running');\n    const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n    if (!apps.length) {\n      Log.warn(\n        `No compatible apps connected. JavaScript Debugging can only be used with the Hermes engine. ${learnMore(\n          'https://docs.expo.dev/guides/using-hermes/'\n        )}`\n      );\n      return;\n    }\n    try {\n      for (const app of apps) {\n        await openJsInspector(app);\n      }\n    } catch (error: any) {\n      Log.error('Failed to open JavaScript inspector. This is often an issue with Google Chrome.');\n      Log.exception(error);\n    }\n  }\n\n  reloadApp() {\n    Log.log(`${BLT} Reloading apps`);\n    // Send reload requests over the dev servers\n    this.devServerManager.broadcastMessage('reload');\n  }\n\n  async openMoreToolsAsync() {\n    // Options match: Chrome > View > Developer\n    try {\n      const defaultMenuItems: MoreToolMenuItem[] = [\n        { title: 'Inspect elements', value: 'toggleElementInspector' },\n        { title: 'Toggle performance monitor', value: 'togglePerformanceMonitor' },\n        { title: 'Toggle developer menu', value: 'toggleDevMenu' },\n        { title: 'Reload app', value: 'reload' },\n        {\n          title: 'Open React devtools',\n          value: 'openReactDevTools',\n          action: this.openReactDevToolsAsync,\n        },\n        // TODO: Maybe a \"View Source\" option to open code.\n      ];\n      const pluginMenuItems = (\n        await this.devServerManager.devtoolsPluginManager.queryPluginsAsync()\n      ).map((plugin) => ({\n        title: chalk`Open devtools plugin - {bold ${plugin.packageName}}`,\n        value: `devtoolsPlugin:${plugin.packageName}`,\n        action: async () => {\n          const url = new URL(\n            plugin.webpageEndpoint,\n            this.devServerManager\n              .getDefaultDevServer()\n              .getUrlCreator()\n              .constructUrl({ scheme: 'http' })\n          );\n          await openBrowserAsync(url.toString());\n        },\n      }));\n      const menuItems = [...defaultMenuItems, ...pluginMenuItems];\n      const value = await selectAsync(chalk`Dev tools {dim (native only)}`, menuItems);\n      const menuItem = menuItems.find((item) => item.value === value);\n      if (menuItem?.action) {\n        menuItem.action();\n      } else if (menuItem?.value) {\n        this.devServerManager.broadcastMessage('sendDevCommand', { name: menuItem.value });\n      }\n    } catch (error: any) {\n      debug(error);\n      // do nothing\n    } finally {\n      printHelp();\n    }\n  }\n\n  async openReactDevToolsAsync() {\n    await startReactDevToolsProxyAsync();\n    const url = this.devServerManager.getDefaultDevServer().getReactDevToolsUrl();\n    await openBrowserAsync(url);\n    addReactDevToolsReloadListener(() => {\n      this.reconnectReactDevTools();\n    });\n    this.reconnectReactDevTools();\n  }\n\n  async reconnectReactDevTools() {\n    // Wait a little time for react-devtools to be initialized in browser\n    await delayAsync(3000);\n    this.devServerManager.broadcastMessage('sendDevCommand', { name: 'reconnectReactDevTools' });\n  }\n\n  toggleDevMenu() {\n    Log.log(`${BLT} Toggling dev menu`);\n    this.devServerManager.broadcastMessage('devMenu');\n  }\n}\n"],"names":["Log","debug","require","DevServerManagerActions","constructor","devServerManager","printDevServerInfo","options","getNativeDevServerPort","devServer","getDefaultDevServer","nativeRuntimeUrl","getNativeRuntimeUrl","interstitialPageUrl","getRedirectUrl","printQRCode","log","printItem","chalk","devClient","learnMore","error","console","code","serverUrl","getDevServerUrl","webDevServer","getWebDevServer","webUrl","hostType","printUsage","verbose","printHelp","openJsInspectorAsync","metroServerOrigin","getJsInspectorBaseUrl","assert","apps","queryAllInspectorAppsAsync","length","warn","app","openJsInspector","exception","reloadApp","BLT","broadcastMessage","openMoreToolsAsync","defaultMenuItems","title","value","action","openReactDevToolsAsync","pluginMenuItems","devtoolsPluginManager","queryPluginsAsync","map","plugin","packageName","url","URL","webpageEndpoint","getUrlCreator","constructUrl","scheme","openBrowserAsync","toString","menuItems","selectAsync","menuItem","find","item","name","startReactDevToolsProxyAsync","getReactDevToolsUrl","addReactDevToolsReloadListener","reconnectReactDevTools","delayAsync","toggleDevMenu"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js
index f7693be..b1ccede 100644
--- a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js
+++ b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js
@@ -5,6 +5,7 @@ Object.defineProperty(exports, "__esModule", {
 var _assert = _interopRequireDefault(require("assert"));
 var _resolveFrom = _interopRequireDefault(require("resolve-from"));
 var _asyncNgrok = require("./AsyncNgrok");
+var _devToolsPluginManager = _interopRequireDefault(require("./DevToolsPluginManager"));
 var _developmentSession = require("./DevelopmentSession");
 var _urlCreator = require("./UrlCreator");
 var Log = _interopRequireWildcard(require("../../log"));
@@ -46,16 +47,19 @@ const PLATFORM_MANAGERS = {
     emulator: ()=>require("../platforms/android/AndroidPlatformManager").AndroidPlatformManager
 };
 class BundlerDevServer {
-    constructor(projectRoot, platformBundlers, isDevClient){
+    constructor(projectRoot, platformBundlers, /** Advanced options */ options){
         this.projectRoot = projectRoot;
         this.platformBundlers = platformBundlers;
-        this.isDevClient = isDevClient;
         this.ngrok = null;
         this.devSession = null;
         this.instance = null;
         this.platformManagers = {};
         this.urlCreator = null;
         this.notifier = null;
+        var ref;
+        this.devToolsPluginManager = (ref = options == null ? void 0 : options.devToolsPluginManager) != null ? ref : new _devToolsPluginManager.default(projectRoot);
+        var ref1;
+        this.isDevClient = (ref1 = options == null ? void 0 : options.isDevClient) != null ? ref1 : false;
     }
     setInstance(instance) {
         this.instance = instance;
@@ -150,8 +154,8 @@ class BundlerDevServer {
     async startDevSessionAsync() {
         var // This is used to make Expo Go open the project in either Expo Go, or the web browser.
         // Must come after ngrok (`startTunnelAsync`) setup.
-        ref1;
-        (ref1 = this.devSession) == null ? void 0 : ref1.stopNotifying == null ? void 0 : ref1.stopNotifying();
+        ref2;
+        (ref2 = this.devSession) == null ? void 0 : ref2.stopNotifying == null ? void 0 : ref2.stopNotifying();
         this.devSession = new _developmentSession.DevelopmentSession(this.projectRoot, // This URL will be used on external devices so the computer IP won't be relevant.
         this.isTargetingNative() ? this.getNativeRuntimeUrl() : this.getDevServerUrl({
             hostType: "localhost"
@@ -195,12 +199,12 @@ class BundlerDevServer {
     }
     /** Stop the running dev server instance. */ async stopAsync() {
         var // Stop file watching.
-        ref4, ref2, ref3;
-        (ref4 = this.notifier) == null ? void 0 : ref4.stopObserving();
+        ref5, ref3, ref4;
+        (ref5 = this.notifier) == null ? void 0 : ref5.stopObserving();
         // Stop the dev session timer and tell Expo API to remove dev session.
-        await ((ref2 = this.devSession) == null ? void 0 : ref2.closeAsync());
+        await ((ref3 = this.devSession) == null ? void 0 : ref3.closeAsync());
         // Stop ngrok if running.
-        await ((ref3 = this.ngrok) == null ? void 0 : ref3.stopAsync().catch((e)=>{
+        await ((ref4 = this.ngrok) == null ? void 0 : ref4.stopAsync().catch((e)=>{
             Log.error(`Error stopping ngrok:`);
             Log.exception(e);
         }));
@@ -270,8 +274,8 @@ class BundlerDevServer {
     }
     /** Get the tunnel URL from ngrok. */ getTunnelUrl() {
         var ref;
-        var ref5;
-        return (ref5 = (ref = this.ngrok) == null ? void 0 : ref.getActiveUrl()) != null ? ref5 : null;
+        var ref6;
+        return (ref6 = (ref = this.ngrok) == null ? void 0 : ref.getActiveUrl()) != null ? ref6 : null;
     }
     /** Open the dev server in a runtime. */ async openPlatformAsync(launchTarget, resolver = {}) {
         if (launchTarget === "desktop") {
diff --git a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map
index e8e3bcc..988a510 100644
--- a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/server/BundlerDevServer.ts"],"sourcesContent":["import assert from 'assert';\nimport resolveFrom from 'resolve-from';\n\nimport { AsyncNgrok } from './AsyncNgrok';\nimport { DevelopmentSession } from './DevelopmentSession';\nimport { CreateURLOptions, UrlCreator } from './UrlCreator';\nimport { PlatformBundlers } from './platformBundlers';\nimport * as Log from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { resolveWithTimeout } from '../../utils/delay';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { openBrowserAsync } from '../../utils/open';\nimport {\n  BaseOpenInCustomProps,\n  BaseResolveDeviceProps,\n  PlatformManager,\n} from '../platforms/PlatformManager';\n\nconst debug = require('debug')('expo:start:server:devServer') as typeof console.log;\n\nexport type MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nexport type ServerLike = {\n  close(callback?: (err?: Error) => void): void;\n  addListener?(event: string, listener: (...args: any[]) => void): unknown;\n};\n\nexport type DevServerInstance = {\n  /** Bundler dev server instance. */\n  server: ServerLike;\n  /** Dev server URL location properties. */\n  location: {\n    url: string;\n    port: number;\n    protocol: 'http' | 'https';\n    host?: string;\n  };\n  /** Additional middleware that's attached to the `server`. */\n  middleware: any;\n  /** Message socket for communicating with the runtime. */\n  messageSocket: MessageSocket;\n};\n\nexport interface BundlerStartOptions {\n  /** Should the dev server use `https` protocol. */\n  https?: boolean;\n  /** Should start the dev servers in development mode (minify). */\n  mode?: 'development' | 'production';\n  /** Is dev client enabled. */\n  devClient?: boolean;\n  /** Should run dev servers with clean caches. */\n  resetDevServer?: boolean;\n  /** Code signing private key path (defaults to same directory as certificate) */\n  privateKeyPath?: string;\n\n  /** Max amount of workers (threads) to use with Metro bundler, defaults to undefined for max workers. */\n  maxWorkers?: number;\n  /** Port to start the dev server on. */\n  port?: number;\n\n  /** Should start a headless dev server e.g. mock representation to approximate info from a server running in a different process. */\n  headless?: boolean;\n  /** Should instruct the bundler to create minified bundles. */\n  minify?: boolean;\n\n  /** Will the bundler be used for exporting. NOTE: This is an odd option to pass to the dev server. */\n  isExporting?: boolean;\n\n  // Webpack options\n  /** Should modify and create PWA icons. */\n  isImageEditingEnabled?: boolean;\n\n  location: CreateURLOptions;\n}\n\nconst PLATFORM_MANAGERS = {\n  simulator: () =>\n    require('../platforms/ios/ApplePlatformManager')\n      .ApplePlatformManager as typeof import('../platforms/ios/ApplePlatformManager').ApplePlatformManager,\n  emulator: () =>\n    require('../platforms/android/AndroidPlatformManager')\n      .AndroidPlatformManager as typeof import('../platforms/android/AndroidPlatformManager').AndroidPlatformManager,\n};\n\nexport abstract class BundlerDevServer {\n  /** Name of the bundler. */\n  abstract get name(): string;\n\n  /** Ngrok instance for managing tunnel connections. */\n  protected ngrok: AsyncNgrok | null = null;\n  /** Interfaces with the Expo 'Development Session' API. */\n  protected devSession: DevelopmentSession | null = null;\n  /** Http server and related info. */\n  protected instance: DevServerInstance | null = null;\n  /** Native platform interfaces for opening projects.  */\n  private platformManagers: Record<string, PlatformManager<any>> = {};\n  /** Manages the creation of dev server URLs. */\n  protected urlCreator?: UrlCreator | null = null;\n\n  private notifier: FileNotifier | null = null;\n\n  constructor(\n    /** Project root folder. */\n    public projectRoot: string,\n    /** A mapping of bundlers to platforms. */\n    public platformBundlers: PlatformBundlers,\n    // TODO: Replace with custom scheme maybe...\n    public isDevClient?: boolean\n  ) {}\n\n  protected setInstance(instance: DevServerInstance) {\n    this.instance = instance;\n  }\n\n  /** Get the manifest middleware function. */\n  protected async getManifestMiddlewareAsync(\n    options: Pick<BundlerStartOptions, 'minify' | 'mode' | 'privateKeyPath'> = {}\n  ) {\n    const Middleware = require('./middleware/ExpoGoManifestHandlerMiddleware')\n      .ExpoGoManifestHandlerMiddleware as typeof import('./middleware/ExpoGoManifestHandlerMiddleware').ExpoGoManifestHandlerMiddleware;\n\n    const urlCreator = this.getUrlCreator();\n    const middleware = new Middleware(this.projectRoot, {\n      constructUrl: urlCreator.constructUrl.bind(urlCreator),\n      mode: options.mode,\n      minify: options.minify,\n      isNativeWebpack: this.name === 'webpack' && this.isTargetingNative(),\n      privateKeyPath: options.privateKeyPath,\n    });\n    return middleware;\n  }\n\n  /** Start the dev server using settings defined in the start command. */\n  public async startAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    await this.stopAsync();\n\n    let instance: DevServerInstance;\n    if (options.headless) {\n      instance = await this.startHeadlessAsync(options);\n    } else {\n      instance = await this.startImplementationAsync(options);\n    }\n\n    this.setInstance(instance);\n    await this.postStartAsync(options);\n    return instance;\n  }\n\n  protected abstract startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance>;\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    return false;\n  }\n\n  public abstract startTypeScriptServices(): Promise<void>;\n\n  public async watchEnvironmentVariables(): Promise<void> {\n    // noop -- We've only implemented this functionality in Metro.\n  }\n\n  /**\n   * Creates a mock server representation that can be used to estimate URLs for a server started in another process.\n   * This is used for the run commands where you can reuse the server from a previous run.\n   */\n  private async startHeadlessAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    if (!options.port)\n      throw new CommandError('HEADLESS_SERVER', 'headless dev server requires a port option');\n    this.urlCreator = this.getUrlCreator(options);\n\n    return {\n      // Create a mock server\n      server: {\n        close: () => {\n          this.instance = null;\n        },\n        addListener() {},\n      },\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware: {},\n      messageSocket: {\n        broadcast: () => {\n          throw new CommandError('HEADLESS_SERVER', 'Cannot broadcast messages to headless server');\n        },\n      },\n    };\n  }\n\n  /**\n   * Runs after the `startAsync` function, performing any additional common operations.\n   * You can assume the dev server is started by the time this function is called.\n   */\n  protected async postStartAsync(options: BundlerStartOptions) {\n    if (\n      options.location.hostType === 'tunnel' &&\n      !env.EXPO_OFFLINE &&\n      // This is a hack to prevent using tunnel on web since we block it upstream for some reason.\n      this.isTargetingNative()\n    ) {\n      await this._startTunnelAsync();\n    }\n    await this.startDevSessionAsync();\n\n    this.watchConfig();\n  }\n\n  protected abstract getConfigModuleIds(): string[];\n\n  protected watchConfig() {\n    this.notifier?.stopObserving();\n    this.notifier = new FileNotifier(this.projectRoot, this.getConfigModuleIds());\n    this.notifier.startObserving();\n  }\n\n  /** Create ngrok instance and start the tunnel server. Exposed for testing. */\n  public async _startTunnelAsync(): Promise<AsyncNgrok | null> {\n    const port = this.getInstance()?.location.port;\n    if (!port) return null;\n    debug('[ngrok] connect to port: ' + port);\n    this.ngrok = new AsyncNgrok(this.projectRoot, port);\n    await this.ngrok.startAsync();\n    return this.ngrok;\n  }\n\n  protected async startDevSessionAsync() {\n    // This is used to make Expo Go open the project in either Expo Go, or the web browser.\n    // Must come after ngrok (`startTunnelAsync`) setup.\n    this.devSession?.stopNotifying?.();\n    this.devSession = new DevelopmentSession(\n      this.projectRoot,\n      // This URL will be used on external devices so the computer IP won't be relevant.\n      this.isTargetingNative()\n        ? this.getNativeRuntimeUrl()\n        : this.getDevServerUrl({ hostType: 'localhost' }),\n      () => {\n        // TODO: This appears to be happening consistently after an hour.\n        // We should investigate why this is happening and fix it on our servers.\n        // Log.error(\n        //   chalk.red(\n        //     '\\nAn unexpected error occurred while updating the Dev Session API. This project will not appear in the \"Development servers\" section of the Expo Go app until this process has been restarted.'\n        //   )\n        // );\n        // Log.exception(error);\n        this.devSession?.closeAsync().catch((error) => {\n          debug('[dev-session] error closing: ' + error.message);\n        });\n      }\n    );\n\n    await this.devSession.startAsync({\n      runtime: this.isTargetingNative() ? 'native' : 'web',\n    });\n  }\n\n  public isTargetingNative() {\n    // Temporary hack while we implement multi-bundler dev server proxy.\n    return true;\n  }\n\n  public isTargetingWeb() {\n    return this.platformBundlers.web === this.name;\n  }\n\n  /**\n   * Sends a message over web sockets to any connected device,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params\n   */\n  public broadcastMessage(\n    method: 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ) {\n    this.getInstance()?.messageSocket.broadcast(method, params);\n  }\n\n  /** Get the running dev server instance. */\n  public getInstance() {\n    return this.instance;\n  }\n\n  /** Stop the running dev server instance. */\n  async stopAsync() {\n    // Stop file watching.\n    this.notifier?.stopObserving();\n\n    // Stop the dev session timer and tell Expo API to remove dev session.\n    await this.devSession?.closeAsync();\n\n    // Stop ngrok if running.\n    await this.ngrok?.stopAsync().catch((e) => {\n      Log.error(`Error stopping ngrok:`);\n      Log.exception(e);\n    });\n\n    return resolveWithTimeout(\n      () =>\n        new Promise<void>((resolve, reject) => {\n          // Close the server.\n          debug(`Stopping dev server (bundler: ${this.name})`);\n\n          if (this.instance?.server) {\n            this.instance.server.close((error) => {\n              debug(`Stopped dev server (bundler: ${this.name})`);\n              this.instance = null;\n              if (error) {\n                reject(error);\n              } else {\n                resolve();\n              }\n            });\n          } else {\n            debug(`Stopped dev server (bundler: ${this.name})`);\n            this.instance = null;\n            resolve();\n          }\n        }),\n      {\n        // NOTE(Bacon): Metro dev server doesn't seem to be closing in time.\n        timeout: 1000,\n        errorMessage: `Timeout waiting for '${this.name}' dev server to close`,\n      }\n    );\n  }\n\n  public getUrlCreator(options: Partial<Pick<BundlerStartOptions, 'port' | 'location'>> = {}) {\n    if (!this.urlCreator) {\n      assert(options?.port, 'Dev server instance not found');\n      this.urlCreator = new UrlCreator(options.location, {\n        port: options.port,\n        getTunnelUrl: this.getTunnelUrl.bind(this),\n      });\n    }\n    return this.urlCreator;\n  }\n\n  public getNativeRuntimeUrl(opts: Partial<CreateURLOptions> = {}) {\n    return this.isDevClient\n      ? this.getUrlCreator().constructDevClientUrl(opts) ?? this.getDevServerUrl()\n      : this.getUrlCreator().constructUrl({ ...opts, scheme: 'exp' });\n  }\n\n  /** Get the URL for the running instance of the dev server. */\n  public getDevServerUrl(options: { hostType?: 'localhost' } = {}): string | null {\n    const instance = this.getInstance();\n    if (!instance?.location) {\n      return null;\n    }\n    const { location } = instance;\n    if (options.hostType === 'localhost') {\n      return `${location.protocol}://localhost:${location.port}`;\n    }\n    return location.url ?? null;\n  }\n\n  /** Get the base URL for JS inspector */\n  public getJsInspectorBaseUrl(): string {\n    if (this.name !== 'metro') {\n      throw new CommandError(\n        'DEV_SERVER',\n        `Cannot get the JS inspector base url - bundler[${this.name}]`\n      );\n    }\n    return this.getUrlCreator().constructUrl({ scheme: 'http' });\n  }\n\n  /** Get the tunnel URL from ngrok. */\n  public getTunnelUrl(): string | null {\n    return this.ngrok?.getActiveUrl() ?? null;\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openPlatformAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS | 'desktop',\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    if (launchTarget === 'desktop') {\n      const serverUrl = this.getDevServerUrl({ hostType: 'localhost' });\n      // Allow opening the tunnel URL when using Metro web.\n      const url = this.name === 'metro' ? this.getTunnelUrl() ?? serverUrl : serverUrl;\n      await openBrowserAsync(url!);\n      return { url };\n    }\n\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime }, resolver);\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openCustomRuntimeAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS,\n    launchProps: Partial<BaseOpenInCustomProps> = {},\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    if (runtime !== 'custom') {\n      throw new CommandError(\n        `dev server cannot open custom runtimes either because it does not target native platforms or because it is not targeting dev clients. (target: ${runtime})`\n      );\n    }\n\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime: 'custom', props: launchProps }, resolver);\n  }\n\n  /** Get the URL for opening in Expo Go. */\n  protected getExpoGoUrl(): string {\n    return this.getUrlCreator().constructUrl({ scheme: 'exp' });\n  }\n\n  /** Should use the interstitial page for selecting which runtime to use. */\n  protected isRedirectPageEnabled(): boolean {\n    return (\n      !env.EXPO_NO_REDIRECT_PAGE &&\n      // if user passed --dev-client flag, skip interstitial page\n      !this.isDevClient &&\n      // Checks if dev client is installed.\n      !!resolveFrom.silent(this.projectRoot, 'expo-dev-client')\n    );\n  }\n\n  /** Get the redirect URL when redirecting is enabled. */\n  public getRedirectUrl(platform: keyof typeof PLATFORM_MANAGERS | null = null): string | null {\n    if (!this.isRedirectPageEnabled()) {\n      debug('Redirect page is disabled');\n      return null;\n    }\n\n    return (\n      this.getUrlCreator().constructLoadingUrl(\n        {},\n        platform === 'emulator' ? 'android' : platform === 'simulator' ? 'ios' : null\n      ) ?? null\n    );\n  }\n\n  public getReactDevToolsUrl(): string {\n    return new URL(\n      '_expo/react-devtools',\n      this.getUrlCreator().constructUrl({ scheme: 'http' })\n    ).toString();\n  }\n\n  protected async getPlatformManagerAsync(platform: keyof typeof PLATFORM_MANAGERS) {\n    if (!this.platformManagers[platform]) {\n      const Manager = PLATFORM_MANAGERS[platform]();\n      const port = this.getInstance()?.location.port;\n      if (!port || !this.urlCreator) {\n        throw new CommandError(\n          'DEV_SERVER',\n          'Cannot interact with native platforms until dev server has started'\n        );\n      }\n      debug(`Creating platform manager (platform: ${platform}, port: ${port})`);\n      this.platformManagers[platform] = new Manager(this.projectRoot, port, {\n        getCustomRuntimeUrl: this.urlCreator.constructDevClientUrl.bind(this.urlCreator),\n        getExpoGoUrl: this.getExpoGoUrl.bind(this),\n        getRedirectUrl: this.getRedirectUrl.bind(this, platform),\n        getDevServerUrl: this.getDevServerUrl.bind(this, { hostType: 'localhost' }),\n      });\n    }\n    return this.platformManagers[platform];\n  }\n}\n"],"names":["Log","debug","require","PLATFORM_MANAGERS","simulator","ApplePlatformManager","emulator","AndroidPlatformManager","BundlerDevServer","constructor","projectRoot","platformBundlers","isDevClient","ngrok","devSession","instance","platformManagers","urlCreator","notifier","setInstance","getManifestMiddlewareAsync","options","Middleware","ExpoGoManifestHandlerMiddleware","getUrlCreator","middleware","constructUrl","bind","mode","minify","isNativeWebpack","name","isTargetingNative","privateKeyPath","startAsync","stopAsync","headless","startHeadlessAsync","startImplementationAsync","postStartAsync","waitForTypeScriptAsync","watchEnvironmentVariables","port","CommandError","server","close","addListener","location","host","url","protocol","messageSocket","broadcast","hostType","env","EXPO_OFFLINE","_startTunnelAsync","startDevSessionAsync","watchConfig","stopObserving","FileNotifier","getConfigModuleIds","startObserving","getInstance","AsyncNgrok","stopNotifying","DevelopmentSession","getNativeRuntimeUrl","getDevServerUrl","closeAsync","catch","error","message","runtime","isTargetingWeb","web","broadcastMessage","method","params","e","exception","resolveWithTimeout","Promise","resolve","reject","timeout","errorMessage","assert","UrlCreator","getTunnelUrl","opts","constructDevClientUrl","scheme","getJsInspectorBaseUrl","getActiveUrl","openPlatformAsync","launchTarget","resolver","serverUrl","openBrowserAsync","manager","getPlatformManagerAsync","openAsync","openCustomRuntimeAsync","launchProps","props","getExpoGoUrl","isRedirectPageEnabled","EXPO_NO_REDIRECT_PAGE","resolveFrom","silent","getRedirectUrl","platform","constructLoadingUrl","getReactDevToolsUrl","URL","toString","Manager","getCustomRuntimeUrl"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/server/BundlerDevServer.ts"],"sourcesContent":["import assert from 'assert';\nimport resolveFrom from 'resolve-from';\n\nimport { AsyncNgrok } from './AsyncNgrok';\nimport DevToolsPluginManager from './DevToolsPluginManager';\nimport { DevelopmentSession } from './DevelopmentSession';\nimport { CreateURLOptions, UrlCreator } from './UrlCreator';\nimport { PlatformBundlers } from './platformBundlers';\nimport * as Log from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { resolveWithTimeout } from '../../utils/delay';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { openBrowserAsync } from '../../utils/open';\nimport {\n  BaseOpenInCustomProps,\n  BaseResolveDeviceProps,\n  PlatformManager,\n} from '../platforms/PlatformManager';\n\nconst debug = require('debug')('expo:start:server:devServer') as typeof console.log;\n\nexport type MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nexport type ServerLike = {\n  close(callback?: (err?: Error) => void): void;\n  addListener?(event: string, listener: (...args: any[]) => void): unknown;\n};\n\nexport type DevServerInstance = {\n  /** Bundler dev server instance. */\n  server: ServerLike;\n  /** Dev server URL location properties. */\n  location: {\n    url: string;\n    port: number;\n    protocol: 'http' | 'https';\n    host?: string;\n  };\n  /** Additional middleware that's attached to the `server`. */\n  middleware: any;\n  /** Message socket for communicating with the runtime. */\n  messageSocket: MessageSocket;\n};\n\nexport interface BundlerStartOptions {\n  /** Should the dev server use `https` protocol. */\n  https?: boolean;\n  /** Should start the dev servers in development mode (minify). */\n  mode?: 'development' | 'production';\n  /** Is dev client enabled. */\n  devClient?: boolean;\n  /** Should run dev servers with clean caches. */\n  resetDevServer?: boolean;\n  /** Code signing private key path (defaults to same directory as certificate) */\n  privateKeyPath?: string;\n\n  /** Max amount of workers (threads) to use with Metro bundler, defaults to undefined for max workers. */\n  maxWorkers?: number;\n  /** Port to start the dev server on. */\n  port?: number;\n\n  /** Should start a headless dev server e.g. mock representation to approximate info from a server running in a different process. */\n  headless?: boolean;\n  /** Should instruct the bundler to create minified bundles. */\n  minify?: boolean;\n\n  /** Will the bundler be used for exporting. NOTE: This is an odd option to pass to the dev server. */\n  isExporting?: boolean;\n\n  // Webpack options\n  /** Should modify and create PWA icons. */\n  isImageEditingEnabled?: boolean;\n\n  location: CreateURLOptions;\n}\n\nconst PLATFORM_MANAGERS = {\n  simulator: () =>\n    require('../platforms/ios/ApplePlatformManager')\n      .ApplePlatformManager as typeof import('../platforms/ios/ApplePlatformManager').ApplePlatformManager,\n  emulator: () =>\n    require('../platforms/android/AndroidPlatformManager')\n      .AndroidPlatformManager as typeof import('../platforms/android/AndroidPlatformManager').AndroidPlatformManager,\n};\n\nexport abstract class BundlerDevServer {\n  /** Name of the bundler. */\n  abstract get name(): string;\n\n  /** Ngrok instance for managing tunnel connections. */\n  protected ngrok: AsyncNgrok | null = null;\n  /** Interfaces with the Expo 'Development Session' API. */\n  protected devSession: DevelopmentSession | null = null;\n  /** Http server and related info. */\n  protected instance: DevServerInstance | null = null;\n  /** Native platform interfaces for opening projects.  */\n  private platformManagers: Record<string, PlatformManager<any>> = {};\n  /** Manages the creation of dev server URLs. */\n  protected urlCreator?: UrlCreator | null = null;\n\n  private notifier: FileNotifier | null = null;\n  protected readonly devToolsPluginManager: DevToolsPluginManager;\n  public isDevClient: boolean;\n\n  constructor(\n    /** Project root folder. */\n    public projectRoot: string,\n    /** A mapping of bundlers to platforms. */\n    public platformBundlers: PlatformBundlers,\n    /** Advanced options */\n    options?: {\n      /**\n       * The instance of DevToolsPluginManager\n       * @default new DevToolsPluginManager(projectRoot)\n       */\n      devToolsPluginManager?: DevToolsPluginManager;\n      // TODO: Replace with custom scheme maybe...\n      isDevClient?: boolean;\n    }\n  ) {\n    this.devToolsPluginManager =\n      options?.devToolsPluginManager ?? new DevToolsPluginManager(projectRoot);\n    this.isDevClient = options?.isDevClient ?? false;\n  }\n\n  protected setInstance(instance: DevServerInstance) {\n    this.instance = instance;\n  }\n\n  /** Get the manifest middleware function. */\n  protected async getManifestMiddlewareAsync(\n    options: Pick<BundlerStartOptions, 'minify' | 'mode' | 'privateKeyPath'> = {}\n  ) {\n    const Middleware = require('./middleware/ExpoGoManifestHandlerMiddleware')\n      .ExpoGoManifestHandlerMiddleware as typeof import('./middleware/ExpoGoManifestHandlerMiddleware').ExpoGoManifestHandlerMiddleware;\n\n    const urlCreator = this.getUrlCreator();\n    const middleware = new Middleware(this.projectRoot, {\n      constructUrl: urlCreator.constructUrl.bind(urlCreator),\n      mode: options.mode,\n      minify: options.minify,\n      isNativeWebpack: this.name === 'webpack' && this.isTargetingNative(),\n      privateKeyPath: options.privateKeyPath,\n    });\n    return middleware;\n  }\n\n  /** Start the dev server using settings defined in the start command. */\n  public async startAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    await this.stopAsync();\n\n    let instance: DevServerInstance;\n    if (options.headless) {\n      instance = await this.startHeadlessAsync(options);\n    } else {\n      instance = await this.startImplementationAsync(options);\n    }\n\n    this.setInstance(instance);\n    await this.postStartAsync(options);\n    return instance;\n  }\n\n  protected abstract startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance>;\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    return false;\n  }\n\n  public abstract startTypeScriptServices(): Promise<void>;\n\n  public async watchEnvironmentVariables(): Promise<void> {\n    // noop -- We've only implemented this functionality in Metro.\n  }\n\n  /**\n   * Creates a mock server representation that can be used to estimate URLs for a server started in another process.\n   * This is used for the run commands where you can reuse the server from a previous run.\n   */\n  private async startHeadlessAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    if (!options.port)\n      throw new CommandError('HEADLESS_SERVER', 'headless dev server requires a port option');\n    this.urlCreator = this.getUrlCreator(options);\n\n    return {\n      // Create a mock server\n      server: {\n        close: () => {\n          this.instance = null;\n        },\n        addListener() {},\n      },\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware: {},\n      messageSocket: {\n        broadcast: () => {\n          throw new CommandError('HEADLESS_SERVER', 'Cannot broadcast messages to headless server');\n        },\n      },\n    };\n  }\n\n  /**\n   * Runs after the `startAsync` function, performing any additional common operations.\n   * You can assume the dev server is started by the time this function is called.\n   */\n  protected async postStartAsync(options: BundlerStartOptions) {\n    if (\n      options.location.hostType === 'tunnel' &&\n      !env.EXPO_OFFLINE &&\n      // This is a hack to prevent using tunnel on web since we block it upstream for some reason.\n      this.isTargetingNative()\n    ) {\n      await this._startTunnelAsync();\n    }\n    await this.startDevSessionAsync();\n\n    this.watchConfig();\n  }\n\n  protected abstract getConfigModuleIds(): string[];\n\n  protected watchConfig() {\n    this.notifier?.stopObserving();\n    this.notifier = new FileNotifier(this.projectRoot, this.getConfigModuleIds());\n    this.notifier.startObserving();\n  }\n\n  /** Create ngrok instance and start the tunnel server. Exposed for testing. */\n  public async _startTunnelAsync(): Promise<AsyncNgrok | null> {\n    const port = this.getInstance()?.location.port;\n    if (!port) return null;\n    debug('[ngrok] connect to port: ' + port);\n    this.ngrok = new AsyncNgrok(this.projectRoot, port);\n    await this.ngrok.startAsync();\n    return this.ngrok;\n  }\n\n  protected async startDevSessionAsync() {\n    // This is used to make Expo Go open the project in either Expo Go, or the web browser.\n    // Must come after ngrok (`startTunnelAsync`) setup.\n    this.devSession?.stopNotifying?.();\n    this.devSession = new DevelopmentSession(\n      this.projectRoot,\n      // This URL will be used on external devices so the computer IP won't be relevant.\n      this.isTargetingNative()\n        ? this.getNativeRuntimeUrl()\n        : this.getDevServerUrl({ hostType: 'localhost' }),\n      () => {\n        // TODO: This appears to be happening consistently after an hour.\n        // We should investigate why this is happening and fix it on our servers.\n        // Log.error(\n        //   chalk.red(\n        //     '\\nAn unexpected error occurred while updating the Dev Session API. This project will not appear in the \"Development servers\" section of the Expo Go app until this process has been restarted.'\n        //   )\n        // );\n        // Log.exception(error);\n        this.devSession?.closeAsync().catch((error) => {\n          debug('[dev-session] error closing: ' + error.message);\n        });\n      }\n    );\n\n    await this.devSession.startAsync({\n      runtime: this.isTargetingNative() ? 'native' : 'web',\n    });\n  }\n\n  public isTargetingNative() {\n    // Temporary hack while we implement multi-bundler dev server proxy.\n    return true;\n  }\n\n  public isTargetingWeb() {\n    return this.platformBundlers.web === this.name;\n  }\n\n  /**\n   * Sends a message over web sockets to any connected device,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params\n   */\n  public broadcastMessage(\n    method: 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ) {\n    this.getInstance()?.messageSocket.broadcast(method, params);\n  }\n\n  /** Get the running dev server instance. */\n  public getInstance() {\n    return this.instance;\n  }\n\n  /** Stop the running dev server instance. */\n  async stopAsync() {\n    // Stop file watching.\n    this.notifier?.stopObserving();\n\n    // Stop the dev session timer and tell Expo API to remove dev session.\n    await this.devSession?.closeAsync();\n\n    // Stop ngrok if running.\n    await this.ngrok?.stopAsync().catch((e) => {\n      Log.error(`Error stopping ngrok:`);\n      Log.exception(e);\n    });\n\n    return resolveWithTimeout(\n      () =>\n        new Promise<void>((resolve, reject) => {\n          // Close the server.\n          debug(`Stopping dev server (bundler: ${this.name})`);\n\n          if (this.instance?.server) {\n            this.instance.server.close((error) => {\n              debug(`Stopped dev server (bundler: ${this.name})`);\n              this.instance = null;\n              if (error) {\n                reject(error);\n              } else {\n                resolve();\n              }\n            });\n          } else {\n            debug(`Stopped dev server (bundler: ${this.name})`);\n            this.instance = null;\n            resolve();\n          }\n        }),\n      {\n        // NOTE(Bacon): Metro dev server doesn't seem to be closing in time.\n        timeout: 1000,\n        errorMessage: `Timeout waiting for '${this.name}' dev server to close`,\n      }\n    );\n  }\n\n  public getUrlCreator(options: Partial<Pick<BundlerStartOptions, 'port' | 'location'>> = {}) {\n    if (!this.urlCreator) {\n      assert(options?.port, 'Dev server instance not found');\n      this.urlCreator = new UrlCreator(options.location, {\n        port: options.port,\n        getTunnelUrl: this.getTunnelUrl.bind(this),\n      });\n    }\n    return this.urlCreator;\n  }\n\n  public getNativeRuntimeUrl(opts: Partial<CreateURLOptions> = {}) {\n    return this.isDevClient\n      ? this.getUrlCreator().constructDevClientUrl(opts) ?? this.getDevServerUrl()\n      : this.getUrlCreator().constructUrl({ ...opts, scheme: 'exp' });\n  }\n\n  /** Get the URL for the running instance of the dev server. */\n  public getDevServerUrl(options: { hostType?: 'localhost' } = {}): string | null {\n    const instance = this.getInstance();\n    if (!instance?.location) {\n      return null;\n    }\n    const { location } = instance;\n    if (options.hostType === 'localhost') {\n      return `${location.protocol}://localhost:${location.port}`;\n    }\n    return location.url ?? null;\n  }\n\n  /** Get the base URL for JS inspector */\n  public getJsInspectorBaseUrl(): string {\n    if (this.name !== 'metro') {\n      throw new CommandError(\n        'DEV_SERVER',\n        `Cannot get the JS inspector base url - bundler[${this.name}]`\n      );\n    }\n    return this.getUrlCreator().constructUrl({ scheme: 'http' });\n  }\n\n  /** Get the tunnel URL from ngrok. */\n  public getTunnelUrl(): string | null {\n    return this.ngrok?.getActiveUrl() ?? null;\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openPlatformAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS | 'desktop',\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    if (launchTarget === 'desktop') {\n      const serverUrl = this.getDevServerUrl({ hostType: 'localhost' });\n      // Allow opening the tunnel URL when using Metro web.\n      const url = this.name === 'metro' ? this.getTunnelUrl() ?? serverUrl : serverUrl;\n      await openBrowserAsync(url!);\n      return { url };\n    }\n\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime }, resolver);\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openCustomRuntimeAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS,\n    launchProps: Partial<BaseOpenInCustomProps> = {},\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    if (runtime !== 'custom') {\n      throw new CommandError(\n        `dev server cannot open custom runtimes either because it does not target native platforms or because it is not targeting dev clients. (target: ${runtime})`\n      );\n    }\n\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime: 'custom', props: launchProps }, resolver);\n  }\n\n  /** Get the URL for opening in Expo Go. */\n  protected getExpoGoUrl(): string {\n    return this.getUrlCreator().constructUrl({ scheme: 'exp' });\n  }\n\n  /** Should use the interstitial page for selecting which runtime to use. */\n  protected isRedirectPageEnabled(): boolean {\n    return (\n      !env.EXPO_NO_REDIRECT_PAGE &&\n      // if user passed --dev-client flag, skip interstitial page\n      !this.isDevClient &&\n      // Checks if dev client is installed.\n      !!resolveFrom.silent(this.projectRoot, 'expo-dev-client')\n    );\n  }\n\n  /** Get the redirect URL when redirecting is enabled. */\n  public getRedirectUrl(platform: keyof typeof PLATFORM_MANAGERS | null = null): string | null {\n    if (!this.isRedirectPageEnabled()) {\n      debug('Redirect page is disabled');\n      return null;\n    }\n\n    return (\n      this.getUrlCreator().constructLoadingUrl(\n        {},\n        platform === 'emulator' ? 'android' : platform === 'simulator' ? 'ios' : null\n      ) ?? null\n    );\n  }\n\n  public getReactDevToolsUrl(): string {\n    return new URL(\n      '_expo/react-devtools',\n      this.getUrlCreator().constructUrl({ scheme: 'http' })\n    ).toString();\n  }\n\n  protected async getPlatformManagerAsync(platform: keyof typeof PLATFORM_MANAGERS) {\n    if (!this.platformManagers[platform]) {\n      const Manager = PLATFORM_MANAGERS[platform]();\n      const port = this.getInstance()?.location.port;\n      if (!port || !this.urlCreator) {\n        throw new CommandError(\n          'DEV_SERVER',\n          'Cannot interact with native platforms until dev server has started'\n        );\n      }\n      debug(`Creating platform manager (platform: ${platform}, port: ${port})`);\n      this.platformManagers[platform] = new Manager(this.projectRoot, port, {\n        getCustomRuntimeUrl: this.urlCreator.constructDevClientUrl.bind(this.urlCreator),\n        getExpoGoUrl: this.getExpoGoUrl.bind(this),\n        getRedirectUrl: this.getRedirectUrl.bind(this, platform),\n        getDevServerUrl: this.getDevServerUrl.bind(this, { hostType: 'localhost' }),\n      });\n    }\n    return this.platformManagers[platform];\n  }\n}\n"],"names":["Log","debug","require","PLATFORM_MANAGERS","simulator","ApplePlatformManager","emulator","AndroidPlatformManager","BundlerDevServer","constructor","projectRoot","platformBundlers","options","ngrok","devSession","instance","platformManagers","urlCreator","notifier","devToolsPluginManager","DevToolsPluginManager","isDevClient","setInstance","getManifestMiddlewareAsync","Middleware","ExpoGoManifestHandlerMiddleware","getUrlCreator","middleware","constructUrl","bind","mode","minify","isNativeWebpack","name","isTargetingNative","privateKeyPath","startAsync","stopAsync","headless","startHeadlessAsync","startImplementationAsync","postStartAsync","waitForTypeScriptAsync","watchEnvironmentVariables","port","CommandError","server","close","addListener","location","host","url","protocol","messageSocket","broadcast","hostType","env","EXPO_OFFLINE","_startTunnelAsync","startDevSessionAsync","watchConfig","stopObserving","FileNotifier","getConfigModuleIds","startObserving","getInstance","AsyncNgrok","stopNotifying","DevelopmentSession","getNativeRuntimeUrl","getDevServerUrl","closeAsync","catch","error","message","runtime","isTargetingWeb","web","broadcastMessage","method","params","e","exception","resolveWithTimeout","Promise","resolve","reject","timeout","errorMessage","assert","UrlCreator","getTunnelUrl","opts","constructDevClientUrl","scheme","getJsInspectorBaseUrl","getActiveUrl","openPlatformAsync","launchTarget","resolver","serverUrl","openBrowserAsync","manager","getPlatformManagerAsync","openAsync","openCustomRuntimeAsync","launchProps","props","getExpoGoUrl","isRedirectPageEnabled","EXPO_NO_REDIRECT_PAGE","resolveFrom","silent","getRedirectUrl","platform","constructLoadingUrl","getReactDevToolsUrl","URL","toString","Manager","getCustomRuntimeUrl"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js
index 584953d..0c8cc14 100644
--- a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js
+++ b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js
@@ -5,6 +5,7 @@ Object.defineProperty(exports, "__esModule", {
 var _config = require("@expo/config");
 var _assert = _interopRequireDefault(require("assert"));
 var _chalk = _interopRequireDefault(require("chalk"));
+var _devToolsPluginManager = _interopRequireDefault(require("./DevToolsPluginManager"));
 var _platformBundlers = require("./platformBundlers");
 var _log = require("../../log");
 var _fileNotifier = require("../../utils/FileNotifier");
@@ -55,6 +56,7 @@ class DevServerManager {
         this.projectPrerequisites = [];
         this.notifier = null;
         this.notifier = this.watchBabelConfig();
+        this.devtoolsPluginManager = new _devToolsPluginManager.default(projectRoot);
     }
     watchBabelConfig() {
         const notifier = new _fileNotifier.FileNotifier(this.projectRoot, [
@@ -158,7 +160,10 @@ class DevServerManager {
         // Start all dev servers...
         for (const { type , options  } of startOptions){
             const BundlerDevServerClass = await BUNDLERS[type]();
-            const server = new BundlerDevServerClass(this.projectRoot, platformBundlers, !!(options == null ? void 0 : options.devClient));
+            const server = new BundlerDevServerClass(this.projectRoot, platformBundlers, {
+                devToolsPluginManager: this.devtoolsPluginManager,
+                isDevClient: !!(options == null ? void 0 : options.devClient)
+            });
             await server.startAsync(options != null ? options : this.options);
             devServers.push(server);
         }
diff --git a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map
index e1c3c4d..d528340 100644
--- a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/server/DevServerManager.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport { BundlerDevServer, BundlerStartOptions } from './BundlerDevServer';\nimport { getPlatformBundlers } from './platformBundlers';\nimport { Log } from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { logEventAsync } from '../../utils/analytics/rudderstackClient';\nimport { env } from '../../utils/env';\nimport { ProjectPrerequisite } from '../doctor/Prerequisite';\nimport { TypeScriptProjectPrerequisite } from '../doctor/typescript/TypeScriptProjectPrerequisite';\nimport { printItem } from '../interface/commandsTable';\nimport * as AndroidDebugBridge from '../platforms/android/adb';\nimport { resolveSchemeAsync } from '../resolveOptions';\n\nconst debug = require('debug')('expo:start:server:devServerManager') as typeof console.log;\n\nexport type MultiBundlerStartOptions = {\n  type: keyof typeof BUNDLERS;\n  options?: BundlerStartOptions;\n}[];\n\nconst devServers: BundlerDevServer[] = [];\n\nconst BUNDLERS = {\n  webpack: () =>\n    require('./webpack/WebpackBundlerDevServer')\n      .WebpackBundlerDevServer as typeof import('./webpack/WebpackBundlerDevServer').WebpackBundlerDevServer,\n  metro: () =>\n    require('./metro/MetroBundlerDevServer')\n      .MetroBundlerDevServer as typeof import('./metro/MetroBundlerDevServer').MetroBundlerDevServer,\n};\n\n/** Manages interacting with multiple dev servers. */\nexport class DevServerManager {\n  private projectPrerequisites: ProjectPrerequisite<any, void>[] = [];\n\n  private notifier: FileNotifier | null = null;\n\n  constructor(\n    public projectRoot: string,\n    /** Keep track of the original CLI options for bundlers that are started interactively. */\n    public options: BundlerStartOptions\n  ) {\n    this.notifier = this.watchBabelConfig();\n  }\n\n  private watchBabelConfig() {\n    const notifier = new FileNotifier(\n      this.projectRoot,\n      [\n        './babel.config.js',\n        './babel.config.json',\n        './.babelrc.json',\n        './.babelrc',\n        './.babelrc.js',\n      ],\n      {\n        additionalWarning: chalk` You may need to clear the bundler cache with the {bold --clear} flag for your changes to take effect.`,\n      }\n    );\n\n    notifier.startObserving();\n\n    return notifier;\n  }\n\n  /** Lazily load and assert a project-level prerequisite. */\n  async ensureProjectPrerequisiteAsync(PrerequisiteClass: typeof ProjectPrerequisite<any, any>) {\n    let prerequisite = this.projectPrerequisites.find(\n      (prerequisite) => prerequisite instanceof PrerequisiteClass\n    );\n    if (!prerequisite) {\n      prerequisite = new PrerequisiteClass(this.projectRoot);\n      this.projectPrerequisites.push(prerequisite);\n    }\n    return await prerequisite.assertAsync();\n  }\n\n  /**\n   * Sends a message over web sockets to all connected devices,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params extra event info to send over the socket.\n   */\n  broadcastMessage(method: 'reload' | 'devMenu' | 'sendDevCommand', params?: Record<string, any>) {\n    devServers.forEach((server) => {\n      server.broadcastMessage(method, params);\n    });\n  }\n\n  /** Get the port for the dev server (either Webpack or Metro) that is hosting code for React Native runtimes. */\n  getNativeDevServerPort() {\n    const server = devServers.find((server) => server.isTargetingNative());\n    return server?.getInstance()?.location.port ?? null;\n  }\n\n  /** Get the first server that targets web. */\n  getWebDevServer() {\n    const server = devServers.find((server) => server.isTargetingWeb());\n    return server ?? null;\n  }\n\n  getDefaultDevServer(): BundlerDevServer {\n    // Return the first native dev server otherwise return the first dev server.\n    const server = devServers.find((server) => server.isTargetingNative());\n    const defaultServer = server ?? devServers[0];\n    assert(defaultServer, 'No dev servers are running');\n    return defaultServer;\n  }\n\n  async ensureWebDevServerRunningAsync() {\n    const [server] = devServers.filter((server) => server.isTargetingWeb());\n    if (server) {\n      return;\n    }\n    const { exp } = getConfig(this.projectRoot, {\n      skipPlugins: true,\n      skipSDKVersionRequirement: true,\n    });\n    const bundler = getPlatformBundlers(exp).web;\n    debug(`Starting ${bundler} dev server for web`);\n    return this.startAsync([\n      {\n        type: bundler,\n        options: this.options,\n      },\n    ]);\n  }\n\n  /** Switch between Expo Go and Expo Dev Clients. */\n  async toggleRuntimeMode(isUsingDevClient: boolean = !this.options.devClient): Promise<boolean> {\n    const nextMode = isUsingDevClient ? '--dev-client' : '--go';\n    Log.log(printItem(chalk`Switching to {bold ${nextMode}}`));\n\n    const nextScheme = await resolveSchemeAsync(this.projectRoot, {\n      devClient: isUsingDevClient,\n      // NOTE: The custom `--scheme` argument is lost from this point on.\n    });\n\n    this.options.location.scheme = nextScheme;\n    this.options.devClient = isUsingDevClient;\n    for (const devServer of devServers) {\n      devServer.isDevClient = isUsingDevClient;\n      const urlCreator = devServer.getUrlCreator();\n      urlCreator.defaults ??= {};\n      urlCreator.defaults.scheme = nextScheme;\n    }\n\n    debug(`New runtime options (runtime: ${nextMode}):`, this.options);\n    return true;\n  }\n\n  /** Start all dev servers. */\n  async startAsync(startOptions: MultiBundlerStartOptions): Promise<ExpoConfig> {\n    const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n\n    await logEventAsync('Start Project', {\n      sdkVersion: exp.sdkVersion ?? null,\n    });\n\n    const platformBundlers = getPlatformBundlers(exp);\n\n    // Start all dev servers...\n    for (const { type, options } of startOptions) {\n      const BundlerDevServerClass = await BUNDLERS[type]();\n      const server = new BundlerDevServerClass(\n        this.projectRoot,\n        platformBundlers,\n        !!options?.devClient\n      );\n      await server.startAsync(options ?? this.options);\n      devServers.push(server);\n    }\n\n    return exp;\n  }\n\n  async bootstrapTypeScriptAsync() {\n    const typescriptPrerequisite = await this.ensureProjectPrerequisiteAsync(\n      TypeScriptProjectPrerequisite\n    );\n\n    if (env.EXPO_NO_TYPESCRIPT_SETUP) {\n      return;\n    }\n\n    // Optionally, wait for the user to add TypeScript during the\n    // development cycle.\n    const server = devServers.find((server) => server.name === 'metro');\n    if (!server) {\n      return;\n    }\n\n    // The dev server shouldn't wait for the typescript services\n    if (!typescriptPrerequisite) {\n      server.waitForTypeScriptAsync().then(async (success) => {\n        if (success) {\n          server.startTypeScriptServices();\n        }\n      });\n    } else {\n      server.startTypeScriptServices();\n    }\n  }\n\n  async watchEnvironmentVariables() {\n    await devServers.find((server) => server.name === 'metro')?.watchEnvironmentVariables();\n  }\n\n  /** Stop all servers including ADB. */\n  async stopAsync(): Promise<void> {\n    await Promise.allSettled([\n      this.notifier?.stopObserving(),\n      // Stop all dev servers\n      ...devServers.map((server) => server.stopAsync()),\n      // Stop ADB\n      AndroidDebugBridge.getServer().stopAsync(),\n    ]);\n  }\n}\n"],"names":["AndroidDebugBridge","urlCreator","debug","require","devServers","BUNDLERS","webpack","WebpackBundlerDevServer","metro","MetroBundlerDevServer","DevServerManager","constructor","projectRoot","options","projectPrerequisites","notifier","watchBabelConfig","FileNotifier","additionalWarning","chalk","startObserving","ensureProjectPrerequisiteAsync","PrerequisiteClass","prerequisite","find","push","assertAsync","broadcastMessage","method","params","forEach","server","getNativeDevServerPort","isTargetingNative","getInstance","location","port","getWebDevServer","isTargetingWeb","getDefaultDevServer","defaultServer","assert","ensureWebDevServerRunningAsync","filter","exp","getConfig","skipPlugins","skipSDKVersionRequirement","bundler","getPlatformBundlers","web","startAsync","type","toggleRuntimeMode","isUsingDevClient","devClient","nextMode","Log","log","printItem","nextScheme","resolveSchemeAsync","scheme","devServer","isDevClient","getUrlCreator","defaults","startOptions","logEventAsync","sdkVersion","platformBundlers","BundlerDevServerClass","bootstrapTypeScriptAsync","typescriptPrerequisite","TypeScriptProjectPrerequisite","env","EXPO_NO_TYPESCRIPT_SETUP","name","waitForTypeScriptAsync","then","success","startTypeScriptServices","watchEnvironmentVariables","stopAsync","Promise","allSettled","stopObserving","map","getServer"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/server/DevServerManager.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport { BundlerDevServer, BundlerStartOptions } from './BundlerDevServer';\nimport DevToolsPluginManager from './DevToolsPluginManager';\nimport { getPlatformBundlers } from './platformBundlers';\nimport { Log } from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { logEventAsync } from '../../utils/analytics/rudderstackClient';\nimport { env } from '../../utils/env';\nimport { ProjectPrerequisite } from '../doctor/Prerequisite';\nimport { TypeScriptProjectPrerequisite } from '../doctor/typescript/TypeScriptProjectPrerequisite';\nimport { printItem } from '../interface/commandsTable';\nimport * as AndroidDebugBridge from '../platforms/android/adb';\nimport { resolveSchemeAsync } from '../resolveOptions';\n\nconst debug = require('debug')('expo:start:server:devServerManager') as typeof console.log;\n\nexport type MultiBundlerStartOptions = {\n  type: keyof typeof BUNDLERS;\n  options?: BundlerStartOptions;\n}[];\n\nconst devServers: BundlerDevServer[] = [];\n\nconst BUNDLERS = {\n  webpack: () =>\n    require('./webpack/WebpackBundlerDevServer')\n      .WebpackBundlerDevServer as typeof import('./webpack/WebpackBundlerDevServer').WebpackBundlerDevServer,\n  metro: () =>\n    require('./metro/MetroBundlerDevServer')\n      .MetroBundlerDevServer as typeof import('./metro/MetroBundlerDevServer').MetroBundlerDevServer,\n};\n\n/** Manages interacting with multiple dev servers. */\nexport class DevServerManager {\n  private projectPrerequisites: ProjectPrerequisite<any, void>[] = [];\n  public readonly devtoolsPluginManager: DevToolsPluginManager;\n\n  private notifier: FileNotifier | null = null;\n\n  constructor(\n    public projectRoot: string,\n    /** Keep track of the original CLI options for bundlers that are started interactively. */\n    public options: BundlerStartOptions\n  ) {\n    this.notifier = this.watchBabelConfig();\n    this.devtoolsPluginManager = new DevToolsPluginManager(projectRoot);\n  }\n\n  private watchBabelConfig() {\n    const notifier = new FileNotifier(\n      this.projectRoot,\n      [\n        './babel.config.js',\n        './babel.config.json',\n        './.babelrc.json',\n        './.babelrc',\n        './.babelrc.js',\n      ],\n      {\n        additionalWarning: chalk` You may need to clear the bundler cache with the {bold --clear} flag for your changes to take effect.`,\n      }\n    );\n\n    notifier.startObserving();\n\n    return notifier;\n  }\n\n  /** Lazily load and assert a project-level prerequisite. */\n  async ensureProjectPrerequisiteAsync(PrerequisiteClass: typeof ProjectPrerequisite<any, any>) {\n    let prerequisite = this.projectPrerequisites.find(\n      (prerequisite) => prerequisite instanceof PrerequisiteClass\n    );\n    if (!prerequisite) {\n      prerequisite = new PrerequisiteClass(this.projectRoot);\n      this.projectPrerequisites.push(prerequisite);\n    }\n    return await prerequisite.assertAsync();\n  }\n\n  /**\n   * Sends a message over web sockets to all connected devices,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params extra event info to send over the socket.\n   */\n  broadcastMessage(method: 'reload' | 'devMenu' | 'sendDevCommand', params?: Record<string, any>) {\n    devServers.forEach((server) => {\n      server.broadcastMessage(method, params);\n    });\n  }\n\n  /** Get the port for the dev server (either Webpack or Metro) that is hosting code for React Native runtimes. */\n  getNativeDevServerPort() {\n    const server = devServers.find((server) => server.isTargetingNative());\n    return server?.getInstance()?.location.port ?? null;\n  }\n\n  /** Get the first server that targets web. */\n  getWebDevServer() {\n    const server = devServers.find((server) => server.isTargetingWeb());\n    return server ?? null;\n  }\n\n  getDefaultDevServer(): BundlerDevServer {\n    // Return the first native dev server otherwise return the first dev server.\n    const server = devServers.find((server) => server.isTargetingNative());\n    const defaultServer = server ?? devServers[0];\n    assert(defaultServer, 'No dev servers are running');\n    return defaultServer;\n  }\n\n  async ensureWebDevServerRunningAsync() {\n    const [server] = devServers.filter((server) => server.isTargetingWeb());\n    if (server) {\n      return;\n    }\n    const { exp } = getConfig(this.projectRoot, {\n      skipPlugins: true,\n      skipSDKVersionRequirement: true,\n    });\n    const bundler = getPlatformBundlers(exp).web;\n    debug(`Starting ${bundler} dev server for web`);\n    return this.startAsync([\n      {\n        type: bundler,\n        options: this.options,\n      },\n    ]);\n  }\n\n  /** Switch between Expo Go and Expo Dev Clients. */\n  async toggleRuntimeMode(isUsingDevClient: boolean = !this.options.devClient): Promise<boolean> {\n    const nextMode = isUsingDevClient ? '--dev-client' : '--go';\n    Log.log(printItem(chalk`Switching to {bold ${nextMode}}`));\n\n    const nextScheme = await resolveSchemeAsync(this.projectRoot, {\n      devClient: isUsingDevClient,\n      // NOTE: The custom `--scheme` argument is lost from this point on.\n    });\n\n    this.options.location.scheme = nextScheme;\n    this.options.devClient = isUsingDevClient;\n    for (const devServer of devServers) {\n      devServer.isDevClient = isUsingDevClient;\n      const urlCreator = devServer.getUrlCreator();\n      urlCreator.defaults ??= {};\n      urlCreator.defaults.scheme = nextScheme;\n    }\n\n    debug(`New runtime options (runtime: ${nextMode}):`, this.options);\n    return true;\n  }\n\n  /** Start all dev servers. */\n  async startAsync(startOptions: MultiBundlerStartOptions): Promise<ExpoConfig> {\n    const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n\n    await logEventAsync('Start Project', {\n      sdkVersion: exp.sdkVersion ?? null,\n    });\n\n    const platformBundlers = getPlatformBundlers(exp);\n\n    // Start all dev servers...\n    for (const { type, options } of startOptions) {\n      const BundlerDevServerClass = await BUNDLERS[type]();\n      const server = new BundlerDevServerClass(this.projectRoot, platformBundlers, {\n        devToolsPluginManager: this.devtoolsPluginManager,\n        isDevClient: !!options?.devClient,\n      });\n      await server.startAsync(options ?? this.options);\n      devServers.push(server);\n    }\n\n    return exp;\n  }\n\n  async bootstrapTypeScriptAsync() {\n    const typescriptPrerequisite = await this.ensureProjectPrerequisiteAsync(\n      TypeScriptProjectPrerequisite\n    );\n\n    if (env.EXPO_NO_TYPESCRIPT_SETUP) {\n      return;\n    }\n\n    // Optionally, wait for the user to add TypeScript during the\n    // development cycle.\n    const server = devServers.find((server) => server.name === 'metro');\n    if (!server) {\n      return;\n    }\n\n    // The dev server shouldn't wait for the typescript services\n    if (!typescriptPrerequisite) {\n      server.waitForTypeScriptAsync().then(async (success) => {\n        if (success) {\n          server.startTypeScriptServices();\n        }\n      });\n    } else {\n      server.startTypeScriptServices();\n    }\n  }\n\n  async watchEnvironmentVariables() {\n    await devServers.find((server) => server.name === 'metro')?.watchEnvironmentVariables();\n  }\n\n  /** Stop all servers including ADB. */\n  async stopAsync(): Promise<void> {\n    await Promise.allSettled([\n      this.notifier?.stopObserving(),\n      // Stop all dev servers\n      ...devServers.map((server) => server.stopAsync()),\n      // Stop ADB\n      AndroidDebugBridge.getServer().stopAsync(),\n    ]);\n  }\n}\n"],"names":["AndroidDebugBridge","urlCreator","debug","require","devServers","BUNDLERS","webpack","WebpackBundlerDevServer","metro","MetroBundlerDevServer","DevServerManager","constructor","projectRoot","options","projectPrerequisites","notifier","watchBabelConfig","devtoolsPluginManager","DevToolsPluginManager","FileNotifier","additionalWarning","chalk","startObserving","ensureProjectPrerequisiteAsync","PrerequisiteClass","prerequisite","find","push","assertAsync","broadcastMessage","method","params","forEach","server","getNativeDevServerPort","isTargetingNative","getInstance","location","port","getWebDevServer","isTargetingWeb","getDefaultDevServer","defaultServer","assert","ensureWebDevServerRunningAsync","filter","exp","getConfig","skipPlugins","skipSDKVersionRequirement","bundler","getPlatformBundlers","web","startAsync","type","toggleRuntimeMode","isUsingDevClient","devClient","nextMode","Log","log","printItem","nextScheme","resolveSchemeAsync","scheme","devServer","isDevClient","getUrlCreator","defaults","startOptions","logEventAsync","sdkVersion","platformBundlers","BundlerDevServerClass","devToolsPluginManager","bootstrapTypeScriptAsync","typescriptPrerequisite","TypeScriptProjectPrerequisite","env","EXPO_NO_TYPESCRIPT_SETUP","name","waitForTypeScriptAsync","then","success","startTypeScriptServices","watchEnvironmentVariables","stopAsync","Promise","allSettled","stopObserving","map","getServer"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js
new file mode 100644
index 0000000..e39e3eb
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js
@@ -0,0 +1,63 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+exports.DevToolsPluginEndpoint = exports.default = void 0;
+var _path = _interopRequireDefault(require("path"));
+var _resolveFrom = _interopRequireDefault(require("resolve-from"));
+class DevToolsPluginManager {
+    constructor(projectRoot){
+        this.projectRoot = projectRoot;
+        this.plugins = null;
+    }
+    async queryPluginsAsync() {
+        if (this.plugins) {
+            return this.plugins;
+        }
+        const plugins = (await this.queryAutolinkedPluginsAsync(this.projectRoot)).map((plugin)=>({
+                ...plugin,
+                webpageEndpoint: `${DevToolsPluginEndpoint}/${plugin.packageName}`
+            })
+        );
+        this.plugins = plugins;
+        return this.plugins;
+    }
+    async queryPluginWebpageRootAsync(pluginName) {
+        const plugins = await this.queryPluginsAsync();
+        const plugin = plugins.find((p)=>p.packageName === pluginName
+        );
+        var ref;
+        return (ref = plugin == null ? void 0 : plugin.webpageRoot) != null ? ref : null;
+    }
+    async queryAutolinkedPluginsAsync(projectRoot) {
+        const expoPackagePath = _resolveFrom.default.silent(projectRoot, "expo/package.json");
+        if (!expoPackagePath) {
+            return [];
+        }
+        const resolvedPath = _resolveFrom.default.silent(_path.default.dirname(expoPackagePath), "expo-modules-autolinking/exports");
+        if (!resolvedPath) {
+            return [];
+        }
+        const autolinkingModule = require(resolvedPath);
+        if (!autolinkingModule.queryAutolinkingModulesFromProjectAsync) {
+            throw new Error("Missing exported `queryAutolinkingModulesFromProjectAsync()` function from `expo-modules-autolinking`");
+        }
+        const plugins = await autolinkingModule.queryAutolinkingModulesFromProjectAsync(projectRoot, {
+            platform: "devtools",
+            onlyProjectDeps: false
+        });
+        debug("Found autolinked plugins", this.plugins);
+        return plugins;
+    }
+}
+exports.default = DevToolsPluginManager;
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
+const debug = require("debug")("expo:start:server:devtools");
+const DevToolsPluginEndpoint = "/_expo/plugins";
+exports.DevToolsPluginEndpoint = DevToolsPluginEndpoint;
+
+//# sourceMappingURL=DevToolsPluginManager.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js.map b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js.map
new file mode 100644
index 0000000..95e11ed
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../../src/start/server/DevToolsPluginManager.ts"],"sourcesContent":["import type { ModuleDescriptorDevTools } from 'expo-modules-autolinking/exports';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nconst debug = require('debug')('expo:start:server:devtools');\n\nexport const DevToolsPluginEndpoint = '/_expo/plugins';\n\ninterface AutolinkingPlugin {\n  packageName: string;\n  packageRoot: string;\n  webpageRoot: string;\n}\n\nexport interface DevToolsPlugin extends AutolinkingPlugin {\n  webpageEndpoint: string;\n}\n\nexport default class DevToolsPluginManager {\n  private plugins: DevToolsPlugin[] | null = null;\n\n  constructor(private projectRoot: string) {}\n\n  public async queryPluginsAsync(): Promise<DevToolsPlugin[]> {\n    if (this.plugins) {\n      return this.plugins;\n    }\n    const plugins = (await this.queryAutolinkedPluginsAsync(this.projectRoot)).map((plugin) => ({\n      ...plugin,\n      webpageEndpoint: `${DevToolsPluginEndpoint}/${plugin.packageName}`,\n    }));\n    this.plugins = plugins;\n    return this.plugins;\n  }\n\n  public async queryPluginWebpageRootAsync(pluginName: string): Promise<string | null> {\n    const plugins = await this.queryPluginsAsync();\n    const plugin = plugins.find((p) => p.packageName === pluginName);\n    return plugin?.webpageRoot ?? null;\n  }\n\n  private async queryAutolinkedPluginsAsync(projectRoot: string): Promise<AutolinkingPlugin[]> {\n    const expoPackagePath = resolveFrom.silent(projectRoot, 'expo/package.json');\n    if (!expoPackagePath) {\n      return [];\n    }\n    const resolvedPath = resolveFrom.silent(\n      path.dirname(expoPackagePath),\n      'expo-modules-autolinking/exports'\n    );\n    if (!resolvedPath) {\n      return [];\n    }\n    const autolinkingModule = require(\n      resolvedPath\n    ) as typeof import('expo-modules-autolinking/exports');\n    if (!autolinkingModule.queryAutolinkingModulesFromProjectAsync) {\n      throw new Error(\n        'Missing exported `queryAutolinkingModulesFromProjectAsync()` function from `expo-modules-autolinking`'\n      );\n    }\n    const plugins = (await autolinkingModule.queryAutolinkingModulesFromProjectAsync(projectRoot, {\n      platform: 'devtools',\n      onlyProjectDeps: false,\n    })) as ModuleDescriptorDevTools[];\n    debug('Found autolinked plugins', this.plugins);\n    return plugins;\n  }\n}\n"],"names":["DevToolsPluginManager","constructor","projectRoot","plugins","queryPluginsAsync","queryAutolinkedPluginsAsync","map","plugin","webpageEndpoint","DevToolsPluginEndpoint","packageName","queryPluginWebpageRootAsync","pluginName","find","p","webpageRoot","expoPackagePath","resolveFrom","silent","resolvedPath","path","dirname","autolinkingModule","require","queryAutolinkingModulesFromProjectAsync","Error","platform","onlyProjectDeps","debug"],"mappings":"AAAA;;;;;AACiB,IAAA,KAAM,kCAAN,MAAM,EAAA;AACC,IAAA,YAAc,kCAAd,cAAc,EAAA;AAgBvB,MAAMA,qBAAqB;IAGxCC,YAAoBC,WAAmB,CAAE;aAArBA,WAAmB,GAAnBA,WAAmB;aAF/BC,OAAO,GAA4B,IAAI;KAEJ;IAE3C,MAAaC,iBAAiB,GAA8B;QAC1D,IAAI,IAAI,CAACD,OAAO,EAAE;YAChB,OAAO,IAAI,CAACA,OAAO,CAAC;SACrB;QACD,MAAMA,OAAO,GAAG,CAAC,MAAM,IAAI,CAACE,2BAA2B,CAAC,IAAI,CAACH,WAAW,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,MAAM,GAAK,CAAC;gBAC1F,GAAGA,MAAM;gBACTC,eAAe,EAAE,CAAC,EAAEC,sBAAsB,CAAC,CAAC,EAAEF,MAAM,CAACG,WAAW,CAAC,CAAC;aACnE,CAAC;QAAA,CAAC,AAAC;QACJ,IAAI,CAACP,OAAO,GAAGA,OAAO,CAAC;QACvB,OAAO,IAAI,CAACA,OAAO,CAAC;KACrB;IAED,MAAaQ,2BAA2B,CAACC,UAAkB,EAA0B;QACnF,MAAMT,OAAO,GAAG,MAAM,IAAI,CAACC,iBAAiB,EAAE,AAAC;QAC/C,MAAMG,MAAM,GAAGJ,OAAO,CAACU,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACJ,WAAW,KAAKE,UAAU;QAAA,CAAC,AAAC;YAC1DL,GAAmB;QAA1B,OAAOA,CAAAA,GAAmB,GAAnBA,MAAM,QAAa,GAAnBA,KAAAA,CAAmB,GAAnBA,MAAM,CAAEQ,WAAW,YAAnBR,GAAmB,GAAI,IAAI,CAAC;KACpC;IAED,MAAcF,2BAA2B,CAACH,WAAmB,EAAgC;QAC3F,MAAMc,eAAe,GAAGC,YAAW,QAAA,CAACC,MAAM,CAAChB,WAAW,EAAE,mBAAmB,CAAC,AAAC;QAC7E,IAAI,CAACc,eAAe,EAAE;YACpB,OAAO,EAAE,CAAC;SACX;QACD,MAAMG,YAAY,GAAGF,YAAW,QAAA,CAACC,MAAM,CACrCE,KAAI,QAAA,CAACC,OAAO,CAACL,eAAe,CAAC,EAC7B,kCAAkC,CACnC,AAAC;QACF,IAAI,CAACG,YAAY,EAAE;YACjB,OAAO,EAAE,CAAC;SACX;QACD,MAAMG,iBAAiB,GAAGC,OAAO,CAC/BJ,YAAY,CACb,AAAqD,AAAC;QACvD,IAAI,CAACG,iBAAiB,CAACE,uCAAuC,EAAE;YAC9D,MAAM,IAAIC,KAAK,CACb,uGAAuG,CACxG,CAAC;SACH;QACD,MAAMtB,OAAO,GAAI,MAAMmB,iBAAiB,CAACE,uCAAuC,CAACtB,WAAW,EAAE;YAC5FwB,QAAQ,EAAE,UAAU;YACpBC,eAAe,EAAE,KAAK;SACvB,CAAC,AAA+B,AAAC;QAClCC,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAACzB,OAAO,CAAC,CAAC;QAChD,OAAOA,OAAO,CAAC;KAChB;CACF;kBAlDoBH,qBAAqB;;;;;;AAd1C,MAAM4B,KAAK,GAAGL,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC,AAAC;AAEtD,MAAMd,sBAAsB,GAAG,gBAAgB,AAAC;QAA1CA,sBAAsB,GAAtBA,sBAAsB"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
index 42c2bc0..0b7ffb1 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
@@ -24,6 +24,7 @@ var _bundlerDevServer = require("../BundlerDevServer");
 var _getStaticRenderFunctions = require("../getStaticRenderFunctions");
 var _contextModuleSourceMapsMiddleware = require("../middleware/ContextModuleSourceMapsMiddleware");
 var _createFileMiddleware = require("../middleware/CreateFileMiddleware");
+var _devToolsPluginMiddleware = require("../middleware/DevToolsPluginMiddleware");
 var _faviconMiddleware = require("../middleware/FaviconMiddleware");
 var _historyFallbackMiddleware = require("../middleware/HistoryFallbackMiddleware");
 var _interstitialPageMiddleware = require("../middleware/InterstitialPageMiddleware");
@@ -82,17 +83,7 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
         (options.devClient ? Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT : await (0, _port).getFreePortAsync(EXPO_GO_METRO_PORT));
         return port;
     }
-    async getExpoRouterRoutesManifestAsync({ appDir  }) {
-        const manifest = await (0, _fetchRouterManifest).fetchManifest(this.projectRoot, {
-            asJson: true,
-            appDir
-        });
-        if (!manifest) {
-            throw new _errors.CommandError("EXPO_ROUTER_SERVER_MANIFEST", "Unexpected error: server manifest could not be fetched.");
-        }
-        return manifest;
-    }
-    async exportExpoRouterApiRoutesAsync({ mode , appDir , outputDir  }) {
+    async exportExpoRouterApiRoutesAsync({ mode , appDir , outputDir , prerenderManifest  }) {
         const manifest = await this.getExpoRouterRoutesManifestAsync({
             appDir
         });
@@ -112,7 +103,10 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
             route.file = artifactFilename;
         }
         return {
-            manifest,
+            manifest: {
+                ...manifest,
+                htmlRoutes: prerenderManifest.htmlRoutes
+            },
             files
         };
     }
@@ -128,15 +122,27 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
             bundleUrl: isDev ? devBundleUrl : undefined
         });
     }
+    async getExpoRouterRoutesManifestAsync({ appDir  }) {
+        // getBuiltTimeServerManifest
+        const manifest = await (0, _fetchRouterManifest).fetchManifest(this.projectRoot, {
+            asJson: true,
+            appDir
+        });
+        if (!manifest) {
+            throw new _errors.CommandError("EXPO_ROUTER_SERVER_MANIFEST", "Unexpected error: server manifest could not be fetched.");
+        }
+        return manifest;
+    }
     async getStaticRenderFunctionAsync({ mode , minify =mode !== "development"  }) {
         const url = this.getDevServerUrl();
-        const { getStaticContent , getManifest  } = await (0, _getStaticRenderFunctions).getStaticRenderFunctions(this.projectRoot, url, {
+        const { getStaticContent , getManifest , getBuildTimeServerManifestAsync  } = await (0, _getStaticRenderFunctions).getStaticRenderFunctions(this.projectRoot, url, {
             minify,
             dev: mode !== "production",
             // Ensure the API Routes are included
             environment: "node"
         });
         return {
+            serverManifest: await getBuildTimeServerManifestAsync(),
             // Get routes from Expo Router.
             manifest: await getManifest({
                 fetchData: true,
@@ -299,6 +305,7 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
             scheme: (_scheme = options.location.scheme) != null ? _scheme : null
         }).getHandler());
         middleware.use(new _reactDevToolsPageMiddleware.ReactDevToolsPageMiddleware(this.projectRoot).getHandler());
+        middleware.use(new _devToolsPluginMiddleware.DevToolsPluginMiddleware(this.projectRoot, this.devToolsPluginManager).getHandler());
         const deepLinkMiddleware = new _runtimeRedirectMiddleware.RuntimeRedirectMiddleware(this.projectRoot, {
             onDeepLink: getDeepLinkHandler(this.projectRoot),
             getLocation: ({ runtime  })=>{
@@ -350,7 +357,7 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
                 // @ts-expect-error: TODO
                 if (((ref2 = exp.web) == null ? void 0 : ref2.output) === "server") {
                     // Cache observation for API Routes...
-                    (0, _waitForMetroToObserveTypeScriptFile).observeApiRouteChanges(this.projectRoot, {
+                    (0, _waitForMetroToObserveTypeScriptFile).observeApiRouteChanges(appDir, {
                         metro,
                         server
                     }, async (filepath, op)=>{
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
index cfb56ec..1becc5f 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport chalk from 'chalk';\nimport fetch from 'node-fetch';\nimport path from 'path';\n\nimport { bundleApiRoute, rebundleApiRoute } from './bundleApiRoutes';\nimport { createRouteHandlerMiddleware } from './createServerRouteMiddleware';\nimport { fetchManifest } from './fetchRouterManifest';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport { getRouterDirectoryWithManifest, isApiRouteConvention } from './router';\nimport { observeApiRouteChanges, observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\nimport { Log } from '../../../log';\nimport getDevClientProperties from '../../../utils/analytics/getDevClientProperties';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { CommandError } from '../../../utils/errors';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport { getStaticRenderFunctions } from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport {\n  createBundleUrlPath,\n  resolveMainModuleName,\n  shouldEnableAsyncImports,\n} from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport {\n  DeepLinkHandler,\n  RuntimeRedirectMiddleware,\n} from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport { prependMiddleware } from '../middleware/mutations';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\n\nexport class ForwardHtmlError extends CommandError {\n  constructor(\n    message: string,\n    public html: string,\n    public statusCode: number\n  ) {\n    super(message);\n  }\n}\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: import('metro').Server | null = null;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  async getExpoRouterRoutesManifestAsync({ appDir }: { appDir: string }) {\n    const manifest = await fetchManifest(this.projectRoot, {\n      asJson: true,\n      appDir,\n    });\n\n    if (!manifest) {\n      throw new CommandError(\n        'EXPO_ROUTER_SERVER_MANIFEST',\n        'Unexpected error: server manifest could not be fetched.'\n      );\n    }\n\n    return manifest;\n  }\n\n  async exportExpoRouterApiRoutesAsync({\n    mode,\n    appDir,\n    outputDir,\n  }: {\n    mode: 'development' | 'production';\n    appDir: string;\n    outputDir: string;\n  }) {\n    const manifest = await this.getExpoRouterRoutesManifestAsync({\n      appDir,\n    });\n\n    const files: Map<string, string> = new Map();\n\n    for (const route of manifest.apiRoutes) {\n      const filepath = path.join(appDir, route.file);\n      const contents = await bundleApiRoute(this.projectRoot, filepath, {\n        mode,\n        appDir,\n        port: this.getInstance()?.location.port,\n        shouldThrow: true,\n      });\n      const artifactFilename = path.join(\n        outputDir,\n        path.relative(appDir, filepath.replace(/\\.[tj]sx?$/, '.js'))\n      );\n      files.set(artifactFilename, contents!);\n      // Remap the manifest files to represent the output files.\n      route.file = artifactFilename;\n    }\n\n    return { manifest, files };\n  }\n\n  async composeResourcesWithHtml({\n    mode,\n    resources,\n    template,\n    devBundleUrl,\n    basePath,\n  }: {\n    mode: 'development' | 'production';\n    resources: SerialAsset[];\n    template: string;\n    /** asset prefix used for deploying to non-standard origins like GitHub pages. */\n    basePath: string;\n    devBundleUrl?: string;\n  }): Promise<string> {\n    if (!resources) {\n      return '';\n    }\n    const isDev = mode === 'development';\n    return htmlFromSerialAssets(resources, {\n      dev: isDev,\n      template,\n      basePath,\n      bundleUrl: isDev ? devBundleUrl : undefined,\n    });\n  }\n\n  async getStaticRenderFunctionAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: 'development' | 'production';\n    minify?: boolean;\n  }) {\n    const url = this.getDevServerUrl()!;\n\n    const { getStaticContent, getManifest } = await getStaticRenderFunctions(\n      this.projectRoot,\n      url,\n      {\n        minify,\n        dev: mode !== 'production',\n        // Ensure the API Routes are included\n        environment: 'node',\n      }\n    );\n    return {\n      // Get routes from Expo Router.\n      manifest: await getManifest({ fetchData: true, preserveApiRoutes: false }),\n      // Get route generating function\n      async renderAsync(path: string) {\n        return await getStaticContent(new URL(path, url));\n      },\n    };\n  }\n\n  async getStaticResourcesAsync({\n    mode,\n    minify = mode !== 'development',\n    includeMaps,\n  }: {\n    mode: string;\n    minify?: boolean;\n    includeMaps?: boolean;\n  }): Promise<SerialAsset[]> {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      minify,\n      environment: 'client',\n      serializerOutput: 'static',\n      serializerIncludeMaps: includeMaps,\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform: 'web' }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n    });\n\n    const bundleUrl = new URL(devBundleUrlPathname, this.getDevServerUrl()!);\n\n    // Fetch the generated HTML from our custom Metro serializer\n    const results = await fetch(bundleUrl.toString());\n\n    const txt = await results.text();\n\n    // console.log('STAT:', results.status, results.statusText);\n    let data: any;\n    try {\n      data = JSON.parse(txt);\n    } catch (error: any) {\n      debug(txt);\n\n      // Metro can throw this error when the initial module id cannot be resolved.\n      if (!results.ok && txt.startsWith('<!DOCTYPE html>')) {\n        throw new ForwardHtmlError(\n          `Metro failed to bundle the project. Check the console for more information.`,\n          txt,\n          results.status\n        );\n      }\n\n      Log.error(\n        'Failed to generate resources with Metro, the Metro config may not be using the correct serializer. Ensure the metro.config.js is extending the expo/metro-config and is not overriding the serializer.'\n      );\n      throw error;\n    }\n\n    // NOTE: This could potentially need more validation in the future.\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (data != null && (data.errors || data.type?.match(/.*Error$/))) {\n      // {\n      //   type: 'InternalError',\n      //   errors: [],\n      //   message: 'Metro has encountered an error: While trying to resolve module `stylis` from file `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js`, the package `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/package.json` was successfully found. However, this package itself specifies a `main` module field that could not be resolved (`/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs`. Indeed, none of these files exist:\\n' +\n      //     '\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css)\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs/index(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css): /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/metro/src/node-haste/DependencyGraph.js (289:17)\\n' +\n      //     '\\n' +\n      //     '\\x1B[0m \\x1B[90m 287 |\\x1B[39m         }\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 288 |\\x1B[39m         \\x1B[36mif\\x1B[39m (error \\x1B[36minstanceof\\x1B[39m \\x1B[33mInvalidPackageError\\x1B[39m) {\\x1B[0m\\n' +\n      //     '\\x1B[0m\\x1B[31m\\x1B[1m>\\x1B[22m\\x1B[39m\\x1B[90m 289 |\\x1B[39m           \\x1B[36mthrow\\x1B[39m \\x1B[36mnew\\x1B[39m \\x1B[33mPackageResolutionError\\x1B[39m({\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m     |\\x1B[39m                 \\x1B[31m\\x1B[1m^\\x1B[22m\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 290 |\\x1B[39m             packageError\\x1B[33m:\\x1B[39m error\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 291 |\\x1B[39m             originModulePath\\x1B[33m:\\x1B[39m \\x1B[36mfrom\\x1B[39m\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 292 |\\x1B[39m             targetModuleName\\x1B[33m:\\x1B[39m to\\x1B[33m,\\x1B[39m\\x1B[0m'\n      // }\n      // The Metro logger already showed this error.\n      throw new Error(data.message);\n    }\n\n    throw new Error(\n      'Invalid resources returned from the Metro serializer. Expected array, found: ' + data\n    );\n  }\n\n  async getStaticPageAsync(\n    pathname: string,\n    {\n      mode,\n      minify = mode !== 'development',\n      basePath,\n    }: {\n      mode: 'development' | 'production';\n      minify?: boolean;\n      basePath: string;\n    }\n  ) {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      environment: 'client',\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform: 'web' }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await getStaticRenderFunctions(\n        this.projectRoot,\n        this.getDevServerUrl()!,\n        {\n          minify: false,\n          dev: mode !== 'production',\n          // Ensure the API Routes are included\n          environment: 'node',\n        }\n      );\n\n      const location = new URL(pathname, this.getDevServerUrl()!);\n      return await getStaticContent(location);\n    };\n\n    const [resources, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({ mode, minify }),\n      bundleStaticHtml(),\n    ]);\n    const content = await this.composeResourcesWithHtml({\n      mode,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n      basePath,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n\n      // Use the unversioned metro config.\n      // TODO: Deprecate this property when expo-cli goes away.\n      unversioned: false,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions,\n      {\n        isExporting: !!options.isExporting,\n      }\n    );\n\n    const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n    // Important that we noop source maps for context modules as soon as possible.\n    prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n    // We need the manifest handler to be the first middleware to run so our\n    // routes take precedence over static files. For example, the manifest is\n    // served from '/' and if the user has an index.html file in their project\n    // then the manifest handler will never run, the static middleware will run\n    // and serve index.html instead of the manifest.\n    // https://github.com/expo/expo/issues/13114\n    prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n    middleware.use(\n      new InterstitialPageMiddleware(this.projectRoot, {\n        // TODO: Prevent this from becoming stale.\n        scheme: options.location.scheme ?? null,\n      }).getHandler()\n    );\n    middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n\n    const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n      onDeepLink: getDeepLinkHandler(this.projectRoot),\n      getLocation: ({ runtime }) => {\n        if (runtime === 'custom') {\n          return this.urlCreator?.constructDevClientUrl();\n        } else {\n          return this.urlCreator?.constructUrl({\n            scheme: 'exp',\n          });\n        }\n      },\n    });\n    middleware.use(deepLinkMiddleware.getHandler());\n\n    middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n    // Append support for redirecting unhandled requests to the index.html page on web.\n    if (this.isTargetingWeb()) {\n      const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n      const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n\n      // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n      middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n      // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n      middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n\n      if (useServerRendering) {\n        const appDir = getRouterDirectoryWithManifest(this.projectRoot, exp);\n        middleware.use(\n          createRouteHandlerMiddleware(this.projectRoot, {\n            ...options,\n            appDir,\n            getWebBundleUrl: manifestMiddleware.getWebBundleUrl.bind(manifestMiddleware),\n            getStaticPageAsync: (pathname) => {\n              return this.getStaticPageAsync(pathname, {\n                mode: options.mode ?? 'development',\n                minify: options.minify,\n                // No base path in development\n                basePath: '',\n              });\n            },\n          })\n        );\n\n        // @ts-expect-error: TODO\n        if (exp.web?.output === 'server') {\n          // Cache observation for API Routes...\n          observeApiRouteChanges(\n            this.projectRoot,\n            {\n              metro,\n              server,\n            },\n            async (filepath, op) => {\n              if (isApiRouteConvention(filepath)) {\n                debug(`[expo-cli] ${op} ${filepath}`);\n                if (op === 'change' || op === 'add') {\n                  rebundleApiRoute(this.projectRoot, filepath, {\n                    ...options,\n                    appDir,\n                  });\n                }\n\n                if (op === 'delete') {\n                  // TODO: Cancel the bundling of the deleted route.\n                }\n              }\n            }\n          );\n        }\n      } else {\n        // This MUST run last since it's the fallback.\n        middleware.use(\n          new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n        );\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        callback?.(err);\n      });\n    };\n\n    this.metro = metro;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite.js'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    return startTypescriptTypeGenerationAsync({\n      server: this.instance?.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n}\n\nexport function getDeepLinkHandler(projectRoot: string): DeepLinkHandler {\n  return async ({ runtime }) => {\n    if (runtime === 'expo') return;\n    const { exp } = getConfig(projectRoot);\n    await logEventAsync('dev client start command', {\n      status: 'started',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  };\n}\n\nfunction htmlFromSerialAssets(\n  assets: SerialAsset[],\n  {\n    dev,\n    template,\n    basePath,\n    bundleUrl,\n  }: {\n    dev: boolean;\n    template: string;\n    basePath: string;\n    /** This is dev-only. */\n    bundleUrl?: string;\n  }\n) {\n  // Combine the CSS modules into tags that have hot refresh data attributes.\n  const styleString = assets\n    .filter((asset) => asset.type === 'css')\n    .map(({ metadata, filename, source }) => {\n      if (dev) {\n        return `<style data-expo-css-hmr=\"${metadata.hmrId}\">` + source + '\\n</style>';\n      } else {\n        return [\n          `<link rel=\"preload\" href=\"${basePath}/${filename}\" as=\"style\">`,\n          `<link rel=\"stylesheet\" href=\"${basePath}/${filename}\">`,\n        ].join('');\n      }\n    })\n    .join('');\n\n  const jsAssets = assets.filter((asset) => asset.type === 'js');\n\n  const scripts = bundleUrl\n    ? `<script src=\"${bundleUrl}\" defer></script>`\n    : jsAssets\n        .map(({ filename }) => {\n          return `<script src=\"${basePath}/${filename}\" defer></script>`;\n        })\n        .join('');\n\n  return template\n    .replace('</head>', `${styleString}</head>`)\n    .replace('</body>', `${scripts}\\n</body>`);\n}\n"],"names":["getDeepLinkHandler","runtimeEnv","ForwardHtmlError","CommandError","constructor","message","html","statusCode","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","MetroBundlerDevServer","BundlerDevServer","metro","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","getExpoRouterRoutesManifestAsync","appDir","manifest","fetchManifest","projectRoot","asJson","exportExpoRouterApiRoutesAsync","mode","outputDir","files","Map","route","apiRoutes","filepath","path","join","file","contents","bundleApiRoute","getInstance","location","shouldThrow","artifactFilename","relative","replace","set","composeResourcesWithHtml","resources","template","devBundleUrl","basePath","isDev","htmlFromSerialAssets","dev","bundleUrl","undefined","getStaticRenderFunctionAsync","minify","url","getDevServerUrl","getStaticContent","getManifest","getStaticRenderFunctions","environment","fetchData","preserveApiRoutes","renderAsync","URL","getStaticResourcesAsync","includeMaps","data","devBundleUrlPathname","createBundleUrlPath","platform","serializerOutput","serializerIncludeMaps","mainModuleName","resolveMainModuleName","lazy","shouldEnableAsyncImports","results","fetch","toString","txt","text","JSON","parse","error","ok","startsWith","status","Log","Array","isArray","errors","type","match","Error","getStaticPageAsync","pathname","bundleStaticHtml","staticHtml","Promise","all","content","watchEnvironmentVariables","instance","envFiles","getFiles","NODE_ENV","map","fileName","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","parsedOptions","maxWorkers","resetCache","resetDevServer","unversioned","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","isExporting","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","deepLinkMiddleware","RuntimeRedirectMiddleware","onDeepLink","getLocation","runtime","constructDevClientUrl","constructUrl","CreateFileMiddleware","isTargetingWeb","exp","getConfig","skipSDKVersionRequirement","useServerRendering","includes","web","output","ServeStaticMiddleware","FaviconMiddleware","getRouterDirectoryWithManifest","createRouteHandlerMiddleware","getWebBundleUrl","bind","observeApiRouteChanges","op","isApiRouteConvention","rebundleApiRoute","HistoryFallbackMiddleware","internal","originalClose","close","callback","err","host","protocol","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","req","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","logEventAsync","getDevClientProperties","assets","styleString","filter","asset","metadata","filename","source","hmrId","jsAssets","scripts"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport chalk from 'chalk';\nimport fetch from 'node-fetch';\nimport path from 'path';\n\nimport { bundleApiRoute, rebundleApiRoute } from './bundleApiRoutes';\nimport { createRouteHandlerMiddleware } from './createServerRouteMiddleware';\nimport { ExpoRouterServerManifestV1, fetchManifest } from './fetchRouterManifest';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport { getRouterDirectoryWithManifest, isApiRouteConvention } from './router';\nimport { observeApiRouteChanges, observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\nimport { Log } from '../../../log';\nimport getDevClientProperties from '../../../utils/analytics/getDevClientProperties';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { CommandError } from '../../../utils/errors';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport { getStaticRenderFunctions } from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { DevToolsPluginMiddleware } from '../middleware/DevToolsPluginMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport {\n  createBundleUrlPath,\n  resolveMainModuleName,\n  shouldEnableAsyncImports,\n} from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport {\n  DeepLinkHandler,\n  RuntimeRedirectMiddleware,\n} from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport { prependMiddleware } from '../middleware/mutations';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\n\nexport class ForwardHtmlError extends CommandError {\n  constructor(\n    message: string,\n    public html: string,\n    public statusCode: number\n  ) {\n    super(message);\n  }\n}\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: import('metro').Server | null = null;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  async exportExpoRouterApiRoutesAsync({\n    mode,\n    appDir,\n    outputDir,\n    prerenderManifest,\n  }: {\n    mode: 'development' | 'production';\n    appDir: string;\n    outputDir: string;\n    // This does not contain the API routes info.\n    prerenderManifest: ExpoRouterServerManifestV1;\n  }) {\n    const manifest = await this.getExpoRouterRoutesManifestAsync({ appDir });\n\n    const files: Map<string, string> = new Map();\n\n    for (const route of manifest.apiRoutes) {\n      const filepath = path.join(appDir, route.file);\n      const contents = await bundleApiRoute(this.projectRoot, filepath, {\n        mode,\n        appDir,\n        port: this.getInstance()?.location.port,\n        shouldThrow: true,\n      });\n      const artifactFilename = path.join(\n        outputDir,\n        path.relative(appDir, filepath.replace(/\\.[tj]sx?$/, '.js'))\n      );\n      files.set(artifactFilename, contents!);\n      // Remap the manifest files to represent the output files.\n      route.file = artifactFilename;\n    }\n\n    return {\n      manifest: {\n        ...manifest,\n        htmlRoutes: prerenderManifest.htmlRoutes,\n      },\n      files,\n    };\n  }\n\n  async composeResourcesWithHtml({\n    mode,\n    resources,\n    template,\n    devBundleUrl,\n    basePath,\n  }: {\n    mode: 'development' | 'production';\n    resources: SerialAsset[];\n    template: string;\n    /** asset prefix used for deploying to non-standard origins like GitHub pages. */\n    basePath: string;\n    devBundleUrl?: string;\n  }): Promise<string> {\n    if (!resources) {\n      return '';\n    }\n    const isDev = mode === 'development';\n    return htmlFromSerialAssets(resources, {\n      dev: isDev,\n      template,\n      basePath,\n      bundleUrl: isDev ? devBundleUrl : undefined,\n    });\n  }\n\n  async getExpoRouterRoutesManifestAsync({ appDir }: { appDir: string }) {\n    // getBuiltTimeServerManifest\n    const manifest = await fetchManifest(this.projectRoot, {\n      asJson: true,\n      appDir,\n    });\n\n    if (!manifest) {\n      throw new CommandError(\n        'EXPO_ROUTER_SERVER_MANIFEST',\n        'Unexpected error: server manifest could not be fetched.'\n      );\n    }\n\n    return manifest;\n  }\n\n  async getStaticRenderFunctionAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: 'development' | 'production';\n    minify?: boolean;\n  }) {\n    const url = this.getDevServerUrl()!;\n\n    const { getStaticContent, getManifest, getBuildTimeServerManifestAsync } =\n      await getStaticRenderFunctions(this.projectRoot, url, {\n        minify,\n        dev: mode !== 'production',\n        // Ensure the API Routes are included\n        environment: 'node',\n      });\n\n    return {\n      serverManifest: await getBuildTimeServerManifestAsync(),\n      // Get routes from Expo Router.\n      manifest: await getManifest({ fetchData: true, preserveApiRoutes: false }),\n      // Get route generating function\n      async renderAsync(path: string) {\n        return await getStaticContent(new URL(path, url));\n      },\n    };\n  }\n\n  async getStaticResourcesAsync({\n    mode,\n    minify = mode !== 'development',\n    includeMaps,\n  }: {\n    mode: string;\n    minify?: boolean;\n    includeMaps?: boolean;\n  }): Promise<SerialAsset[]> {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      minify,\n      environment: 'client',\n      serializerOutput: 'static',\n      serializerIncludeMaps: includeMaps,\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform: 'web' }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n    });\n\n    const bundleUrl = new URL(devBundleUrlPathname, this.getDevServerUrl()!);\n\n    // Fetch the generated HTML from our custom Metro serializer\n    const results = await fetch(bundleUrl.toString());\n\n    const txt = await results.text();\n\n    // console.log('STAT:', results.status, results.statusText);\n    let data: any;\n    try {\n      data = JSON.parse(txt);\n    } catch (error: any) {\n      debug(txt);\n\n      // Metro can throw this error when the initial module id cannot be resolved.\n      if (!results.ok && txt.startsWith('<!DOCTYPE html>')) {\n        throw new ForwardHtmlError(\n          `Metro failed to bundle the project. Check the console for more information.`,\n          txt,\n          results.status\n        );\n      }\n\n      Log.error(\n        'Failed to generate resources with Metro, the Metro config may not be using the correct serializer. Ensure the metro.config.js is extending the expo/metro-config and is not overriding the serializer.'\n      );\n      throw error;\n    }\n\n    // NOTE: This could potentially need more validation in the future.\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (data != null && (data.errors || data.type?.match(/.*Error$/))) {\n      // {\n      //   type: 'InternalError',\n      //   errors: [],\n      //   message: 'Metro has encountered an error: While trying to resolve module `stylis` from file `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js`, the package `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/package.json` was successfully found. However, this package itself specifies a `main` module field that could not be resolved (`/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs`. Indeed, none of these files exist:\\n' +\n      //     '\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css)\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs/index(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css): /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/metro/src/node-haste/DependencyGraph.js (289:17)\\n' +\n      //     '\\n' +\n      //     '\\x1B[0m \\x1B[90m 287 |\\x1B[39m         }\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 288 |\\x1B[39m         \\x1B[36mif\\x1B[39m (error \\x1B[36minstanceof\\x1B[39m \\x1B[33mInvalidPackageError\\x1B[39m) {\\x1B[0m\\n' +\n      //     '\\x1B[0m\\x1B[31m\\x1B[1m>\\x1B[22m\\x1B[39m\\x1B[90m 289 |\\x1B[39m           \\x1B[36mthrow\\x1B[39m \\x1B[36mnew\\x1B[39m \\x1B[33mPackageResolutionError\\x1B[39m({\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m     |\\x1B[39m                 \\x1B[31m\\x1B[1m^\\x1B[22m\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 290 |\\x1B[39m             packageError\\x1B[33m:\\x1B[39m error\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 291 |\\x1B[39m             originModulePath\\x1B[33m:\\x1B[39m \\x1B[36mfrom\\x1B[39m\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 292 |\\x1B[39m             targetModuleName\\x1B[33m:\\x1B[39m to\\x1B[33m,\\x1B[39m\\x1B[0m'\n      // }\n      // The Metro logger already showed this error.\n      throw new Error(data.message);\n    }\n\n    throw new Error(\n      'Invalid resources returned from the Metro serializer. Expected array, found: ' + data\n    );\n  }\n\n  async getStaticPageAsync(\n    pathname: string,\n    {\n      mode,\n      minify = mode !== 'development',\n      basePath,\n    }: {\n      mode: 'development' | 'production';\n      minify?: boolean;\n      basePath: string;\n    }\n  ) {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      environment: 'client',\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform: 'web' }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await getStaticRenderFunctions(\n        this.projectRoot,\n        this.getDevServerUrl()!,\n        {\n          minify: false,\n          dev: mode !== 'production',\n          // Ensure the API Routes are included\n          environment: 'node',\n        }\n      );\n\n      const location = new URL(pathname, this.getDevServerUrl()!);\n      return await getStaticContent(location);\n    };\n\n    const [resources, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({ mode, minify }),\n      bundleStaticHtml(),\n    ]);\n    const content = await this.composeResourcesWithHtml({\n      mode,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n      basePath,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n\n      // Use the unversioned metro config.\n      // TODO: Deprecate this property when expo-cli goes away.\n      unversioned: false,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions,\n      {\n        isExporting: !!options.isExporting,\n      }\n    );\n\n    const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n    // Important that we noop source maps for context modules as soon as possible.\n    prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n    // We need the manifest handler to be the first middleware to run so our\n    // routes take precedence over static files. For example, the manifest is\n    // served from '/' and if the user has an index.html file in their project\n    // then the manifest handler will never run, the static middleware will run\n    // and serve index.html instead of the manifest.\n    // https://github.com/expo/expo/issues/13114\n    prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n    middleware.use(\n      new InterstitialPageMiddleware(this.projectRoot, {\n        // TODO: Prevent this from becoming stale.\n        scheme: options.location.scheme ?? null,\n      }).getHandler()\n    );\n    middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n    middleware.use(\n      new DevToolsPluginMiddleware(this.projectRoot, this.devToolsPluginManager).getHandler()\n    );\n\n    const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n      onDeepLink: getDeepLinkHandler(this.projectRoot),\n      getLocation: ({ runtime }) => {\n        if (runtime === 'custom') {\n          return this.urlCreator?.constructDevClientUrl();\n        } else {\n          return this.urlCreator?.constructUrl({\n            scheme: 'exp',\n          });\n        }\n      },\n    });\n    middleware.use(deepLinkMiddleware.getHandler());\n\n    middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n    // Append support for redirecting unhandled requests to the index.html page on web.\n    if (this.isTargetingWeb()) {\n      const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n      const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n\n      // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n      middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n      // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n      middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n\n      if (useServerRendering) {\n        const appDir = getRouterDirectoryWithManifest(this.projectRoot, exp);\n        middleware.use(\n          createRouteHandlerMiddleware(this.projectRoot, {\n            ...options,\n            appDir,\n            getWebBundleUrl: manifestMiddleware.getWebBundleUrl.bind(manifestMiddleware),\n            getStaticPageAsync: (pathname) => {\n              return this.getStaticPageAsync(pathname, {\n                mode: options.mode ?? 'development',\n                minify: options.minify,\n                // No base path in development\n                basePath: '',\n              });\n            },\n          })\n        );\n\n        // @ts-expect-error: TODO\n        if (exp.web?.output === 'server') {\n          // Cache observation for API Routes...\n          observeApiRouteChanges(\n            appDir,\n            {\n              metro,\n              server,\n            },\n            async (filepath, op) => {\n              if (isApiRouteConvention(filepath)) {\n                debug(`[expo-cli] ${op} ${filepath}`);\n                if (op === 'change' || op === 'add') {\n                  rebundleApiRoute(this.projectRoot, filepath, {\n                    ...options,\n                    appDir,\n                  });\n                }\n\n                if (op === 'delete') {\n                  // TODO: Cancel the bundling of the deleted route.\n                }\n              }\n            }\n          );\n        }\n      } else {\n        // This MUST run last since it's the fallback.\n        middleware.use(\n          new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n        );\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        callback?.(err);\n      });\n    };\n\n    this.metro = metro;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite.js'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    return startTypescriptTypeGenerationAsync({\n      server: this.instance?.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n}\n\nexport function getDeepLinkHandler(projectRoot: string): DeepLinkHandler {\n  return async ({ runtime }) => {\n    if (runtime === 'expo') return;\n    const { exp } = getConfig(projectRoot);\n    await logEventAsync('dev client start command', {\n      status: 'started',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  };\n}\n\nfunction htmlFromSerialAssets(\n  assets: SerialAsset[],\n  {\n    dev,\n    template,\n    basePath,\n    bundleUrl,\n  }: {\n    dev: boolean;\n    template: string;\n    basePath: string;\n    /** This is dev-only. */\n    bundleUrl?: string;\n  }\n) {\n  // Combine the CSS modules into tags that have hot refresh data attributes.\n  const styleString = assets\n    .filter((asset) => asset.type === 'css')\n    .map(({ metadata, filename, source }) => {\n      if (dev) {\n        return `<style data-expo-css-hmr=\"${metadata.hmrId}\">` + source + '\\n</style>';\n      } else {\n        return [\n          `<link rel=\"preload\" href=\"${basePath}/${filename}\" as=\"style\">`,\n          `<link rel=\"stylesheet\" href=\"${basePath}/${filename}\">`,\n        ].join('');\n      }\n    })\n    .join('');\n\n  const jsAssets = assets.filter((asset) => asset.type === 'js');\n\n  const scripts = bundleUrl\n    ? `<script src=\"${bundleUrl}\" defer></script>`\n    : jsAssets\n        .map(({ filename }) => {\n          return `<script src=\"${basePath}/${filename}\" defer></script>`;\n        })\n        .join('');\n\n  return template\n    .replace('</head>', `${styleString}</head>`)\n    .replace('</body>', `${scripts}\\n</body>`);\n}\n"],"names":["getDeepLinkHandler","runtimeEnv","ForwardHtmlError","CommandError","constructor","message","html","statusCode","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","MetroBundlerDevServer","BundlerDevServer","metro","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","exportExpoRouterApiRoutesAsync","mode","appDir","outputDir","prerenderManifest","manifest","getExpoRouterRoutesManifestAsync","files","Map","route","apiRoutes","filepath","path","join","file","contents","bundleApiRoute","projectRoot","getInstance","location","shouldThrow","artifactFilename","relative","replace","set","htmlRoutes","composeResourcesWithHtml","resources","template","devBundleUrl","basePath","isDev","htmlFromSerialAssets","dev","bundleUrl","undefined","fetchManifest","asJson","getStaticRenderFunctionAsync","minify","url","getDevServerUrl","getStaticContent","getManifest","getBuildTimeServerManifestAsync","getStaticRenderFunctions","environment","serverManifest","fetchData","preserveApiRoutes","renderAsync","URL","getStaticResourcesAsync","includeMaps","data","devBundleUrlPathname","createBundleUrlPath","platform","serializerOutput","serializerIncludeMaps","mainModuleName","resolveMainModuleName","lazy","shouldEnableAsyncImports","results","fetch","toString","txt","text","JSON","parse","error","ok","startsWith","status","Log","Array","isArray","errors","type","match","Error","getStaticPageAsync","pathname","bundleStaticHtml","staticHtml","Promise","all","content","watchEnvironmentVariables","instance","envFiles","getFiles","NODE_ENV","map","fileName","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","parsedOptions","maxWorkers","resetCache","resetDevServer","unversioned","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","isExporting","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","DevToolsPluginMiddleware","devToolsPluginManager","deepLinkMiddleware","RuntimeRedirectMiddleware","onDeepLink","getLocation","runtime","constructDevClientUrl","constructUrl","CreateFileMiddleware","isTargetingWeb","exp","getConfig","skipSDKVersionRequirement","useServerRendering","includes","web","output","ServeStaticMiddleware","FaviconMiddleware","getRouterDirectoryWithManifest","createRouteHandlerMiddleware","getWebBundleUrl","bind","observeApiRouteChanges","op","isApiRouteConvention","rebundleApiRoute","HistoryFallbackMiddleware","internal","originalClose","close","callback","err","host","protocol","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","req","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","logEventAsync","getDevClientProperties","assets","styleString","filter","asset","metadata","filename","source","hmrId","jsAssets","scripts"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js b/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js
index 8ebe59c..7753012 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js
@@ -6,7 +6,7 @@ exports.bundleApiRoute = bundleApiRoute;
 exports.rebundleApiRoute = rebundleApiRoute;
 var _metroErrorInterface = require("./metroErrorInterface");
 var _getStaticRenderFunctions = require("../getStaticRenderFunctions");
-const debug = require("debug")("expo:server-routes");
+const debug = require("debug")("expo:api-routes");
 const pendingRouteOperations = new Map();
 async function bundleApiRoute(projectRoot, filepath, options) {
     if (pendingRouteOperations.has(filepath)) {
@@ -15,7 +15,7 @@ async function bundleApiRoute(projectRoot, filepath, options) {
     const devServerUrl = `http://localhost:${options.port}`;
     async function bundleAsync() {
         try {
-            debug("Check API route:", options.appDir, filepath);
+            debug("Bundle API route:", options.appDir, filepath);
             const middleware = await (0, _getStaticRenderFunctions).requireFileContentsWithMetro(projectRoot, devServerUrl, filepath, {
                 minify: options.mode === "production",
                 dev: options.mode !== "production",
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js.map b/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js.map
index 3249db2..91e5618 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/bundleApiRoutes.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/bundleApiRoutes.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { logMetroErrorAsync } from './metroErrorInterface';\nimport { requireFileContentsWithMetro } from '../getStaticRenderFunctions';\n\nconst debug = require('debug')('expo:server-routes') as typeof console.log;\n\nconst pendingRouteOperations = new Map<string, Promise<string | null>>();\n\nexport type ApiRouteOptions = {\n  mode?: string;\n  appDir: string;\n  port?: number;\n  shouldThrow?: boolean;\n};\n\n// Bundle the API Route with Metro and return the string contents to be evaluated in the server.\nexport async function bundleApiRoute(\n  projectRoot: string,\n  filepath: string,\n  options: ApiRouteOptions\n): Promise<string | null | undefined> {\n  if (pendingRouteOperations.has(filepath)) {\n    return pendingRouteOperations.get(filepath);\n  }\n\n  const devServerUrl = `http://localhost:${options.port}`;\n\n  async function bundleAsync() {\n    try {\n      debug('Check API route:', options.appDir, filepath);\n\n      const middleware = await requireFileContentsWithMetro(projectRoot, devServerUrl, filepath, {\n        minify: options.mode === 'production',\n        dev: options.mode !== 'production',\n        // Ensure Node.js\n        environment: 'node',\n      });\n\n      return middleware;\n    } catch (error: any) {\n      if (error instanceof Error) {\n        await logMetroErrorAsync({ error, projectRoot });\n      }\n      if (options.shouldThrow) {\n        throw error;\n      }\n      // TODO: improve error handling, maybe have this be a mock function which returns the static error html\n      return null;\n    } finally {\n      // pendingRouteOperations.delete(filepath);\n    }\n  }\n  const route = bundleAsync();\n\n  pendingRouteOperations.set(filepath, route);\n  return route;\n}\n\nexport async function rebundleApiRoute(\n  projectRoot: string,\n  filepath: string,\n  options: ApiRouteOptions\n) {\n  pendingRouteOperations.delete(filepath);\n  return bundleApiRoute(projectRoot, filepath, options);\n}\n"],"names":["bundleApiRoute","rebundleApiRoute","debug","require","pendingRouteOperations","Map","projectRoot","filepath","options","has","get","devServerUrl","port","bundleAsync","appDir","middleware","requireFileContentsWithMetro","minify","mode","dev","environment","error","Error","logMetroErrorAsync","shouldThrow","route","set","delete"],"mappings":"AAOA;;;;QAesBA,cAAc,GAAdA,cAAc;QA0CdC,gBAAgB,GAAhBA,gBAAgB;AAzDH,IAAA,oBAAuB,WAAvB,uBAAuB,CAAA;AACb,IAAA,yBAA6B,WAA7B,6BAA6B,CAAA;AAE1E,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,AAAsB,AAAC;AAE3E,MAAMC,sBAAsB,GAAG,IAAIC,GAAG,EAAkC,AAAC;AAUlE,eAAeL,cAAc,CAClCM,WAAmB,EACnBC,QAAgB,EAChBC,OAAwB,EACY;IACpC,IAAIJ,sBAAsB,CAACK,GAAG,CAACF,QAAQ,CAAC,EAAE;QACxC,OAAOH,sBAAsB,CAACM,GAAG,CAACH,QAAQ,CAAC,CAAC;KAC7C;IAED,MAAMI,YAAY,GAAG,CAAC,iBAAiB,EAAEH,OAAO,CAACI,IAAI,CAAC,CAAC,AAAC;IAExD,eAAeC,WAAW,GAAG;QAC3B,IAAI;YACFX,KAAK,CAAC,kBAAkB,EAAEM,OAAO,CAACM,MAAM,EAAEP,QAAQ,CAAC,CAAC;YAEpD,MAAMQ,UAAU,GAAG,MAAMC,CAAAA,GAAAA,yBAA4B,AAKnD,CAAA,6BALmD,CAACV,WAAW,EAAEK,YAAY,EAAEJ,QAAQ,EAAE;gBACzFU,MAAM,EAAET,OAAO,CAACU,IAAI,KAAK,YAAY;gBACrCC,GAAG,EAAEX,OAAO,CAACU,IAAI,KAAK,YAAY;gBAClC,iBAAiB;gBACjBE,WAAW,EAAE,MAAM;aACpB,CAAC,AAAC;YAEH,OAAOL,UAAU,CAAC;SACnB,CAAC,OAAOM,KAAK,EAAO;YACnB,IAAIA,KAAK,YAAYC,KAAK,EAAE;gBAC1B,MAAMC,CAAAA,GAAAA,oBAAkB,AAAwB,CAAA,mBAAxB,CAAC;oBAAEF,KAAK;oBAAEf,WAAW;iBAAE,CAAC,CAAC;aAClD;YACD,IAAIE,OAAO,CAACgB,WAAW,EAAE;gBACvB,MAAMH,KAAK,CAAC;aACb;YACD,uGAAuG;YACvG,OAAO,IAAI,CAAC;SACb,QAAS;QACR,2CAA2C;SAC5C;KACF;IACD,MAAMI,KAAK,GAAGZ,WAAW,EAAE,AAAC;IAE5BT,sBAAsB,CAACsB,GAAG,CAACnB,QAAQ,EAAEkB,KAAK,CAAC,CAAC;IAC5C,OAAOA,KAAK,CAAC;CACd;AAEM,eAAexB,gBAAgB,CACpCK,WAAmB,EACnBC,QAAgB,EAChBC,OAAwB,EACxB;IACAJ,sBAAsB,CAACuB,MAAM,CAACpB,QAAQ,CAAC,CAAC;IACxC,OAAOP,cAAc,CAACM,WAAW,EAAEC,QAAQ,EAAEC,OAAO,CAAC,CAAC;CACvD"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/bundleApiRoutes.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { logMetroErrorAsync } from './metroErrorInterface';\nimport { requireFileContentsWithMetro } from '../getStaticRenderFunctions';\n\nconst debug = require('debug')('expo:api-routes') as typeof console.log;\n\nconst pendingRouteOperations = new Map<string, Promise<string | null>>();\n\nexport type ApiRouteOptions = {\n  mode?: string;\n  appDir: string;\n  port?: number;\n  shouldThrow?: boolean;\n};\n\n// Bundle the API Route with Metro and return the string contents to be evaluated in the server.\nexport async function bundleApiRoute(\n  projectRoot: string,\n  filepath: string,\n  options: ApiRouteOptions\n): Promise<string | null | undefined> {\n  if (pendingRouteOperations.has(filepath)) {\n    return pendingRouteOperations.get(filepath);\n  }\n\n  const devServerUrl = `http://localhost:${options.port}`;\n\n  async function bundleAsync() {\n    try {\n      debug('Bundle API route:', options.appDir, filepath);\n\n      const middleware = await requireFileContentsWithMetro(projectRoot, devServerUrl, filepath, {\n        minify: options.mode === 'production',\n        dev: options.mode !== 'production',\n        // Ensure Node.js\n        environment: 'node',\n      });\n\n      return middleware;\n    } catch (error: any) {\n      if (error instanceof Error) {\n        await logMetroErrorAsync({ error, projectRoot });\n      }\n      if (options.shouldThrow) {\n        throw error;\n      }\n      // TODO: improve error handling, maybe have this be a mock function which returns the static error html\n      return null;\n    } finally {\n      // pendingRouteOperations.delete(filepath);\n    }\n  }\n  const route = bundleAsync();\n\n  pendingRouteOperations.set(filepath, route);\n  return route;\n}\n\nexport async function rebundleApiRoute(\n  projectRoot: string,\n  filepath: string,\n  options: ApiRouteOptions\n) {\n  pendingRouteOperations.delete(filepath);\n  return bundleApiRoute(projectRoot, filepath, options);\n}\n"],"names":["bundleApiRoute","rebundleApiRoute","debug","require","pendingRouteOperations","Map","projectRoot","filepath","options","has","get","devServerUrl","port","bundleAsync","appDir","middleware","requireFileContentsWithMetro","minify","mode","dev","environment","error","Error","logMetroErrorAsync","shouldThrow","route","set","delete"],"mappings":"AAOA;;;;QAesBA,cAAc,GAAdA,cAAc;QA0CdC,gBAAgB,GAAhBA,gBAAgB;AAzDH,IAAA,oBAAuB,WAAvB,uBAAuB,CAAA;AACb,IAAA,yBAA6B,WAA7B,6BAA6B,CAAA;AAE1E,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,AAAsB,AAAC;AAExE,MAAMC,sBAAsB,GAAG,IAAIC,GAAG,EAAkC,AAAC;AAUlE,eAAeL,cAAc,CAClCM,WAAmB,EACnBC,QAAgB,EAChBC,OAAwB,EACY;IACpC,IAAIJ,sBAAsB,CAACK,GAAG,CAACF,QAAQ,CAAC,EAAE;QACxC,OAAOH,sBAAsB,CAACM,GAAG,CAACH,QAAQ,CAAC,CAAC;KAC7C;IAED,MAAMI,YAAY,GAAG,CAAC,iBAAiB,EAAEH,OAAO,CAACI,IAAI,CAAC,CAAC,AAAC;IAExD,eAAeC,WAAW,GAAG;QAC3B,IAAI;YACFX,KAAK,CAAC,mBAAmB,EAAEM,OAAO,CAACM,MAAM,EAAEP,QAAQ,CAAC,CAAC;YAErD,MAAMQ,UAAU,GAAG,MAAMC,CAAAA,GAAAA,yBAA4B,AAKnD,CAAA,6BALmD,CAACV,WAAW,EAAEK,YAAY,EAAEJ,QAAQ,EAAE;gBACzFU,MAAM,EAAET,OAAO,CAACU,IAAI,KAAK,YAAY;gBACrCC,GAAG,EAAEX,OAAO,CAACU,IAAI,KAAK,YAAY;gBAClC,iBAAiB;gBACjBE,WAAW,EAAE,MAAM;aACpB,CAAC,AAAC;YAEH,OAAOL,UAAU,CAAC;SACnB,CAAC,OAAOM,KAAK,EAAO;YACnB,IAAIA,KAAK,YAAYC,KAAK,EAAE;gBAC1B,MAAMC,CAAAA,GAAAA,oBAAkB,AAAwB,CAAA,mBAAxB,CAAC;oBAAEF,KAAK;oBAAEf,WAAW;iBAAE,CAAC,CAAC;aAClD;YACD,IAAIE,OAAO,CAACgB,WAAW,EAAE;gBACvB,MAAMH,KAAK,CAAC;aACb;YACD,uGAAuG;YACvG,OAAO,IAAI,CAAC;SACb,QAAS;QACR,2CAA2C;SAC5C;KACF;IACD,MAAMI,KAAK,GAAGZ,WAAW,EAAE,AAAC;IAE5BT,sBAAsB,CAACsB,GAAG,CAACnB,QAAQ,EAAEkB,KAAK,CAAC,CAAC;IAC5C,OAAOA,KAAK,CAAC;CACd;AAEM,eAAexB,gBAAgB,CACpCK,WAAmB,EACnBC,QAAgB,EAChBC,OAAwB,EACxB;IACAJ,sBAAsB,CAACuB,MAAM,CAACpB,QAAQ,CAAC,CAAC;IACxC,OAAOP,cAAc,CAACM,WAAW,EAAEC,QAAQ,EAAEC,OAAO,CAAC,CAAC;CACvD"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/externals.js b/node_modules/@expo/cli/build/src/start/server/metro/externals.js
index 5867686..ef861c5 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/externals.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/externals.js
@@ -3,12 +3,14 @@ Object.defineProperty(exports, "__esModule", {
     value: true
 });
 exports.getNodeExternalModuleId = getNodeExternalModuleId;
+exports.setupShimFiles = setupShimFiles;
 exports.setupNodeExternals = setupNodeExternals;
 exports.isNodeExternal = isNodeExternal;
-exports.METRO_EXTERNALS_FOLDER = exports.EXTERNAL_REQUIRE_NATIVE_POLYFILL = exports.EXTERNAL_REQUIRE_POLYFILL = exports.NODE_STDLIB_MODULES = void 0;
+exports.METRO_SHIMS_FOLDER = exports.METRO_EXTERNALS_FOLDER = exports.EXTERNAL_REQUIRE_NATIVE_POLYFILL = exports.EXTERNAL_REQUIRE_POLYFILL = exports.NODE_STDLIB_MODULES = void 0;
 var _fs = _interopRequireDefault(require("fs"));
 var _module = require("module");
 var _path = _interopRequireDefault(require("path"));
+var _dir = require("../../../utils/dir");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
         default: obj
@@ -29,9 +31,19 @@ const EXTERNAL_REQUIRE_NATIVE_POLYFILL = ".expo/metro/polyfill.native.js";
 exports.EXTERNAL_REQUIRE_NATIVE_POLYFILL = EXTERNAL_REQUIRE_NATIVE_POLYFILL;
 const METRO_EXTERNALS_FOLDER = ".expo/metro/externals";
 exports.METRO_EXTERNALS_FOLDER = METRO_EXTERNALS_FOLDER;
+const METRO_SHIMS_FOLDER = ".expo/metro/shims";
+exports.METRO_SHIMS_FOLDER = METRO_SHIMS_FOLDER;
 function getNodeExternalModuleId(fromModule, moduleId) {
     return _path.default.relative(_path.default.dirname(fromModule), _path.default.join(METRO_EXTERNALS_FOLDER, moduleId, "index.js"));
 }
+async function setupShimFiles(projectRoot) {
+    await _fs.default.promises.mkdir(_path.default.join(projectRoot, METRO_SHIMS_FOLDER), {
+        recursive: true
+    });
+    // Copy the shims to the project folder in case we're running in a monorepo.
+    const shimsFolder = _path.default.join(require.resolve("@expo/cli/package.json"), "../static/shims");
+    await (0, _dir).copyAsync(shimsFolder, _path.default.join(projectRoot, METRO_SHIMS_FOLDER));
+}
 async function setupNodeExternals(projectRoot) {
     await tapExternalRequirePolyfill(projectRoot);
     await tapNodeShims(projectRoot);
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/externals.js.map b/node_modules/@expo/cli/build/src/start/server/metro/externals.js.map
index 5733174..304de07 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/externals.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/externals.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/externals.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport { builtinModules } from 'module';\nimport path from 'path';\n\n// A list of the Node.js standard library modules that are currently\n// available,\nexport const NODE_STDLIB_MODULES: string[] = [\n  'fs/promises',\n  ...(\n    builtinModules ||\n    // @ts-expect-error\n    (process.binding ? Object.keys(process.binding('natives')) : []) ||\n    []\n  ).filter((x) => !/^_|^(internal|v8|node-inspect)\\/|\\//.test(x) && !['sys'].includes(x)),\n].sort();\n\nexport const EXTERNAL_REQUIRE_POLYFILL = '.expo/metro/polyfill.js';\nexport const EXTERNAL_REQUIRE_NATIVE_POLYFILL = '.expo/metro/polyfill.native.js';\nexport const METRO_EXTERNALS_FOLDER = '.expo/metro/externals';\n\nexport function getNodeExternalModuleId(fromModule: string, moduleId: string) {\n  return path.relative(\n    path.dirname(fromModule),\n    path.join(METRO_EXTERNALS_FOLDER, moduleId, 'index.js')\n  );\n}\n\nexport async function setupNodeExternals(projectRoot: string) {\n  await tapExternalRequirePolyfill(projectRoot);\n  await tapNodeShims(projectRoot);\n}\n\nasync function tapExternalRequirePolyfill(projectRoot: string) {\n  await fs.promises.mkdir(path.join(projectRoot, path.dirname(EXTERNAL_REQUIRE_POLYFILL)), {\n    recursive: true,\n  });\n  await fs.promises.writeFile(\n    path.join(projectRoot, EXTERNAL_REQUIRE_POLYFILL),\n    'global.$$require_external = typeof window === \"undefined\" ? require : () => null;'\n  );\n  await fs.promises.writeFile(\n    path.join(projectRoot, EXTERNAL_REQUIRE_NATIVE_POLYFILL),\n    'global.$$require_external = (moduleId) => {throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);}'\n  );\n}\n\nexport function isNodeExternal(moduleName: string): string | null {\n  const moduleId = moduleName.replace(/^node:/, '');\n  if (NODE_STDLIB_MODULES.includes(moduleId)) {\n    return moduleId;\n  }\n  return null;\n}\n\nfunction tapNodeShimContents(moduleId: string): string {\n  return `module.exports = $$require_external('node:${moduleId}');`;\n}\n\n// Ensure Node.js shims which require using `$$require_external` are available inside the project.\nasync function tapNodeShims(projectRoot: string) {\n  const externals: Record<string, string> = {};\n  for (const moduleId of NODE_STDLIB_MODULES) {\n    const shimDir = path.join(projectRoot, METRO_EXTERNALS_FOLDER, moduleId);\n    const shimPath = path.join(shimDir, 'index.js');\n    externals[moduleId] = shimPath;\n\n    if (!fs.existsSync(shimPath)) {\n      await fs.promises.mkdir(shimDir, { recursive: true });\n      await fs.promises.writeFile(shimPath, tapNodeShimContents(moduleId));\n    }\n  }\n}\n"],"names":["getNodeExternalModuleId","setupNodeExternals","isNodeExternal","NODE_STDLIB_MODULES","builtinModules","process","binding","Object","keys","filter","x","test","includes","sort","EXTERNAL_REQUIRE_POLYFILL","EXTERNAL_REQUIRE_NATIVE_POLYFILL","METRO_EXTERNALS_FOLDER","fromModule","moduleId","path","relative","dirname","join","projectRoot","tapExternalRequirePolyfill","tapNodeShims","fs","promises","mkdir","recursive","writeFile","moduleName","replace","tapNodeShimContents","externals","shimDir","shimPath","existsSync"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/externals.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport { builtinModules } from 'module';\nimport path from 'path';\n\nimport { copyAsync } from '../../../utils/dir';\n\n// A list of the Node.js standard library modules that are currently\n// available,\nexport const NODE_STDLIB_MODULES: string[] = [\n  'fs/promises',\n  ...(\n    builtinModules ||\n    // @ts-expect-error\n    (process.binding ? Object.keys(process.binding('natives')) : []) ||\n    []\n  ).filter((x) => !/^_|^(internal|v8|node-inspect)\\/|\\//.test(x) && !['sys'].includes(x)),\n].sort();\n\nexport const EXTERNAL_REQUIRE_POLYFILL = '.expo/metro/polyfill.js';\nexport const EXTERNAL_REQUIRE_NATIVE_POLYFILL = '.expo/metro/polyfill.native.js';\nexport const METRO_EXTERNALS_FOLDER = '.expo/metro/externals';\nexport const METRO_SHIMS_FOLDER = '.expo/metro/shims';\n\nexport function getNodeExternalModuleId(fromModule: string, moduleId: string) {\n  return path.relative(\n    path.dirname(fromModule),\n    path.join(METRO_EXTERNALS_FOLDER, moduleId, 'index.js')\n  );\n}\n\nexport async function setupShimFiles(projectRoot: string) {\n  await fs.promises.mkdir(path.join(projectRoot, METRO_SHIMS_FOLDER), { recursive: true });\n  // Copy the shims to the project folder in case we're running in a monorepo.\n  const shimsFolder = path.join(require.resolve('@expo/cli/package.json'), '../static/shims');\n\n  await copyAsync(shimsFolder, path.join(projectRoot, METRO_SHIMS_FOLDER));\n}\n\nexport async function setupNodeExternals(projectRoot: string) {\n  await tapExternalRequirePolyfill(projectRoot);\n  await tapNodeShims(projectRoot);\n}\n\nasync function tapExternalRequirePolyfill(projectRoot: string) {\n  await fs.promises.mkdir(path.join(projectRoot, path.dirname(EXTERNAL_REQUIRE_POLYFILL)), {\n    recursive: true,\n  });\n  await fs.promises.writeFile(\n    path.join(projectRoot, EXTERNAL_REQUIRE_POLYFILL),\n    'global.$$require_external = typeof window === \"undefined\" ? require : () => null;'\n  );\n  await fs.promises.writeFile(\n    path.join(projectRoot, EXTERNAL_REQUIRE_NATIVE_POLYFILL),\n    'global.$$require_external = (moduleId) => {throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);}'\n  );\n}\n\nexport function isNodeExternal(moduleName: string): string | null {\n  const moduleId = moduleName.replace(/^node:/, '');\n  if (NODE_STDLIB_MODULES.includes(moduleId)) {\n    return moduleId;\n  }\n  return null;\n}\n\nfunction tapNodeShimContents(moduleId: string): string {\n  return `module.exports = $$require_external('node:${moduleId}');`;\n}\n\n// Ensure Node.js shims which require using `$$require_external` are available inside the project.\nasync function tapNodeShims(projectRoot: string) {\n  const externals: Record<string, string> = {};\n  for (const moduleId of NODE_STDLIB_MODULES) {\n    const shimDir = path.join(projectRoot, METRO_EXTERNALS_FOLDER, moduleId);\n    const shimPath = path.join(shimDir, 'index.js');\n    externals[moduleId] = shimPath;\n\n    if (!fs.existsSync(shimPath)) {\n      await fs.promises.mkdir(shimDir, { recursive: true });\n      await fs.promises.writeFile(shimPath, tapNodeShimContents(moduleId));\n    }\n  }\n}\n"],"names":["getNodeExternalModuleId","setupShimFiles","setupNodeExternals","isNodeExternal","NODE_STDLIB_MODULES","builtinModules","process","binding","Object","keys","filter","x","test","includes","sort","EXTERNAL_REQUIRE_POLYFILL","EXTERNAL_REQUIRE_NATIVE_POLYFILL","METRO_EXTERNALS_FOLDER","METRO_SHIMS_FOLDER","fromModule","moduleId","path","relative","dirname","join","projectRoot","fs","promises","mkdir","recursive","shimsFolder","require","resolve","copyAsync","tapExternalRequirePolyfill","tapNodeShims","writeFile","moduleName","replace","tapNodeShimContents","externals","shimDir","shimPath","existsSync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js b/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js
index 83408bd..acf9485 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js
@@ -9,18 +9,21 @@ Object.defineProperty(exports, "ExpoInspectorProxy", {
     }
 });
 exports.createInspectorProxy = createInspectorProxy;
-var _device = require("./device");
+var _metroInspectorProxy = require("metro-inspector-proxy");
+var _device = _interopRequireDefault(require("metro-inspector-proxy/src/Device"));
+var _device1 = require("./device");
 var _proxy = require("./proxy");
-var _resolveFromProject = require("../resolveFromProject");
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
 const debug = require("debug")("expo:metro:inspector-proxy");
 function createInspectorProxy(metroBundler, projectRoot) {
     debug("Expo inspector proxy enabled");
-    // Import the installed `metro-inspector-proxy` from the project
-    // We use these base classes to extend functionality
-    const { InspectorProxy: MetroInspectorProxy  } = (0, _resolveFromProject).importMetroInspectorProxyFromProject(projectRoot);
     // The device is slightly more complicated, we need to extend that class
-    const ExpoInspectorDevice = (0, _device).createInspectorDeviceClass(metroBundler, (0, _resolveFromProject).importMetroInspectorDeviceFromProject(projectRoot));
-    const inspectorProxy = new _proxy.ExpoInspectorProxy(new MetroInspectorProxy(projectRoot), ExpoInspectorDevice);
+    const ExpoInspectorDevice = (0, _device1).createInspectorDeviceClass(metroBundler, _device.default);
+    const inspectorProxy = new _proxy.ExpoInspectorProxy(new _metroInspectorProxy.InspectorProxy(projectRoot), ExpoInspectorDevice);
     return inspectorProxy;
 }
 
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js.map b/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js.map
index bb7cc9a..d5b818c 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/inspector-proxy/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../../src/start/server/metro/inspector-proxy/index.ts"],"sourcesContent":["import { createInspectorDeviceClass } from './device';\nimport { ExpoInspectorProxy } from './proxy';\nimport { MetroBundlerDevServer } from '../MetroBundlerDevServer';\nimport {\n  importMetroInspectorDeviceFromProject,\n  importMetroInspectorProxyFromProject,\n} from '../resolveFromProject';\n\nexport { ExpoInspectorProxy } from './proxy';\n\nconst debug = require('debug')('expo:metro:inspector-proxy') as typeof console.log;\n\nexport function createInspectorProxy(metroBundler: MetroBundlerDevServer, projectRoot: string) {\n  debug('Expo inspector proxy enabled');\n\n  // Import the installed `metro-inspector-proxy` from the project\n  // We use these base classes to extend functionality\n  const { InspectorProxy: MetroInspectorProxy } = importMetroInspectorProxyFromProject(projectRoot);\n  // The device is slightly more complicated, we need to extend that class\n  const ExpoInspectorDevice = createInspectorDeviceClass(\n    metroBundler,\n    importMetroInspectorDeviceFromProject(projectRoot)\n  );\n\n  const inspectorProxy = new ExpoInspectorProxy(\n    new MetroInspectorProxy(projectRoot),\n    ExpoInspectorDevice\n  );\n\n  return inspectorProxy;\n}\n"],"names":["ExpoInspectorProxy","createInspectorProxy","debug","require","metroBundler","projectRoot","InspectorProxy","MetroInspectorProxy","importMetroInspectorProxyFromProject","ExpoInspectorDevice","createInspectorDeviceClass","importMetroInspectorDeviceFromProject","inspectorProxy"],"mappings":"AAAA;;;;+BAQSA,oBAAkB;;;eAPQ,MAAS,CAOnCA,kBAAkB;;;QAIXC,oBAAoB,GAApBA,oBAAoB;AAZO,IAAA,OAAU,WAAV,UAAU,CAAA;AAClB,IAAA,MAAS,WAAT,SAAS,CAAA;AAKrC,IAAA,mBAAuB,WAAvB,uBAAuB,CAAA;AAI9B,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC,AAAsB,AAAC;AAE5E,SAASF,oBAAoB,CAACG,YAAmC,EAAEC,WAAmB,EAAE;IAC7FH,KAAK,CAAC,8BAA8B,CAAC,CAAC;IAEtC,gEAAgE;IAChE,oDAAoD;IACpD,MAAM,EAAEI,cAAc,EAAEC,mBAAmB,CAAA,EAAE,GAAGC,CAAAA,GAAAA,mBAAoC,AAAa,CAAA,qCAAb,CAACH,WAAW,CAAC,AAAC;IAClG,wEAAwE;IACxE,MAAMI,mBAAmB,GAAGC,CAAAA,GAAAA,OAA0B,AAGrD,CAAA,2BAHqD,CACpDN,YAAY,EACZO,CAAAA,GAAAA,mBAAqC,AAAa,CAAA,sCAAb,CAACN,WAAW,CAAC,CACnD,AAAC;IAEF,MAAMO,cAAc,GAAG,IAAIZ,MAAkB,mBAAA,CAC3C,IAAIO,mBAAmB,CAACF,WAAW,CAAC,EACpCI,mBAAmB,CACpB,AAAC;IAEF,OAAOG,cAAc,CAAC;CACvB"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../../src/start/server/metro/inspector-proxy/index.ts"],"sourcesContent":["import { InspectorProxy as MetroInspectorProxy } from 'metro-inspector-proxy';\nimport Device from 'metro-inspector-proxy/src/Device';\n\nimport { createInspectorDeviceClass } from './device';\nimport { ExpoInspectorProxy } from './proxy';\nimport { MetroBundlerDevServer } from '../MetroBundlerDevServer';\n\nexport { ExpoInspectorProxy } from './proxy';\n\nconst debug = require('debug')('expo:metro:inspector-proxy') as typeof console.log;\n\nexport function createInspectorProxy(metroBundler: MetroBundlerDevServer, projectRoot: string) {\n  debug('Expo inspector proxy enabled');\n\n  // The device is slightly more complicated, we need to extend that class\n  const ExpoInspectorDevice = createInspectorDeviceClass(metroBundler, Device);\n\n  const inspectorProxy = new ExpoInspectorProxy(\n    new MetroInspectorProxy(projectRoot),\n    ExpoInspectorDevice\n  );\n\n  return inspectorProxy;\n}\n"],"names":["ExpoInspectorProxy","createInspectorProxy","debug","require","metroBundler","projectRoot","ExpoInspectorDevice","createInspectorDeviceClass","Device","inspectorProxy","MetroInspectorProxy"],"mappings":"AAAA;;;;+BAOSA,oBAAkB;;;eAHQ,MAAS,CAGnCA,kBAAkB;;;QAIXC,oBAAoB,GAApBA,oBAAoB;AAXkB,IAAA,oBAAuB,WAAvB,uBAAuB,CAAA;AAC1D,IAAA,OAAkC,kCAAlC,kCAAkC,EAAA;AAEV,IAAA,QAAU,WAAV,UAAU,CAAA;AAClB,IAAA,MAAS,WAAT,SAAS,CAAA;;;;;;AAK5C,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC,AAAsB,AAAC;AAE5E,SAASF,oBAAoB,CAACG,YAAmC,EAAEC,WAAmB,EAAE;IAC7FH,KAAK,CAAC,8BAA8B,CAAC,CAAC;IAEtC,wEAAwE;IACxE,MAAMI,mBAAmB,GAAGC,CAAAA,GAAAA,QAA0B,AAAsB,CAAA,2BAAtB,CAACH,YAAY,EAAEI,OAAM,QAAA,CAAC,AAAC;IAE7E,MAAMC,cAAc,GAAG,IAAIT,MAAkB,mBAAA,CAC3C,IAAIU,oBAAmB,eAAA,CAACL,WAAW,CAAC,EACpCC,mBAAmB,CACpB,AAAC;IAEF,OAAOG,cAAc,CAAC;CACvB"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js b/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js
index 134aa2b..dbc409b 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js
@@ -6,12 +6,12 @@ exports.loadMetroConfigAsync = loadMetroConfigAsync;
 exports.instantiateMetroAsync = instantiateMetroAsync;
 exports.isWatchEnabled = isWatchEnabled;
 var _config = require("@expo/config");
+var ExpoMetroConfig = _interopRequireWildcard(require("@expo/metro-config"));
 var _chalk = _interopRequireDefault(require("chalk"));
 var _metroCore = require("metro-core");
 var _semver = _interopRequireDefault(require("semver"));
 var _url = require("url");
 var _metroTerminalReporter = require("./MetroTerminalReporter");
-var _resolveFromProject = require("./resolveFromProject");
 var _router = require("./router");
 var _runServerFork = require("./runServer-fork");
 var _withMetroMultiPlatform = require("./withMetroMultiPlatform");
@@ -32,6 +32,27 @@ function _interopRequireDefault(obj) {
         default: obj
     };
 }
+function _interopRequireWildcard(obj) {
+    if (obj && obj.__esModule) {
+        return obj;
+    } else {
+        var newObj = {};
+        if (obj != null) {
+            for(var key in obj){
+                if (Object.prototype.hasOwnProperty.call(obj, key)) {
+                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
+                    if (desc.get || desc.set) {
+                        Object.defineProperty(newObj, key, desc);
+                    } else {
+                        newObj[key] = obj[key];
+                    }
+                }
+            }
+        }
+        newObj.default = obj;
+        return newObj;
+    }
+}
 function gteSdkVersion(exp, sdkVersion) {
     if (!exp.sdkVersion) {
         return false;
@@ -61,7 +82,6 @@ async function loadMetroConfigAsync(projectRoot, options, { exp =(0, _config).ge
             }
         }
     };
-    const ExpoMetroConfig = (0, _resolveFromProject).importExpoMetroConfig(projectRoot);
     let config = await ExpoMetroConfig.loadAsync(projectRoot, {
         reporter,
         ...options
@@ -95,9 +115,12 @@ async function loadMetroConfigAsync(projectRoot, options, { exp =(0, _config).ge
         platformBundlers,
         isTsconfigPathsEnabled: (ref6 = (ref = exp.experiments) == null ? void 0 : ref.tsconfigPaths) != null ? ref6 : true,
         webOutput: (ref7 = (ref1 = exp.web) == null ? void 0 : ref1.output) != null ? ref7 : "single",
-        isFastResolverEnabled: _env.env.EXPO_USE_FAST_RESOLVER
+        isFastResolverEnabled: _env.env.EXPO_USE_FAST_RESOLVER,
+        isExporting
     });
-    (0, _rudderstackClient).logEventAsync("metro config", (0, _getMetroProperties).getMetroProperties(projectRoot, exp, config));
+    if (process.env.NODE_ENV !== "test") {
+        (0, _rudderstackClient).logEventAsync("metro config", (0, _getMetroProperties).getMetroProperties(projectRoot, exp, config));
+    }
     return {
         config,
         setEventReporter: (logger)=>reportEvent = logger
@@ -115,7 +138,7 @@ async function instantiateMetroAsync(metroBundler, options, { isExporting  }) {
         exp,
         isExporting
     });
-    const { createDevServerMiddleware , securityHeadersMiddleware  } = (0, _resolveFromProject).importCliServerApiFromProject(projectRoot);
+    const { createDevServerMiddleware , securityHeadersMiddleware  } = require("@react-native-community/cli-server-api");
     const { middleware , messageSocketEndpoint , eventsSocketEndpoint , websocketEndpoints  } = createDevServerMiddleware({
         port: metroConfig.server.port,
         watchFolders: metroConfig.watchFolders
@@ -140,7 +163,7 @@ async function instantiateMetroAsync(metroBundler, options, { isExporting  }) {
         hmrEnabled: true,
         // @ts-expect-error: Inconsistent `websocketEndpoints` type between metro and @react-native-community/cli-server-api
         websocketEndpoints,
-        watch: isWatchEnabled()
+        watch: !isExporting && isWatchEnabled()
     });
     (0, _mutations).prependMiddleware(middleware, (req, res, next)=>{
         // If the URL is a Metro asset request, then we need to skip all other middleware to prevent
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js.map b/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js.map
index 929f11a..a4b7161 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/instantiateMetro.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/instantiateMetro.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport { Server as ConnectServer } from 'connect';\nimport http from 'http';\nimport type Metro from 'metro';\nimport { Terminal } from 'metro-core';\nimport semver from 'semver';\nimport { URL } from 'url';\n\nimport { MetroBundlerDevServer } from './MetroBundlerDevServer';\nimport { MetroTerminalReporter } from './MetroTerminalReporter';\nimport { importCliServerApiFromProject, importExpoMetroConfig } from './resolveFromProject';\nimport { getRouterDirectoryModuleIdWithManifest } from './router';\nimport { runServer } from './runServer-fork';\nimport { withMetroMultiPlatformAsync } from './withMetroMultiPlatform';\nimport { MetroDevServerOptions } from '../../../export/fork-bundleAsync';\nimport { Log } from '../../../log';\nimport { getMetroProperties } from '../../../utils/analytics/getMetroProperties';\nimport { createDebuggerTelemetryMiddleware } from '../../../utils/analytics/metroDebuggerMiddleware';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { env } from '../../../utils/env';\nimport { getMetroServerRoot } from '../middleware/ManifestMiddleware';\nimport createJsInspectorMiddleware from '../middleware/inspector/createJsInspectorMiddleware';\nimport { prependMiddleware, replaceMiddlewareWith } from '../middleware/mutations';\nimport { remoteDevtoolsCorsMiddleware } from '../middleware/remoteDevtoolsCorsMiddleware';\nimport { remoteDevtoolsSecurityHeadersMiddleware } from '../middleware/remoteDevtoolsSecurityHeadersMiddleware';\nimport { ServerNext, ServerRequest, ServerResponse } from '../middleware/server.types';\nimport { suppressRemoteDebuggingErrorMiddleware } from '../middleware/suppressErrorMiddleware';\nimport { getPlatformBundlers } from '../platformBundlers';\n\n// From expo/dev-server but with ability to use custom logger.\ntype MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nfunction gteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver.gte(exp.sdkVersion, sdkVersion);\n  } catch {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n\nexport async function loadMetroConfigAsync(\n  projectRoot: string,\n  options: LoadOptions,\n  {\n    exp = getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp,\n    isExporting,\n  }: { exp?: ExpoConfig; isExporting: boolean }\n) {\n  let reportEvent: ((event: any) => void) | undefined;\n  const serverRoot = getMetroServerRoot(projectRoot);\n\n  const terminal = new Terminal(process.stdout);\n  const terminalReporter = new MetroTerminalReporter(serverRoot, terminal);\n\n  const reporter = {\n    update(event: any) {\n      terminalReporter.update(event);\n      if (reportEvent) {\n        reportEvent(event);\n      }\n    },\n  };\n\n  const ExpoMetroConfig = importExpoMetroConfig(projectRoot);\n  let config = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n\n  if (\n    // Requires SDK 50 for expo-assets hashAssetPlugin change.\n    !exp.sdkVersion ||\n    gteSdkVersion(exp, '50.0.0')\n  ) {\n    if (isExporting) {\n      // This token will be used in the asset plugin to ensure the path is correct for writing locally.\n      // @ts-expect-error: typed as readonly.\n      config.transformer.publicPath = `/assets?export_path=${\n        (exp.experiments?.basePath ?? '') + '/assets'\n      }`;\n    } else {\n      // @ts-expect-error: typed as readonly\n      config.transformer.publicPath = '/assets/?unstable_path=.';\n    }\n  } else {\n    if (isExporting && exp.experiments?.basePath) {\n      // This token will be used in the asset plugin to ensure the path is correct for writing locally.\n      // @ts-expect-error: typed as readonly.\n      config.transformer.publicPath = exp.experiments?.basePath;\n    }\n  }\n\n  const platformBundlers = getPlatformBundlers(exp);\n\n  config = await withMetroMultiPlatformAsync(projectRoot, {\n    routerDirectory: getRouterDirectoryModuleIdWithManifest(projectRoot, exp),\n    config,\n    platformBundlers,\n    isTsconfigPathsEnabled: exp.experiments?.tsconfigPaths ?? true,\n    webOutput: exp.web?.output ?? 'single',\n    isFastResolverEnabled: env.EXPO_USE_FAST_RESOLVER,\n  });\n\n  logEventAsync('metro config', getMetroProperties(projectRoot, exp, config));\n\n  return {\n    config,\n    setEventReporter: (logger: (event: any) => void) => (reportEvent = logger),\n    reporter: terminalReporter,\n  };\n}\n\n/** The most generic possible setup for Metro bundler. */\nexport async function instantiateMetroAsync(\n  metroBundler: MetroBundlerDevServer,\n  options: Omit<MetroDevServerOptions, 'logger'>,\n  { isExporting }: { isExporting: boolean }\n): Promise<{\n  metro: Metro.Server;\n  server: http.Server;\n  middleware: any;\n  messageSocket: MessageSocket;\n}> {\n  const projectRoot = metroBundler.projectRoot;\n\n  // TODO: When we bring expo/metro-config into the expo/expo repo, then we can upstream this.\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n\n  const { config: metroConfig, setEventReporter } = await loadMetroConfigAsync(\n    projectRoot,\n    options,\n    { exp, isExporting }\n  );\n\n  const { createDevServerMiddleware, securityHeadersMiddleware } =\n    importCliServerApiFromProject(projectRoot);\n\n  const { middleware, messageSocketEndpoint, eventsSocketEndpoint, websocketEndpoints } =\n    createDevServerMiddleware({\n      port: metroConfig.server.port,\n      watchFolders: metroConfig.watchFolders,\n    });\n\n  // securityHeadersMiddleware does not support cross-origin requests for remote devtools to get the sourcemap.\n  // We replace with the enhanced version.\n  replaceMiddlewareWith(\n    middleware as ConnectServer,\n    securityHeadersMiddleware,\n    remoteDevtoolsSecurityHeadersMiddleware\n  );\n\n  middleware.use(remoteDevtoolsCorsMiddleware);\n\n  prependMiddleware(middleware, suppressRemoteDebuggingErrorMiddleware);\n\n  middleware.use('/inspector', createJsInspectorMiddleware());\n\n  // TODO: We can probably drop this now.\n  const customEnhanceMiddleware = metroConfig.server.enhanceMiddleware;\n  // @ts-expect-error: can't mutate readonly config\n  metroConfig.server.enhanceMiddleware = (metroMiddleware: any, server: Metro.Server) => {\n    if (customEnhanceMiddleware) {\n      metroMiddleware = customEnhanceMiddleware(metroMiddleware, server);\n    }\n    return middleware.use(metroMiddleware);\n  };\n\n  middleware.use(createDebuggerTelemetryMiddleware(projectRoot, exp));\n\n  const { server, metro } = await runServer(metroBundler, metroConfig, {\n    hmrEnabled: true,\n    // @ts-expect-error: Inconsistent `websocketEndpoints` type between metro and @react-native-community/cli-server-api\n    websocketEndpoints,\n    watch: isWatchEnabled(),\n  });\n\n  prependMiddleware(middleware, (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n    // If the URL is a Metro asset request, then we need to skip all other middleware to prevent\n    // the community CLI's serve-static from hosting `/assets/index.html` in place of all assets if it exists.\n    // /assets/?unstable_path=.\n    if (req.url) {\n      const url = new URL(req.url!, 'http://localhost:8000');\n      if (url.pathname.match(/^\\/assets\\/?/) && url.searchParams.get('unstable_path') != null) {\n        return metro.processRequest(req, res, next);\n      }\n    }\n    return next();\n  });\n\n  setEventReporter(eventsSocketEndpoint.reportEvent);\n\n  return {\n    metro,\n    server,\n    middleware,\n    messageSocket: messageSocketEndpoint,\n  };\n}\n\n/**\n * Simplify and communicate if Metro is running without watching file updates,.\n * Exposed for testing.\n */\nexport function isWatchEnabled() {\n  if (env.CI) {\n    Log.log(\n      chalk`Metro is running in CI mode, reloads are disabled. Remove {bold CI=true} to enable watch mode.`\n    );\n  }\n\n  return !env.CI;\n}\n"],"names":["loadMetroConfigAsync","instantiateMetroAsync","isWatchEnabled","gteSdkVersion","exp","sdkVersion","semver","gte","Error","projectRoot","options","getConfig","skipSDKVersionRequirement","isExporting","reportEvent","serverRoot","getMetroServerRoot","terminal","Terminal","process","stdout","terminalReporter","MetroTerminalReporter","reporter","update","event","ExpoMetroConfig","importExpoMetroConfig","config","loadAsync","transformer","publicPath","experiments","basePath","platformBundlers","getPlatformBundlers","withMetroMultiPlatformAsync","routerDirectory","getRouterDirectoryModuleIdWithManifest","isTsconfigPathsEnabled","tsconfigPaths","webOutput","web","output","isFastResolverEnabled","env","EXPO_USE_FAST_RESOLVER","logEventAsync","getMetroProperties","setEventReporter","logger","metroBundler","metroConfig","createDevServerMiddleware","securityHeadersMiddleware","importCliServerApiFromProject","middleware","messageSocketEndpoint","eventsSocketEndpoint","websocketEndpoints","port","server","watchFolders","replaceMiddlewareWith","remoteDevtoolsSecurityHeadersMiddleware","use","remoteDevtoolsCorsMiddleware","prependMiddleware","suppressRemoteDebuggingErrorMiddleware","createJsInspectorMiddleware","customEnhanceMiddleware","enhanceMiddleware","metroMiddleware","createDebuggerTelemetryMiddleware","metro","runServer","hmrEnabled","watch","req","res","next","url","URL","pathname","match","searchParams","get","processRequest","messageSocket","CI","Log","log","chalk"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/instantiateMetro.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport * as ExpoMetroConfig from '@expo/metro-config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport { Server as ConnectServer } from 'connect';\nimport http from 'http';\nimport type Metro from 'metro';\nimport { Terminal } from 'metro-core';\nimport semver from 'semver';\nimport { URL } from 'url';\n\nimport { MetroBundlerDevServer } from './MetroBundlerDevServer';\nimport { MetroTerminalReporter } from './MetroTerminalReporter';\nimport { getRouterDirectoryModuleIdWithManifest } from './router';\nimport { runServer } from './runServer-fork';\nimport { withMetroMultiPlatformAsync } from './withMetroMultiPlatform';\nimport { MetroDevServerOptions } from '../../../export/fork-bundleAsync';\nimport { Log } from '../../../log';\nimport { getMetroProperties } from '../../../utils/analytics/getMetroProperties';\nimport { createDebuggerTelemetryMiddleware } from '../../../utils/analytics/metroDebuggerMiddleware';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { env } from '../../../utils/env';\nimport { getMetroServerRoot } from '../middleware/ManifestMiddleware';\nimport createJsInspectorMiddleware from '../middleware/inspector/createJsInspectorMiddleware';\nimport { prependMiddleware, replaceMiddlewareWith } from '../middleware/mutations';\nimport { remoteDevtoolsCorsMiddleware } from '../middleware/remoteDevtoolsCorsMiddleware';\nimport { remoteDevtoolsSecurityHeadersMiddleware } from '../middleware/remoteDevtoolsSecurityHeadersMiddleware';\nimport { ServerNext, ServerRequest, ServerResponse } from '../middleware/server.types';\nimport { suppressRemoteDebuggingErrorMiddleware } from '../middleware/suppressErrorMiddleware';\nimport { getPlatformBundlers } from '../platformBundlers';\n\n// From expo/dev-server but with ability to use custom logger.\ntype MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nfunction gteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver.gte(exp.sdkVersion, sdkVersion);\n  } catch {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n\nexport async function loadMetroConfigAsync(\n  projectRoot: string,\n  options: LoadOptions,\n  {\n    exp = getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp,\n    isExporting,\n  }: { exp?: ExpoConfig; isExporting: boolean }\n) {\n  let reportEvent: ((event: any) => void) | undefined;\n  const serverRoot = getMetroServerRoot(projectRoot);\n\n  const terminal = new Terminal(process.stdout);\n  const terminalReporter = new MetroTerminalReporter(serverRoot, terminal);\n\n  const reporter = {\n    update(event: any) {\n      terminalReporter.update(event);\n      if (reportEvent) {\n        reportEvent(event);\n      }\n    },\n  };\n\n  let config = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n\n  if (\n    // Requires SDK 50 for expo-assets hashAssetPlugin change.\n    !exp.sdkVersion ||\n    gteSdkVersion(exp, '50.0.0')\n  ) {\n    if (isExporting) {\n      // This token will be used in the asset plugin to ensure the path is correct for writing locally.\n      // @ts-expect-error: typed as readonly.\n      config.transformer.publicPath = `/assets?export_path=${\n        (exp.experiments?.basePath ?? '') + '/assets'\n      }`;\n    } else {\n      // @ts-expect-error: typed as readonly\n      config.transformer.publicPath = '/assets/?unstable_path=.';\n    }\n  } else {\n    if (isExporting && exp.experiments?.basePath) {\n      // This token will be used in the asset plugin to ensure the path is correct for writing locally.\n      // @ts-expect-error: typed as readonly.\n      config.transformer.publicPath = exp.experiments?.basePath;\n    }\n  }\n\n  const platformBundlers = getPlatformBundlers(exp);\n\n  config = await withMetroMultiPlatformAsync(projectRoot, {\n    routerDirectory: getRouterDirectoryModuleIdWithManifest(projectRoot, exp),\n    config,\n    platformBundlers,\n    isTsconfigPathsEnabled: exp.experiments?.tsconfigPaths ?? true,\n    webOutput: exp.web?.output ?? 'single',\n    isFastResolverEnabled: env.EXPO_USE_FAST_RESOLVER,\n    isExporting,\n  });\n\n  if (process.env.NODE_ENV !== 'test') {\n    logEventAsync('metro config', getMetroProperties(projectRoot, exp, config));\n  }\n\n  return {\n    config,\n    setEventReporter: (logger: (event: any) => void) => (reportEvent = logger),\n    reporter: terminalReporter,\n  };\n}\n\n/** The most generic possible setup for Metro bundler. */\nexport async function instantiateMetroAsync(\n  metroBundler: MetroBundlerDevServer,\n  options: Omit<MetroDevServerOptions, 'logger'>,\n  { isExporting }: { isExporting: boolean }\n): Promise<{\n  metro: Metro.Server;\n  server: http.Server;\n  middleware: any;\n  messageSocket: MessageSocket;\n}> {\n  const projectRoot = metroBundler.projectRoot;\n\n  // TODO: When we bring expo/metro-config into the expo/expo repo, then we can upstream this.\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n\n  const { config: metroConfig, setEventReporter } = await loadMetroConfigAsync(\n    projectRoot,\n    options,\n    { exp, isExporting }\n  );\n\n  const { createDevServerMiddleware, securityHeadersMiddleware } =\n    require('@react-native-community/cli-server-api') as typeof import('@react-native-community/cli-server-api');\n\n  const { middleware, messageSocketEndpoint, eventsSocketEndpoint, websocketEndpoints } =\n    createDevServerMiddleware({\n      port: metroConfig.server.port,\n      watchFolders: metroConfig.watchFolders,\n    });\n\n  // securityHeadersMiddleware does not support cross-origin requests for remote devtools to get the sourcemap.\n  // We replace with the enhanced version.\n  replaceMiddlewareWith(\n    middleware as ConnectServer,\n    securityHeadersMiddleware,\n    remoteDevtoolsSecurityHeadersMiddleware\n  );\n\n  middleware.use(remoteDevtoolsCorsMiddleware);\n\n  prependMiddleware(middleware, suppressRemoteDebuggingErrorMiddleware);\n\n  middleware.use('/inspector', createJsInspectorMiddleware());\n\n  // TODO: We can probably drop this now.\n  const customEnhanceMiddleware = metroConfig.server.enhanceMiddleware;\n  // @ts-expect-error: can't mutate readonly config\n  metroConfig.server.enhanceMiddleware = (metroMiddleware: any, server: Metro.Server) => {\n    if (customEnhanceMiddleware) {\n      metroMiddleware = customEnhanceMiddleware(metroMiddleware, server);\n    }\n    return middleware.use(metroMiddleware);\n  };\n\n  middleware.use(createDebuggerTelemetryMiddleware(projectRoot, exp));\n\n  const { server, metro } = await runServer(metroBundler, metroConfig, {\n    hmrEnabled: true,\n    // @ts-expect-error: Inconsistent `websocketEndpoints` type between metro and @react-native-community/cli-server-api\n    websocketEndpoints,\n    watch: !isExporting && isWatchEnabled(),\n  });\n\n  prependMiddleware(middleware, (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n    // If the URL is a Metro asset request, then we need to skip all other middleware to prevent\n    // the community CLI's serve-static from hosting `/assets/index.html` in place of all assets if it exists.\n    // /assets/?unstable_path=.\n    if (req.url) {\n      const url = new URL(req.url!, 'http://localhost:8000');\n      if (url.pathname.match(/^\\/assets\\/?/) && url.searchParams.get('unstable_path') != null) {\n        return metro.processRequest(req, res, next);\n      }\n    }\n    return next();\n  });\n\n  setEventReporter(eventsSocketEndpoint.reportEvent);\n\n  return {\n    metro,\n    server,\n    middleware,\n    messageSocket: messageSocketEndpoint,\n  };\n}\n\n/**\n * Simplify and communicate if Metro is running without watching file updates,.\n * Exposed for testing.\n */\nexport function isWatchEnabled() {\n  if (env.CI) {\n    Log.log(\n      chalk`Metro is running in CI mode, reloads are disabled. Remove {bold CI=true} to enable watch mode.`\n    );\n  }\n\n  return !env.CI;\n}\n"],"names":["loadMetroConfigAsync","instantiateMetroAsync","isWatchEnabled","ExpoMetroConfig","gteSdkVersion","exp","sdkVersion","semver","gte","Error","projectRoot","options","getConfig","skipSDKVersionRequirement","isExporting","reportEvent","serverRoot","getMetroServerRoot","terminal","Terminal","process","stdout","terminalReporter","MetroTerminalReporter","reporter","update","event","config","loadAsync","transformer","publicPath","experiments","basePath","platformBundlers","getPlatformBundlers","withMetroMultiPlatformAsync","routerDirectory","getRouterDirectoryModuleIdWithManifest","isTsconfigPathsEnabled","tsconfigPaths","webOutput","web","output","isFastResolverEnabled","env","EXPO_USE_FAST_RESOLVER","NODE_ENV","logEventAsync","getMetroProperties","setEventReporter","logger","metroBundler","metroConfig","createDevServerMiddleware","securityHeadersMiddleware","require","middleware","messageSocketEndpoint","eventsSocketEndpoint","websocketEndpoints","port","server","watchFolders","replaceMiddlewareWith","remoteDevtoolsSecurityHeadersMiddleware","use","remoteDevtoolsCorsMiddleware","prependMiddleware","suppressRemoteDebuggingErrorMiddleware","createJsInspectorMiddleware","customEnhanceMiddleware","enhanceMiddleware","metroMiddleware","createDebuggerTelemetryMiddleware","metro","runServer","hmrEnabled","watch","req","res","next","url","URL","pathname","match","searchParams","get","processRequest","messageSocket","CI","Log","log","chalk"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/router.js b/node_modules/@expo/cli/build/src/start/server/metro/router.js
index 14af683..2cd89c0 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/router.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/router.js
@@ -15,6 +15,7 @@ var _path = _interopRequireDefault(require("path"));
 var _resolveFrom = _interopRequireDefault(require("resolve-from"));
 var _log = require("../../../log");
 var _dir = require("../../../utils/dir");
+var _fn = require("../../../utils/fn");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
         default: obj
@@ -49,10 +50,12 @@ function getRouterDirectoryModuleIdWithManifest(projectRoot, exp) {
 function getRouterDirectoryWithManifest(projectRoot, exp) {
     return _path.default.join(projectRoot, getRouterDirectoryModuleIdWithManifest(projectRoot, exp));
 }
+const logSrcDir = (0, _fn).memoize(()=>_log.Log.log(_chalk.default.gray("Using src/app as the root directory for Expo Router."))
+);
 function getRouterDirectory(projectRoot) {
     // more specific directories first
     if ((0, _dir).directoryExistsSync(_path.default.join(projectRoot, "src/app"))) {
-        _log.Log.log(_chalk.default.gray("Using src/app as the root directory for Expo Router."));
+        logSrcDir();
         return "src/app";
     }
     debug("Using app as the root directory for Expo Router.");
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/router.js.map b/node_modules/@expo/cli/build/src/start/server/metro/router.js.map
index d63a1a5..61e0011 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/router.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/router.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/router.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport { sync as globSync } from 'glob';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { Log } from '../../../log';\nimport { directoryExistsSync } from '../../../utils/dir';\n\nconst debug = require('debug')('expo:start:server:metro:router') as typeof console.log;\n\n/**\n * Get the relative path for requiring the `/app` folder relative to the `expo-router/entry` file.\n * This mechanism does require the server to restart after the `expo-router` package is installed.\n */\nexport function getAppRouterRelativeEntryPath(\n  projectRoot: string,\n  routerDirectory: string = getRouterDirectory(projectRoot)\n): string | undefined {\n  // Auto pick App entry\n  const routerEntry =\n    resolveFrom.silent(projectRoot, 'expo-router/entry') ?? getFallbackEntryRoot(projectRoot);\n  if (!routerEntry) {\n    return undefined;\n  }\n  // It doesn't matter if the app folder exists.\n  const appFolder = path.join(projectRoot, routerDirectory);\n  const appRoot = path.relative(path.dirname(routerEntry), appFolder);\n  debug('expo-router entry', routerEntry, appFolder, appRoot);\n  return appRoot;\n}\n\n/** If the `expo-router` package is not installed, then use the `expo` package to determine where the node modules are relative to the project. */\nfunction getFallbackEntryRoot(projectRoot: string): string {\n  const expoRoot = resolveFrom.silent(projectRoot, 'expo/package.json');\n  if (expoRoot) {\n    return path.join(path.dirname(path.dirname(expoRoot)), 'expo-router/entry');\n  }\n  return path.join(projectRoot, 'node_modules/expo-router/entry');\n}\n\nexport function getRouterDirectoryModuleIdWithManifest(\n  projectRoot: string,\n  exp: ExpoConfig\n): string {\n  return exp.extra?.router?.unstable_src ?? getRouterDirectory(projectRoot);\n}\n\nexport function getRouterDirectoryWithManifest(projectRoot: string, exp: ExpoConfig): string {\n  return path.join(projectRoot, getRouterDirectoryModuleIdWithManifest(projectRoot, exp));\n}\n\nexport function getRouterDirectory(projectRoot: string): string {\n  // more specific directories first\n  if (directoryExistsSync(path.join(projectRoot, 'src/app'))) {\n    Log.log(chalk.gray('Using src/app as the root directory for Expo Router.'));\n    return 'src/app';\n  }\n\n  debug('Using app as the root directory for Expo Router.');\n  return 'app';\n}\n\nexport function isApiRouteConvention(name: string): boolean {\n  return /\\+api\\.[tj]sx?$/.test(name);\n}\n\nexport function getApiRoutesForDirectory(cwd: string) {\n  return globSync('**/*+api.@(ts|tsx|js|jsx)', {\n    cwd,\n    absolute: true,\n  });\n}\n\n// Used to emulate a context module, but way faster. TODO: May need to adjust the extensions to stay in sync with Metro.\nexport function getRoutePaths(cwd: string) {\n  return globSync('**/*.@(ts|tsx|js|jsx)', {\n    cwd,\n  }).map((p) => './' + normalizePaths(p));\n}\n\nfunction normalizePaths(p: string) {\n  return p.replace(/\\\\/g, '/');\n}\n"],"names":["getAppRouterRelativeEntryPath","getRouterDirectoryModuleIdWithManifest","getRouterDirectoryWithManifest","getRouterDirectory","isApiRouteConvention","getApiRoutesForDirectory","getRoutePaths","debug","require","projectRoot","routerDirectory","resolveFrom","routerEntry","silent","getFallbackEntryRoot","undefined","appFolder","path","join","appRoot","relative","dirname","expoRoot","exp","extra","router","unstable_src","directoryExistsSync","Log","log","chalk","gray","name","test","cwd","globSync","absolute","map","p","normalizePaths","replace"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/router.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport { sync as globSync } from 'glob';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { Log } from '../../../log';\nimport { directoryExistsSync } from '../../../utils/dir';\nimport { memoize } from '../../../utils/fn';\n\nconst debug = require('debug')('expo:start:server:metro:router') as typeof console.log;\n\n/**\n * Get the relative path for requiring the `/app` folder relative to the `expo-router/entry` file.\n * This mechanism does require the server to restart after the `expo-router` package is installed.\n */\nexport function getAppRouterRelativeEntryPath(\n  projectRoot: string,\n  routerDirectory: string = getRouterDirectory(projectRoot)\n): string | undefined {\n  // Auto pick App entry\n  const routerEntry =\n    resolveFrom.silent(projectRoot, 'expo-router/entry') ?? getFallbackEntryRoot(projectRoot);\n  if (!routerEntry) {\n    return undefined;\n  }\n  // It doesn't matter if the app folder exists.\n  const appFolder = path.join(projectRoot, routerDirectory);\n  const appRoot = path.relative(path.dirname(routerEntry), appFolder);\n  debug('expo-router entry', routerEntry, appFolder, appRoot);\n  return appRoot;\n}\n\n/** If the `expo-router` package is not installed, then use the `expo` package to determine where the node modules are relative to the project. */\nfunction getFallbackEntryRoot(projectRoot: string): string {\n  const expoRoot = resolveFrom.silent(projectRoot, 'expo/package.json');\n  if (expoRoot) {\n    return path.join(path.dirname(path.dirname(expoRoot)), 'expo-router/entry');\n  }\n  return path.join(projectRoot, 'node_modules/expo-router/entry');\n}\n\nexport function getRouterDirectoryModuleIdWithManifest(\n  projectRoot: string,\n  exp: ExpoConfig\n): string {\n  return exp.extra?.router?.unstable_src ?? getRouterDirectory(projectRoot);\n}\n\nexport function getRouterDirectoryWithManifest(projectRoot: string, exp: ExpoConfig): string {\n  return path.join(projectRoot, getRouterDirectoryModuleIdWithManifest(projectRoot, exp));\n}\n\nconst logSrcDir = memoize(() =>\n  Log.log(chalk.gray('Using src/app as the root directory for Expo Router.'))\n);\n\nexport function getRouterDirectory(projectRoot: string): string {\n  // more specific directories first\n  if (directoryExistsSync(path.join(projectRoot, 'src/app'))) {\n    logSrcDir();\n    return 'src/app';\n  }\n\n  debug('Using app as the root directory for Expo Router.');\n  return 'app';\n}\n\nexport function isApiRouteConvention(name: string): boolean {\n  return /\\+api\\.[tj]sx?$/.test(name);\n}\n\nexport function getApiRoutesForDirectory(cwd: string) {\n  return globSync('**/*+api.@(ts|tsx|js|jsx)', {\n    cwd,\n    absolute: true,\n  });\n}\n\n// Used to emulate a context module, but way faster. TODO: May need to adjust the extensions to stay in sync with Metro.\nexport function getRoutePaths(cwd: string) {\n  return globSync('**/*.@(ts|tsx|js|jsx)', {\n    cwd,\n  }).map((p) => './' + normalizePaths(p));\n}\n\nfunction normalizePaths(p: string) {\n  return p.replace(/\\\\/g, '/');\n}\n"],"names":["getAppRouterRelativeEntryPath","getRouterDirectoryModuleIdWithManifest","getRouterDirectoryWithManifest","getRouterDirectory","isApiRouteConvention","getApiRoutesForDirectory","getRoutePaths","debug","require","projectRoot","routerDirectory","resolveFrom","routerEntry","silent","getFallbackEntryRoot","undefined","appFolder","path","join","appRoot","relative","dirname","expoRoot","exp","extra","router","unstable_src","logSrcDir","memoize","Log","log","chalk","gray","directoryExistsSync","name","test","cwd","globSync","absolute","map","p","normalizePaths","replace"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js b/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js
index 8e13a46..293ad76 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js
@@ -6,9 +6,12 @@ exports.runServer = void 0;
 var _assert = _interopRequireDefault(require("assert"));
 var _http = _interopRequireDefault(require("http"));
 var _https = _interopRequireDefault(require("https"));
+var _metro = _interopRequireDefault(require("metro"));
+var _hmrServer = _interopRequireDefault(require("metro/src/HmrServer"));
+var _createWebsocketServer = _interopRequireDefault(require("metro/src/lib/createWebsocketServer"));
+var _metroInspectorProxy = require("metro-inspector-proxy");
 var _url = require("url");
 var _inspectorProxy = require("./inspector-proxy");
-var _resolveFromProject = require("./resolveFromProject");
 var _env = require("../../../utils/env");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
@@ -16,10 +19,6 @@ function _interopRequireDefault(obj) {
     };
 }
 const runServer = async (metroBundler, config, { hasReducedPerformance =false , host , onError , onReady , secureServerOptions , waitForBundler =false , websocketEndpoints ={} , watch  })=>{
-    const projectRoot = metroBundler.projectRoot;
-    const Metro = (0, _resolveFromProject).importMetroFromProject(projectRoot);
-    const createWebsocketServer = (0, _resolveFromProject).importMetroCreateWebsocketServerFromProject(projectRoot);
-    const MetroHmrServer = (0, _resolveFromProject).importMetroHmrServerFromProject(projectRoot);
     // await earlyPortCheck(host, config.server.port);
     // if (secure != null || secureCert != null || secureKey != null) {
     //   // eslint-disable-next-line no-console
@@ -30,7 +29,7 @@ const runServer = async (metroBundler, config, { hasReducedPerformance =false ,
     //       "Metro's https development server.",
     //   );
     // }
-    const { middleware , end , metroServer  } = await Metro.createConnectMiddleware(config, {
+    const { middleware , end , metroServer  } = await _metro.default.createConnectMiddleware(config, {
         hasReducedPerformance,
         waitForBundler,
         watch
@@ -41,8 +40,7 @@ const runServer = async (metroBundler, config, { hasReducedPerformance =false ,
     if (config.server.runInspectorProxy && !_env.env.EXPO_NO_INSPECTOR_PROXY) {
         inspectorProxy = (0, _inspectorProxy).createInspectorProxy(metroBundler, config.projectRoot);
     } else if (config.server.runInspectorProxy) {
-        const { InspectorProxy  } = (0, _resolveFromProject).importMetroInspectorProxyFromProject(projectRoot);
-        inspectorProxy = new InspectorProxy(config.projectRoot);
+        inspectorProxy = new _metroInspectorProxy.InspectorProxy(config.projectRoot);
     }
     let httpServer;
     if (secureServerOptions != null) {
@@ -66,8 +64,9 @@ const runServer = async (metroBundler, config, { hasReducedPerformance =false ,
                 ...inspectorProxy ? {
                     ...inspectorProxy.createWebSocketListeners(httpServer)
                 } : {},
-                "/hot": createWebsocketServer({
-                    websocketServer: new MetroHmrServer(metroServer.getBundler(), metroServer.getCreateModuleId(), config)
+                // @ts-expect-error: incorrect types
+                "/hot": (0, _createWebsocketServer).default({
+                    websocketServer: new _hmrServer.default(metroServer.getBundler(), metroServer.getCreateModuleId(), config)
                 })
             });
             httpServer.on("upgrade", (request, socket, head)=>{
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js.map b/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js.map
index 1e4ee68..2970480 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/runServer-fork.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/runServer-fork.ts"],"sourcesContent":["// Copyright © 2023 650 Industries.\n// Copyright (c) Meta Platforms, Inc. and affiliates.\n//\n// Forks https://github.com/facebook/metro/blob/b80d9a0f638ee9fb82ff69cd3c8d9f4309ca1da2/packages/metro/src/index.flow.js#L57\n// and adds the ability to access the bundler instance.\nimport assert from 'assert';\nimport http from 'http';\nimport https from 'https';\nimport { RunServerOptions, Server } from 'metro';\nimport { ConfigT } from 'metro-config';\nimport type { InspectorProxy } from 'metro-inspector-proxy';\nimport { parse } from 'url';\n\nimport { MetroBundlerDevServer } from './MetroBundlerDevServer';\nimport { createInspectorProxy, ExpoInspectorProxy } from './inspector-proxy';\nimport {\n  importMetroCreateWebsocketServerFromProject,\n  importMetroFromProject,\n  importMetroHmrServerFromProject,\n  importMetroInspectorProxyFromProject,\n} from './resolveFromProject';\nimport { env } from '../../../utils/env';\nimport type { ConnectAppType } from '../middleware/server.types';\n\nexport const runServer = async (\n  metroBundler: MetroBundlerDevServer,\n  config: ConfigT,\n  {\n    hasReducedPerformance = false,\n    host,\n    onError,\n    onReady,\n    secureServerOptions,\n    waitForBundler = false,\n    websocketEndpoints = {},\n    watch,\n  }: RunServerOptions\n): Promise<{ server: http.Server | https.Server; metro: Server }> => {\n  const projectRoot = metroBundler.projectRoot;\n\n  const Metro = importMetroFromProject(projectRoot);\n\n  const createWebsocketServer = importMetroCreateWebsocketServerFromProject(projectRoot);\n\n  const MetroHmrServer = importMetroHmrServerFromProject(projectRoot);\n\n  // await earlyPortCheck(host, config.server.port);\n\n  // if (secure != null || secureCert != null || secureKey != null) {\n  //   // eslint-disable-next-line no-console\n  //   console.warn(\n  //     chalk.inverse.yellow.bold(' DEPRECATED '),\n  //     'The `secure`, `secureCert`, and `secureKey` options are now deprecated. ' +\n  //       'Please use the `secureServerOptions` object instead to pass options to ' +\n  //       \"Metro's https development server.\",\n  //   );\n  // }\n\n  const { middleware, end, metroServer } = await Metro.createConnectMiddleware(config, {\n    hasReducedPerformance,\n    waitForBundler,\n    watch,\n  });\n\n  assert(typeof (middleware as any).use === 'function');\n  const serverApp = middleware as ConnectAppType;\n\n  let inspectorProxy: InspectorProxy | ExpoInspectorProxy | null = null;\n  if (config.server.runInspectorProxy && !env.EXPO_NO_INSPECTOR_PROXY) {\n    inspectorProxy = createInspectorProxy(metroBundler, config.projectRoot);\n  } else if (config.server.runInspectorProxy) {\n    const { InspectorProxy } = importMetroInspectorProxyFromProject(projectRoot);\n    inspectorProxy = new InspectorProxy(config.projectRoot);\n  }\n\n  let httpServer: http.Server | https.Server;\n\n  if (secureServerOptions != null) {\n    httpServer = https.createServer(secureServerOptions, serverApp);\n  } else {\n    httpServer = http.createServer(serverApp);\n  }\n  return new Promise<{ server: http.Server | https.Server; metro: Server }>((resolve, reject) => {\n    httpServer.on('error', (error) => {\n      if (onError) {\n        onError(error);\n      }\n      reject(error);\n      end();\n    });\n\n    httpServer.listen(config.server.port, host, () => {\n      if (onReady) {\n        onReady(httpServer);\n      }\n\n      Object.assign(websocketEndpoints, {\n        ...(inspectorProxy ? { ...inspectorProxy.createWebSocketListeners(httpServer) } : {}),\n        '/hot': createWebsocketServer({\n          websocketServer: new MetroHmrServer(\n            metroServer.getBundler(),\n            metroServer.getCreateModuleId(),\n            config\n          ),\n        }),\n      });\n\n      httpServer.on('upgrade', (request, socket, head) => {\n        const { pathname } = parse(request.url!);\n        if (pathname != null && websocketEndpoints[pathname]) {\n          websocketEndpoints[pathname].handleUpgrade(request, socket, head, (ws) => {\n            websocketEndpoints[pathname].emit('connection', ws, request);\n          });\n        } else {\n          socket.destroy();\n        }\n      });\n\n      if (inspectorProxy) {\n        // TODO(hypuk): Refactor inspectorProxy.processRequest into separate request handlers\n        // so that we could provide routes (/json/list and /json/version) here.\n        // Currently this causes Metro to give warning about T31407894.\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        serverApp.use(inspectorProxy.processRequest.bind(inspectorProxy));\n      }\n\n      resolve({ server: httpServer, metro: metroServer });\n    });\n\n    // Disable any kind of automatic timeout behavior for incoming\n    // requests in case it takes the packager more than the default\n    // timeout of 120 seconds to respond to a request.\n    httpServer.timeout = 0;\n\n    httpServer.on('close', () => {\n      end();\n    });\n  });\n};\n"],"names":["runServer","metroBundler","config","hasReducedPerformance","host","onError","onReady","secureServerOptions","waitForBundler","websocketEndpoints","watch","projectRoot","Metro","importMetroFromProject","createWebsocketServer","importMetroCreateWebsocketServerFromProject","MetroHmrServer","importMetroHmrServerFromProject","middleware","end","metroServer","createConnectMiddleware","assert","use","serverApp","inspectorProxy","server","runInspectorProxy","env","EXPO_NO_INSPECTOR_PROXY","createInspectorProxy","InspectorProxy","importMetroInspectorProxyFromProject","httpServer","https","createServer","http","Promise","resolve","reject","on","error","listen","port","Object","assign","createWebSocketListeners","websocketServer","getBundler","getCreateModuleId","request","socket","head","pathname","parse","url","handleUpgrade","ws","emit","destroy","processRequest","bind","metro","timeout"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/runServer-fork.ts"],"sourcesContent":["// Copyright © 2023 650 Industries.\n// Copyright (c) Meta Platforms, Inc. and affiliates.\n//\n// Forks https://github.com/facebook/metro/blob/b80d9a0f638ee9fb82ff69cd3c8d9f4309ca1da2/packages/metro/src/index.flow.js#L57\n// and adds the ability to access the bundler instance.\nimport assert from 'assert';\nimport http from 'http';\nimport https from 'https';\nimport Metro, { RunServerOptions, Server } from 'metro';\nimport MetroHmrServer from 'metro/src/HmrServer';\nimport createWebsocketServer from 'metro/src/lib/createWebsocketServer';\nimport { ConfigT } from 'metro-config';\nimport { InspectorProxy } from 'metro-inspector-proxy';\nimport { parse } from 'url';\n\nimport { MetroBundlerDevServer } from './MetroBundlerDevServer';\nimport { createInspectorProxy, ExpoInspectorProxy } from './inspector-proxy';\nimport { env } from '../../../utils/env';\nimport type { ConnectAppType } from '../middleware/server.types';\n\nexport const runServer = async (\n  metroBundler: MetroBundlerDevServer,\n  config: ConfigT,\n  {\n    hasReducedPerformance = false,\n    host,\n    onError,\n    onReady,\n    secureServerOptions,\n    waitForBundler = false,\n    websocketEndpoints = {},\n    watch,\n  }: RunServerOptions\n): Promise<{ server: http.Server | https.Server; metro: Server }> => {\n  // await earlyPortCheck(host, config.server.port);\n\n  // if (secure != null || secureCert != null || secureKey != null) {\n  //   // eslint-disable-next-line no-console\n  //   console.warn(\n  //     chalk.inverse.yellow.bold(' DEPRECATED '),\n  //     'The `secure`, `secureCert`, and `secureKey` options are now deprecated. ' +\n  //       'Please use the `secureServerOptions` object instead to pass options to ' +\n  //       \"Metro's https development server.\",\n  //   );\n  // }\n\n  const { middleware, end, metroServer } = await Metro.createConnectMiddleware(config, {\n    hasReducedPerformance,\n    waitForBundler,\n    watch,\n  });\n\n  assert(typeof (middleware as any).use === 'function');\n  const serverApp = middleware as ConnectAppType;\n\n  let inspectorProxy: InspectorProxy | ExpoInspectorProxy | null = null;\n  if (config.server.runInspectorProxy && !env.EXPO_NO_INSPECTOR_PROXY) {\n    inspectorProxy = createInspectorProxy(metroBundler, config.projectRoot);\n  } else if (config.server.runInspectorProxy) {\n    inspectorProxy = new InspectorProxy(config.projectRoot);\n  }\n\n  let httpServer: http.Server | https.Server;\n\n  if (secureServerOptions != null) {\n    httpServer = https.createServer(secureServerOptions, serverApp);\n  } else {\n    httpServer = http.createServer(serverApp);\n  }\n  return new Promise<{ server: http.Server | https.Server; metro: Server }>((resolve, reject) => {\n    httpServer.on('error', (error) => {\n      if (onError) {\n        onError(error);\n      }\n      reject(error);\n      end();\n    });\n\n    httpServer.listen(config.server.port, host, () => {\n      if (onReady) {\n        onReady(httpServer);\n      }\n\n      Object.assign(websocketEndpoints, {\n        ...(inspectorProxy ? { ...inspectorProxy.createWebSocketListeners(httpServer) } : {}),\n        // @ts-expect-error: incorrect types\n        '/hot': createWebsocketServer({\n          websocketServer: new MetroHmrServer(\n            metroServer.getBundler(),\n            metroServer.getCreateModuleId(),\n            config\n          ),\n        }),\n      });\n\n      httpServer.on('upgrade', (request, socket, head) => {\n        const { pathname } = parse(request.url!);\n        if (pathname != null && websocketEndpoints[pathname]) {\n          websocketEndpoints[pathname].handleUpgrade(request, socket, head, (ws) => {\n            websocketEndpoints[pathname].emit('connection', ws, request);\n          });\n        } else {\n          socket.destroy();\n        }\n      });\n\n      if (inspectorProxy) {\n        // TODO(hypuk): Refactor inspectorProxy.processRequest into separate request handlers\n        // so that we could provide routes (/json/list and /json/version) here.\n        // Currently this causes Metro to give warning about T31407894.\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        serverApp.use(inspectorProxy.processRequest.bind(inspectorProxy));\n      }\n\n      resolve({ server: httpServer, metro: metroServer });\n    });\n\n    // Disable any kind of automatic timeout behavior for incoming\n    // requests in case it takes the packager more than the default\n    // timeout of 120 seconds to respond to a request.\n    httpServer.timeout = 0;\n\n    httpServer.on('close', () => {\n      end();\n    });\n  });\n};\n"],"names":["runServer","metroBundler","config","hasReducedPerformance","host","onError","onReady","secureServerOptions","waitForBundler","websocketEndpoints","watch","middleware","end","metroServer","Metro","createConnectMiddleware","assert","use","serverApp","inspectorProxy","server","runInspectorProxy","env","EXPO_NO_INSPECTOR_PROXY","createInspectorProxy","projectRoot","InspectorProxy","httpServer","https","createServer","http","Promise","resolve","reject","on","error","listen","port","Object","assign","createWebSocketListeners","createWebsocketServer","websocketServer","MetroHmrServer","getBundler","getCreateModuleId","request","socket","head","pathname","parse","url","handleUpgrade","ws","emit","destroy","processRequest","bind","metro","timeout"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js b/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js
index 98242b7..736d638 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js
@@ -12,9 +12,8 @@ function _interopRequireDefault(obj) {
     };
 }
 const debug = require("debug")("expo:start:server:metro:waitForTypescript");
-function observeApiRouteChanges(projectRoot, runner, callback) {
+function observeApiRouteChanges(appDir, runner, callback) {
     const watcher = runner.metro.getBundler().getBundler().getWatcher();
-    const appDir = _path.default.join(projectRoot, "app");
     const listener = ({ eventsQueue  })=>{
         for (const event of eventsQueue){
             if (// event.type === 'add' &&
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js.map b/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js.map
index 5c5d31d..594a2eb 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/waitForMetroToObserveTypeScriptFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/waitForMetroToObserveTypeScriptFile.ts"],"sourcesContent":["import path from 'path';\n\nimport type { ServerLike } from '../BundlerDevServer';\n\nconst debug = require('debug')('expo:start:server:metro:waitForTypescript') as typeof console.log;\n\n/**\n * Use the native file watcher / Metro ruleset to detect if a\n * TypeScript file is added to the project during development.\n */\nexport function observeApiRouteChanges(\n  projectRoot: string,\n  runner: {\n    metro: import('metro').Server;\n    server: ServerLike;\n  },\n  callback: (filepath: string, operation: string) => Promise<void>\n): () => void {\n  const watcher = runner.metro.getBundler().getBundler().getWatcher();\n\n  const appDir = path.join(projectRoot, 'app');\n  const listener = ({\n    eventsQueue,\n  }: {\n    eventsQueue: {\n      filePath: string;\n      metadata?: {\n        type: 'f' | 'd' | 'l'; // Regular file / Directory / Symlink\n      } | null;\n      type: string;\n    }[];\n  }) => {\n    for (const event of eventsQueue) {\n      if (\n        // event.type === 'add' &&\n        // event.metadata?.type !== 'd' &&\n        // We need to ignore node_modules because Metro will add all of the files in node_modules to the watcher.\n        !/node_modules/.test(event.filePath) &&\n        event.filePath.startsWith(appDir)\n      ) {\n        const { filePath } = event;\n        callback(filePath, event.type);\n      }\n    }\n  };\n\n  watcher.addListener('change', listener);\n\n  const off = () => {\n    watcher.removeListener('change', listener);\n  };\n\n  runner.server.addListener?.('close', off);\n  return off;\n}\n\n/**\n * Use the native file watcher / Metro ruleset to detect if a\n * TypeScript file is added to the project during development.\n */\nexport function waitForMetroToObserveTypeScriptFile(\n  projectRoot: string,\n  runner: {\n    metro: import('metro').Server;\n    server: ServerLike;\n  },\n  callback: () => Promise<void>\n): () => void {\n  const watcher = runner.metro.getBundler().getBundler().getWatcher();\n\n  const tsconfigPath = path.join(projectRoot, 'tsconfig.json');\n\n  const listener = ({\n    eventsQueue,\n  }: {\n    eventsQueue: {\n      filePath: string;\n      metadata?: {\n        type: 'f' | 'd' | 'l'; // Regular file / Directory / Symlink\n      } | null;\n      type: string;\n    }[];\n  }) => {\n    for (const event of eventsQueue) {\n      if (\n        event.type === 'add' &&\n        event.metadata?.type !== 'd' &&\n        // We need to ignore node_modules because Metro will add all of the files in node_modules to the watcher.\n        !/node_modules/.test(event.filePath)\n      ) {\n        const { filePath } = event;\n        // Is TypeScript?\n        if (\n          // If the user adds a TypeScript file to the observable files in their project.\n          /\\.tsx?$/.test(filePath) ||\n          // Or if the user adds a tsconfig.json file to the project root.\n          filePath === tsconfigPath\n        ) {\n          debug('Detected TypeScript file added to the project: ', filePath);\n          callback();\n          off();\n          return;\n        }\n      }\n    }\n  };\n\n  debug('Waiting for TypeScript files to be added to the project...');\n  watcher.addListener('change', listener);\n\n  const off = () => {\n    watcher.removeListener('change', listener);\n  };\n\n  runner.server.addListener?.('close', off);\n  return off;\n}\n\nexport function observeFileChanges(\n  runner: {\n    metro: import('metro').Server;\n    server: ServerLike;\n  },\n  files: string[],\n  callback: () => void | Promise<void>\n): () => void {\n  const watcher = runner.metro.getBundler().getBundler().getWatcher();\n\n  const listener = ({\n    eventsQueue,\n  }: {\n    eventsQueue: {\n      filePath: string;\n      metadata?: {\n        type: 'f' | 'd' | 'l'; // Regular file / Directory / Symlink\n      } | null;\n      type: string;\n    }[];\n  }) => {\n    for (const event of eventsQueue) {\n      if (\n        // event.type === 'add' &&\n        event.metadata?.type !== 'd' &&\n        // We need to ignore node_modules because Metro will add all of the files in node_modules to the watcher.\n        !/node_modules/.test(event.filePath)\n      ) {\n        const { filePath } = event;\n        // Is TypeScript?\n        if (files.includes(filePath)) {\n          debug('Observed change:', filePath);\n          callback();\n          return;\n        }\n      }\n    }\n  };\n\n  debug('Watching file changes:', files);\n  watcher.addListener('change', listener);\n\n  const off = () => {\n    watcher.removeListener('change', listener);\n  };\n\n  runner.server.addListener?.('close', off);\n  return off;\n}\n"],"names":["observeApiRouteChanges","waitForMetroToObserveTypeScriptFile","observeFileChanges","debug","require","projectRoot","runner","callback","watcher","metro","getBundler","getWatcher","appDir","path","join","listener","eventsQueue","event","test","filePath","startsWith","type","addListener","off","removeListener","server","tsconfigPath","metadata","files","includes"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/waitForMetroToObserveTypeScriptFile.ts"],"sourcesContent":["import path from 'path';\n\nimport type { ServerLike } from '../BundlerDevServer';\n\nconst debug = require('debug')('expo:start:server:metro:waitForTypescript') as typeof console.log;\n\n/**\n * Use the native file watcher / Metro ruleset to detect if a\n * TypeScript file is added to the project during development.\n */\nexport function observeApiRouteChanges(\n  appDir: string,\n  runner: {\n    metro: import('metro').Server;\n    server: ServerLike;\n  },\n  callback: (filepath: string, operation: string) => Promise<void>\n): () => void {\n  const watcher = runner.metro.getBundler().getBundler().getWatcher();\n\n  const listener = ({\n    eventsQueue,\n  }: {\n    eventsQueue: {\n      filePath: string;\n      metadata?: {\n        type: 'f' | 'd' | 'l'; // Regular file / Directory / Symlink\n      } | null;\n      type: string;\n    }[];\n  }) => {\n    for (const event of eventsQueue) {\n      if (\n        // event.type === 'add' &&\n        // event.metadata?.type !== 'd' &&\n        // We need to ignore node_modules because Metro will add all of the files in node_modules to the watcher.\n        !/node_modules/.test(event.filePath) &&\n        event.filePath.startsWith(appDir)\n      ) {\n        const { filePath } = event;\n        callback(filePath, event.type);\n      }\n    }\n  };\n\n  watcher.addListener('change', listener);\n\n  const off = () => {\n    watcher.removeListener('change', listener);\n  };\n\n  runner.server.addListener?.('close', off);\n  return off;\n}\n\n/**\n * Use the native file watcher / Metro ruleset to detect if a\n * TypeScript file is added to the project during development.\n */\nexport function waitForMetroToObserveTypeScriptFile(\n  projectRoot: string,\n  runner: {\n    metro: import('metro').Server;\n    server: ServerLike;\n  },\n  callback: () => Promise<void>\n): () => void {\n  const watcher = runner.metro.getBundler().getBundler().getWatcher();\n\n  const tsconfigPath = path.join(projectRoot, 'tsconfig.json');\n\n  const listener = ({\n    eventsQueue,\n  }: {\n    eventsQueue: {\n      filePath: string;\n      metadata?: {\n        type: 'f' | 'd' | 'l'; // Regular file / Directory / Symlink\n      } | null;\n      type: string;\n    }[];\n  }) => {\n    for (const event of eventsQueue) {\n      if (\n        event.type === 'add' &&\n        event.metadata?.type !== 'd' &&\n        // We need to ignore node_modules because Metro will add all of the files in node_modules to the watcher.\n        !/node_modules/.test(event.filePath)\n      ) {\n        const { filePath } = event;\n        // Is TypeScript?\n        if (\n          // If the user adds a TypeScript file to the observable files in their project.\n          /\\.tsx?$/.test(filePath) ||\n          // Or if the user adds a tsconfig.json file to the project root.\n          filePath === tsconfigPath\n        ) {\n          debug('Detected TypeScript file added to the project: ', filePath);\n          callback();\n          off();\n          return;\n        }\n      }\n    }\n  };\n\n  debug('Waiting for TypeScript files to be added to the project...');\n  watcher.addListener('change', listener);\n\n  const off = () => {\n    watcher.removeListener('change', listener);\n  };\n\n  runner.server.addListener?.('close', off);\n  return off;\n}\n\nexport function observeFileChanges(\n  runner: {\n    metro: import('metro').Server;\n    server: ServerLike;\n  },\n  files: string[],\n  callback: () => void | Promise<void>\n): () => void {\n  const watcher = runner.metro.getBundler().getBundler().getWatcher();\n\n  const listener = ({\n    eventsQueue,\n  }: {\n    eventsQueue: {\n      filePath: string;\n      metadata?: {\n        type: 'f' | 'd' | 'l'; // Regular file / Directory / Symlink\n      } | null;\n      type: string;\n    }[];\n  }) => {\n    for (const event of eventsQueue) {\n      if (\n        // event.type === 'add' &&\n        event.metadata?.type !== 'd' &&\n        // We need to ignore node_modules because Metro will add all of the files in node_modules to the watcher.\n        !/node_modules/.test(event.filePath)\n      ) {\n        const { filePath } = event;\n        // Is TypeScript?\n        if (files.includes(filePath)) {\n          debug('Observed change:', filePath);\n          callback();\n          return;\n        }\n      }\n    }\n  };\n\n  debug('Watching file changes:', files);\n  watcher.addListener('change', listener);\n\n  const off = () => {\n    watcher.removeListener('change', listener);\n  };\n\n  runner.server.addListener?.('close', off);\n  return off;\n}\n"],"names":["observeApiRouteChanges","waitForMetroToObserveTypeScriptFile","observeFileChanges","debug","require","appDir","runner","callback","watcher","metro","getBundler","getWatcher","listener","eventsQueue","event","test","filePath","startsWith","type","addListener","off","removeListener","server","projectRoot","tsconfigPath","path","join","metadata","files","includes"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js
index f0977e0..64bdb22 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js
@@ -8,12 +8,12 @@ exports.shouldAliasAssetRegistryForWeb = shouldAliasAssetRegistryForWeb;
 exports.shouldAliasModule = shouldAliasModule;
 exports.withMetroMultiPlatformAsync = withMetroMultiPlatformAsync;
 var _fs = _interopRequireDefault(require("fs"));
+var metroResolver = _interopRequireWildcard(require("metro-resolver"));
 var _path = _interopRequireDefault(require("path"));
 var _resolveFrom = _interopRequireDefault(require("resolve-from"));
 var _createExpoMetroResolver = require("./createExpoMetroResolver");
 var _externals = require("./externals");
 var _metroErrors = require("./metroErrors");
-var _resolveFromProject = require("./resolveFromProject");
 var _router = require("./router");
 var _withMetroResolvers = require("./withMetroResolvers");
 var _log = require("../../../log");
@@ -29,15 +29,36 @@ function _interopRequireDefault(obj) {
         default: obj
     };
 }
+function _interopRequireWildcard(obj) {
+    if (obj && obj.__esModule) {
+        return obj;
+    } else {
+        var newObj = {};
+        if (obj != null) {
+            for(var key in obj){
+                if (Object.prototype.hasOwnProperty.call(obj, key)) {
+                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
+                    if (desc.get || desc.set) {
+                        Object.defineProperty(newObj, key, desc);
+                    } else {
+                        newObj[key] = obj[key];
+                    }
+                }
+            }
+        }
+        newObj.default = obj;
+        return newObj;
+    }
+}
 const debug = require("debug")("expo:start:server:metro:multi-platform");
-function withWebPolyfills(config, projectRoot) {
+function withWebPolyfills(config) {
     const originalGetPolyfills = config.serializer.getPolyfills ? config.serializer.getPolyfills.bind(config.serializer) : ()=>[]
     ;
     const getPolyfills = (ctx)=>{
         if (ctx.platform === "web") {
             return [
                 // NOTE: We might need this for all platforms
-                _path.default.join(projectRoot, _externals.EXTERNAL_REQUIRE_POLYFILL)
+                _path.default.join(config.projectRoot, _externals.EXTERNAL_REQUIRE_POLYFILL)
             ];
         }
         // Generally uses `rn-get-polyfills`
@@ -71,7 +92,7 @@ function getNodejsExtensions(srcExts) {
     nodejsSourceExtensions.splice(jsIndex + 1, 0, ...mjsExts);
     return nodejsSourceExtensions;
 }
-function withExtendedResolver(config, { projectRoot , tsconfig , platforms , isTsconfigPathsEnabled , isFastResolverEnabled  }) {
+function withExtendedResolver(config, { tsconfig , platforms , isTsconfigPathsEnabled , isFastResolverEnabled , isExporting  }) {
     var ref2;
     if (isFastResolverEnabled) {
         _log.Log.warn(`Experimental bundling features are enabled.`);
@@ -80,17 +101,12 @@ function withExtendedResolver(config, { projectRoot , tsconfig , platforms , isT
     // this needs to be unified since you can't dynamically
     // swap out the transformer based on platform.
     const assetRegistryPath = _fs.default.realpathSync(// This is the native asset registry alias for native.
-    _path.default.resolve((0, _resolveFrom).default(projectRoot, "react-native/Libraries/Image/AssetRegistry")));
-    let reactNativeWebAppContainer = null;
-    try {
-        reactNativeWebAppContainer = _fs.default.realpathSync(// This is the native asset registry alias for native.
-        _path.default.resolve((0, _resolveFrom).default(projectRoot, "expo-router/build/fork/react-native-web-container")));
-    } catch  {}
-    const isWebEnabled = platforms.includes("web");
+    _path.default.resolve((0, _resolveFrom).default(config.projectRoot, "react-native/Libraries/Image/AssetRegistry")));
+    const defaultResolver = metroResolver.resolve;
     var ref1;
     const resolver = isFastResolverEnabled ? (0, _createExpoMetroResolver).createFastResolver({
         preserveSymlinks: (ref1 = (ref2 = config.resolver) == null ? void 0 : ref2.unstable_enableSymlinks) != null ? ref1 : false
-    }) : (0, _resolveFromProject).importMetroResolverFromProject(projectRoot).resolve;
+    }) : defaultResolver;
     const extraNodeModules = {};
     const aliases = {
         web: {
@@ -98,6 +114,8 @@ function withExtendedResolver(config, { projectRoot , tsconfig , platforms , isT
             "react-native/index": "react-native-web"
         }
     };
+    // TODO: We can probably drop this resolution hack.
+    const isWebEnabled = platforms.includes("web");
     if (isWebEnabled) {
         // Allow `react-native-web` to be optional when web is not enabled but path aliases is.
         extraNodeModules["web"] = {
@@ -119,192 +137,231 @@ function withExtendedResolver(config, { projectRoot , tsconfig , platforms , isT
         paths: (_paths1 = tsconfig.paths) != null ? _paths1 : {},
         baseUrl: tsconfig.baseUrl
     }) : null;
-    if (isTsconfigPathsEnabled && (0, _interactive).isInteractive()) {
-        // TODO: We should track all the files that used imports and invalidate them
-        // currently the user will need to save all the files that use imports to
-        // use the new aliases.
-        const configWatcher = new _fileNotifier.FileNotifier(projectRoot, [
-            "./tsconfig.json",
-            "./jsconfig.json"
-        ]);
-        configWatcher.startObserving(()=>{
-            debug("Reloading tsconfig.json");
-            (0, _loadTsConfigPaths).loadTsConfigPathsAsync(projectRoot).then((tsConfigPaths)=>{
-                if ((tsConfigPaths == null ? void 0 : tsConfigPaths.paths) && !!Object.keys(tsConfigPaths.paths).length) {
-                    debug("Enabling tsconfig.json paths support");
-                    var _paths;
-                    tsConfigResolve = _resolveWithTsConfigPaths.resolveWithTsConfigPaths.bind(_resolveWithTsConfigPaths.resolveWithTsConfigPaths, {
-                        paths: (_paths = tsConfigPaths.paths) != null ? _paths : {},
-                        baseUrl: tsConfigPaths.baseUrl
-                    });
-                } else {
-                    debug("Disabling tsconfig.json paths support");
-                    tsConfigResolve = null;
-                }
+    // TODO: Move this to be a transform key for invalidation.
+    if (!isExporting && (0, _interactive).isInteractive()) {
+        if (isTsconfigPathsEnabled) {
+            // TODO: We should track all the files that used imports and invalidate them
+            // currently the user will need to save all the files that use imports to
+            // use the new aliases.
+            const configWatcher = new _fileNotifier.FileNotifier(config.projectRoot, [
+                "./tsconfig.json",
+                "./jsconfig.json", 
+            ]);
+            configWatcher.startObserving(()=>{
+                debug("Reloading tsconfig.json");
+                (0, _loadTsConfigPaths).loadTsConfigPathsAsync(config.projectRoot).then((tsConfigPaths)=>{
+                    if ((tsConfigPaths == null ? void 0 : tsConfigPaths.paths) && !!Object.keys(tsConfigPaths.paths).length) {
+                        debug("Enabling tsconfig.json paths support");
+                        var _paths;
+                        tsConfigResolve = _resolveWithTsConfigPaths.resolveWithTsConfigPaths.bind(_resolveWithTsConfigPaths.resolveWithTsConfigPaths, {
+                            paths: (_paths = tsConfigPaths.paths) != null ? _paths : {},
+                            baseUrl: tsConfigPaths.baseUrl
+                        });
+                    } else {
+                        debug("Disabling tsconfig.json paths support");
+                        tsConfigResolve = null;
+                    }
+                });
             });
-        });
-        // TODO: This probably prevents the process from exiting.
-        (0, _exit).installExitHooks(()=>{
-            configWatcher.stopObserving();
-        });
-    } else {
-        debug("Skipping tsconfig.json paths support");
+            // TODO: This probably prevents the process from exiting.
+            (0, _exit).installExitHooks(()=>{
+                configWatcher.stopObserving();
+            });
+        } else {
+            debug("Skipping tsconfig.json paths support");
+        }
     }
     let nodejsSourceExtensions = null;
-    const shimsFolder = _path.default.join(require.resolve("@expo/cli/package.json"), "..", "static/shims");
-    return (0, _withMetroResolvers).withMetroResolvers(config, projectRoot, [
-        // Add a resolver to alias the web asset resolver.
-        (immutableContext, moduleName1, platform)=>{
-            var ref;
-            let context = {
-                ...immutableContext
-            };
-            const environment = (ref = context.customResolverOptions) == null ? void 0 : ref.environment;
-            const isNode = environment === "node";
-            // TODO: We need to prevent the require.context from including API routes as these use externals.
-            // Should be fine after async routes lands.
-            if (isNode) {
-                const moduleId = (0, _externals).isNodeExternal(moduleName1);
-                if (moduleId) {
-                    moduleName1 = (0, _externals).getNodeExternalModuleId(context.originModulePath, moduleId);
-                    debug(`Redirecting Node.js external "${moduleId}" to "${moduleName1}"`);
-                }
-                // Adjust nodejs source extensions to sort mjs after js, including platform variants.
-                if (nodejsSourceExtensions === null) {
-                    nodejsSourceExtensions = getNodejsExtensions(context.sourceExts);
+    const shimsFolder = _path.default.join(config.projectRoot, _externals.METRO_SHIMS_FOLDER);
+    function getStrictResolver(context, platform) {
+        var ref;
+        const isNode = ((ref = context.customResolverOptions) == null ? void 0 : ref.environment) === "node";
+        return function doResolve(moduleName) {
+            // Workaround for Node.js having package exports enabled by default and
+            // the fast resolver not having package exports support yet.
+            const resolverToUse = isNode ? defaultResolver : resolver;
+            return resolverToUse({
+                ...context,
+                resolveRequest: undefined
+            }, moduleName, platform);
+        };
+    }
+    function getOptionalResolver(context, platform) {
+        const doResolve = getStrictResolver(context, platform);
+        return function optionalResolve(moduleName) {
+            try {
+                return doResolve(moduleName);
+            } catch (error) {
+                // If the error is directly related to a resolver not being able to resolve a module, then
+                // we can ignore the error and try the next resolver. Otherwise, we should throw the error.
+                const isResolutionError = (0, _metroErrors).isFailedToResolveNameError(error) || (0, _metroErrors).isFailedToResolvePathError(error);
+                if (!isResolutionError) {
+                    throw error;
                 }
-                context.sourceExts = nodejsSourceExtensions;
-            }
-            // Conditionally remap `react-native` to `react-native-web` on web in
-            // a way that doesn't require Babel to resolve the alias.
-            if (platform && platform in aliases && aliases[platform][moduleName1]) {
-                moduleName1 = aliases[platform][moduleName1];
-            }
-            // TODO: We may be able to remove this in the future, it's doing no harm
-            // by staying here.
-            // Conditionally remap `react-native` to `react-native-web`
-            if (platform && platform in extraNodeModules) {
-                context.extraNodeModules = {
-                    ...extraNodeModules[platform],
-                    ...context.extraNodeModules
-                };
             }
-            if ((tsconfig == null ? void 0 : tsconfig.baseUrl) && isTsconfigPathsEnabled) {
-                context = {
-                    ...context,
-                    nodeModulesPaths: [
-                        ...immutableContext.nodeModulesPaths,
-                        // add last to ensure node modules are resolved first
-                        tsconfig.baseUrl, 
-                    ]
-                };
-            }
-            let mainFields = context.mainFields;
-            if (isNode) {
-                // Node.js runtimes should only be importing main at the moment.
-                // This is a temporary fix until we can support the package.json exports.
-                mainFields = [
-                    "main",
-                    "module"
-                ];
-            } else if (_env.env.EXPO_METRO_NO_MAIN_FIELD_OVERRIDE) {
-                mainFields = context.mainFields;
-            } else if (platform && platform in preferredMainFields) {
-                mainFields = preferredMainFields[platform];
+            return null;
+        };
+    }
+    const metroConfigWithCustomResolver = (0, _withMetroResolvers).withMetroResolvers(config, [
+        // tsconfig paths
+        (context, moduleName, platform)=>{
+            var ref;
+            return (ref = tsConfigResolve == null ? void 0 : tsConfigResolve({
+                originModulePath: context.originModulePath,
+                moduleName
+            }, getOptionalResolver(context, platform))) != null ? ref : null;
+        },
+        // Node.js built-ins get empty externals on web
+        (context, moduleName, platform)=>{
+            var // Skip when targeting server runtimes
+            ref;
+            if (isFastResolverEnabled || // is web
+            platform !== "web" || ((ref = context.customResolverOptions) == null ? void 0 : ref.environment) === "node" || // This transform only applies to Node.js built-ins
+            !(0, _externals).isNodeExternal(moduleName)) {
+                return null;
             }
-            function doResolve(moduleName) {
-                return resolver({
-                    ...context,
-                    resolveRequest: undefined,
-                    mainFields,
-                    // Passing `mainFields` directly won't be considered (in certain version of Metro)
-                    // we need to extend the `getPackageMainPath` directly to
-                    // use platform specific `mainFields`.
-                    // @ts-ignore
-                    getPackageMainPath (packageJsonPath) {
-                        // @ts-expect-error: mainFields is not on type
-                        const package_ = context.moduleCache.getPackage(packageJsonPath);
-                        return package_.getMain(mainFields);
-                    }
-                }, moduleName, platform);
+            // Perform optional resolve first. If the module doesn't exist (no module in the node_modules)
+            // then we can mock the file to use an empty module.
+            const result = getOptionalResolver(context, platform)(moduleName);
+            return result != null ? result : {
+                // In this case, mock the file to use an empty module.
+                type: "empty"
+            };
+        },
+        // Node.js externals support
+        (context, moduleName, platform)=>{
+            var // Only apply to server runtimes
+            ref;
+            if (// is web
+            platform !== "web" || ((ref = context.customResolverOptions) == null ? void 0 : ref.environment) !== "node") {
+                return null;
             }
-            function optionalResolve(moduleName) {
-                try {
-                    return doResolve(moduleName);
-                } catch (error) {
-                    // If the error is directly related to a resolver not being able to resolve a module, then
-                    // we can ignore the error and try the next resolver. Otherwise, we should throw the error.
-                    const isResolutionError = (0, _metroErrors).isFailedToResolveNameError(error) || (0, _metroErrors).isFailedToResolvePathError(error);
-                    if (!isResolutionError) {
-                        throw error;
-                    }
-                }
+            const moduleId = (0, _externals).isNodeExternal(moduleName);
+            if (!moduleId) {
                 return null;
             }
-            let result = null;
-            // React Native uses `event-target-shim` incorrectly and this causes the native runtime
-            // to fail to load. This is a temporary workaround until we can fix this upstream.
-            // https://github.com/facebook/react-native/pull/38628
-            if (moduleName1.includes("event-target-shim") && context.originModulePath.includes(_path.default.sep + "react-native" + _path.default.sep)) {
-                context.sourceExts = context.sourceExts.filter((f)=>!f.includes("mjs")
-                );
-                debug("Skip mjs support for event-target-shim in:", context.originModulePath);
+            const redirectedModuleName = (0, _externals).getNodeExternalModuleId(context.originModulePath, moduleId);
+            debug(`Redirecting Node.js external "${moduleId}" to "${redirectedModuleName}"`);
+            const doResolve = getStrictResolver(context, platform);
+            return doResolve(redirectedModuleName);
+        },
+        // Basic moduleId aliases
+        (context, moduleName, platform)=>{
+            // Conditionally remap `react-native` to `react-native-web` on web in
+            // a way that doesn't require Babel to resolve the alias.
+            if (platform && platform in aliases && aliases[platform][moduleName]) {
+                const redirectedModuleName = aliases[platform][moduleName];
+                const doResolve = getStrictResolver(context, platform);
+                return doResolve(redirectedModuleName);
             }
-            if (tsConfigResolve) {
-                result = tsConfigResolve({
-                    originModulePath: context.originModulePath,
-                    moduleName: moduleName1
-                }, optionalResolve);
+            return null;
+        },
+        // HACK(EvanBacon):
+        // React Native uses `event-target-shim` incorrectly and this causes the native runtime
+        // to fail to load. This is a temporary workaround until we can fix this upstream.
+        // https://github.com/facebook/react-native/pull/38628
+        (context, moduleName, platform)=>{
+            if (platform !== "web" && moduleName === "event-target-shim") {
+                debug("For event-target-shim to use js:", context.originModulePath);
+                const doResolve = getStrictResolver(context, platform);
+                return doResolve("event-target-shim/dist/event-target-shim.js");
             }
-            if (!isFastResolverEnabled && // is web
-            platform === "web" && // Not server runtime
-            !isNode && // Is Node.js built-in
-            (0, _externals).isNodeExternal(moduleName1)) {
-                // Perform optional resolve first. If the module doesn't exist (no module in the node_modules)
-                // then we can mock the file to use an empty module.
-                result != null ? result : result = optionalResolve(moduleName1);
-                if (!result) {
-                    // In this case, mock the file to use an empty module.
-                    return {
-                        type: "empty"
-                    };
-                }
+            return null;
+        },
+        // TODO: Reduce these as much as possible in the future.
+        // Complex post-resolution rewrites.
+        (context, moduleName, platform)=>{
+            const doResolve = getStrictResolver(context, platform);
+            const result = doResolve(moduleName);
+            if (result.type !== "sourceFile") {
+                return result;
+            }
+            // Replace the web resolver with the original one.
+            // This is basically an alias for web-only.
+            // TODO: Drop this in favor of the standalone asset registry module.
+            if (shouldAliasAssetRegistryForWeb(platform, result)) {
+                // @ts-expect-error: `readonly` for some reason.
+                result.filePath = assetRegistryPath;
             }
-            result != null ? result : result = doResolve(moduleName1);
-            if ((result == null ? void 0 : result.type) === "sourceFile") {
-                // Replace the web resolver with the original one.
-                // This is basically an alias for web-only.
-                if (shouldAliasAssetRegistryForWeb(platform, result)) {
+            if (platform === "web" && result.filePath.includes("node_modules")) {
+                // Replace with static shims
+                const normalName = normalizeSlashes(result.filePath)// Drop everything up until the `node_modules` folder.
+                .replace(/.*node_modules\//, "");
+                const shimPath = _path.default.join(shimsFolder, normalName);
+                if (_fs.default.existsSync(shimPath)) {
                     // @ts-expect-error: `readonly` for some reason.
-                    result.filePath = assetRegistryPath;
-                }
-                // React Native Web adds a couple extra divs for no reason, these
-                // make static rendering much harder as we expect the root element to be `<html>`.
-                // This resolution will alias to a simple in-out component to avoid React Native web.
-                if (// Only apply the transform if expo-router is present.
-                reactNativeWebAppContainer && shouldAliasModule({
-                    platform,
-                    result
-                }, {
-                    platform: "web",
-                    output: "react-native-web/dist/exports/AppRegistry/AppContainer.js"
-                })) {
-                    // @ts-expect-error: `readonly` for some reason.
-                    result.filePath = reactNativeWebAppContainer;
-                } else if (platform === "web" && result.filePath.includes("node_modules")) {
-                    // Replace with static shims
-                    const normalName = normalizeSlashes(result.filePath)// Drop everything up until the `node_modules` folder.
-                    .replace(/.*node_modules\//, "");
-                    const shimPath = _path.default.join(shimsFolder, normalName);
-                    if (_fs.default.existsSync(shimPath)) {
-                        // @ts-expect-error: `readonly` for some reason.
-                        result.filePath = shimPath;
-                    }
+                    result.filePath = shimPath;
                 }
             }
             return result;
         }, 
     ]);
+    // Ensure we mutate the resolution context to include the custom resolver options for server and web.
+    const metroConfigWithCustomContext = (0, _withMetroResolvers).withMetroMutatedResolverContext(metroConfigWithCustomResolver, (immutableContext, moduleName, platform)=>{
+        var ref;
+        const context = {
+            ...immutableContext
+        };
+        if (((ref = context.customResolverOptions) == null ? void 0 : ref.environment) === "node") {
+            // Adjust nodejs source extensions to sort mjs after js, including platform variants.
+            if (nodejsSourceExtensions === null) {
+                nodejsSourceExtensions = getNodejsExtensions(context.sourceExts);
+            }
+            context.sourceExts = nodejsSourceExtensions;
+            context.unstable_enablePackageExports = true;
+            context.unstable_conditionNames = [
+                "node",
+                "require"
+            ];
+            // Node.js runtimes should only be importing main at the moment.
+            // This is a temporary fix until we can support the package.json exports.
+            context.mainFields = [
+                "main",
+                "module"
+            ];
+        } else {
+            // Non-server changes
+            if (!_env.env.EXPO_METRO_NO_MAIN_FIELD_OVERRIDE && platform && platform in preferredMainFields) {
+                context.mainFields = preferredMainFields[platform];
+            }
+        }
+        // TODO: We may be able to remove this in the future, it's doing no harm
+        // by staying here.
+        // Conditionally remap `react-native` to `react-native-web`
+        if (platform && platform in extraNodeModules) {
+            context.extraNodeModules = {
+                ...extraNodeModules[platform],
+                ...context.extraNodeModules
+            };
+        }
+        if ((tsconfig == null ? void 0 : tsconfig.baseUrl) && isTsconfigPathsEnabled) {
+            const nodeModulesPaths = [
+                ...immutableContext.nodeModulesPaths
+            ];
+            if (!nodeModulesPaths.length) {
+                nodeModulesPaths.push(_path.default.join(config.projectRoot, "node_modules"));
+            }
+            // add last to ensure node modules are resolved first
+            nodeModulesPaths.push(tsconfig.baseUrl);
+            context.nodeModulesPaths = nodeModulesPaths;
+        }
+        // TODO: We can drop this in the next version upgrade (SDK 50).
+        const mainFields = context.mainFields;
+        return {
+            ...context,
+            preferNativePlatform: platform !== "web",
+            // Passing `mainFields` directly won't be considered (in certain version of Metro)
+            // we need to extend the `getPackageMainPath` directly to
+            // use platform specific `mainFields`.
+            // @ts-ignore
+            getPackageMainPath (packageJsonPath) {
+                // @ts-expect-error: mainFields is not on type
+                const package_ = context.moduleCache.getPackage(packageJsonPath);
+                return package_.getMain(mainFields);
+            }
+        };
+    });
+    return (0, _withMetroResolvers).withMetroErrorReportingResolver(metroConfigWithCustomContext);
 }
 function shouldAliasAssetRegistryForWeb(platform, result) {
     return platform === "web" && (result == null ? void 0 : result.type) === "sourceFile" && typeof (result == null ? void 0 : result.filePath) === "string" && normalizeSlashes(result.filePath).endsWith("react-native-web/dist/modules/AssetRegistry/index.js");
@@ -313,7 +370,11 @@ function shouldAliasModule(input, alias) {
     var ref, ref3;
     return input.platform === alias.platform && ((ref = input.result) == null ? void 0 : ref.type) === "sourceFile" && typeof ((ref3 = input.result) == null ? void 0 : ref3.filePath) === "string" && normalizeSlashes(input.result.filePath).endsWith(alias.output);
 }
-async function withMetroMultiPlatformAsync(projectRoot, { config , platformBundlers , isTsconfigPathsEnabled , webOutput , routerDirectory , isFastResolverEnabled  }) {
+async function withMetroMultiPlatformAsync(projectRoot, { config , platformBundlers , isTsconfigPathsEnabled , webOutput , routerDirectory , isFastResolverEnabled , isExporting  }) {
+    if (!config.projectRoot) {
+        // @ts-expect-error: read-only types
+        config.projectRoot = projectRoot;
+    }
     // Auto pick app entry for router.
     process.env.EXPO_ROUTER_APP_ROOT = (0, _router).getAppRouterRelativeEntryPath(projectRoot, routerDirectory);
     var _EXPO_PUBLIC_PROJECT_ROOT;
@@ -326,6 +387,15 @@ async function withMetroMultiPlatformAsync(projectRoot, { config , platformBundl
         // Enable static rendering in runtime space.
         process.env.EXPO_PUBLIC_USE_STATIC = "1";
     }
+    // This is used for running Expo CLI in development against projects outside the monorepo.
+    if (!isDirectoryIn(__dirname, projectRoot)) {
+        if (!config.watchFolders) {
+            // @ts-expect-error: watchFolders is readonly
+            config.watchFolders = [];
+        }
+        // @ts-expect-error: watchFolders is readonly
+        config.watchFolders.push(_path.default.join(require.resolve("metro-runtime/package.json"), "../.."));
+    }
     // Ensure the cache is invalidated if these values change.
     // @ts-expect-error
     config.transformer._expoRouterRootDirectory = process.env.EXPO_ROUTER_APP_ROOT;
@@ -339,16 +409,8 @@ async function withMetroMultiPlatformAsync(projectRoot, { config , platformBundl
     if (isTsconfigPathsEnabled) {
         tsconfig = await (0, _loadTsConfigPaths).loadTsConfigPathsAsync(projectRoot);
     }
+    await (0, _externals).setupShimFiles(projectRoot);
     await (0, _externals).setupNodeExternals(projectRoot);
-    return withMetroMultiPlatform(projectRoot, {
-        config,
-        platformBundlers,
-        tsconfig,
-        isTsconfigPathsEnabled,
-        isFastResolverEnabled
-    });
-}
-function withMetroMultiPlatform(projectRoot, { config , platformBundlers , isTsconfigPathsEnabled , tsconfig , isFastResolverEnabled  }) {
     let expoConfigPlatforms = Object.entries(platformBundlers).filter(([, bundler])=>bundler === "metro"
     ).map(([platform])=>platform
     );
@@ -359,16 +421,17 @@ function withMetroMultiPlatform(projectRoot, { config , platformBundlers , isTsc
     }
     // @ts-expect-error: typed as `readonly`.
     config.resolver.platforms = expoConfigPlatforms;
-    if (expoConfigPlatforms.includes("web")) {
-        config = withWebPolyfills(config, projectRoot);
-    }
+    config = withWebPolyfills(config);
     return withExtendedResolver(config, {
-        projectRoot,
         tsconfig,
+        isExporting,
         isTsconfigPathsEnabled,
         platforms: expoConfigPlatforms,
         isFastResolverEnabled
     });
 }
+function isDirectoryIn(a, b) {
+    return b.startsWith(a) && b.length > a.length;
+}
 
 //# sourceMappingURL=withMetroMultiPlatform.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map
index 7dec8c3..42d6da5 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/withMetroMultiPlatform.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport { ConfigT } from 'metro-config';\nimport { Resolution, ResolutionContext } from 'metro-resolver';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { createFastResolver } from './createExpoMetroResolver';\nimport {\n  EXTERNAL_REQUIRE_NATIVE_POLYFILL,\n  EXTERNAL_REQUIRE_POLYFILL,\n  getNodeExternalModuleId,\n  isNodeExternal,\n  setupNodeExternals,\n} from './externals';\nimport { isFailedToResolveNameError, isFailedToResolvePathError } from './metroErrors';\nimport { importMetroResolverFromProject } from './resolveFromProject';\nimport { getAppRouterRelativeEntryPath } from './router';\nimport { withMetroResolvers } from './withMetroResolvers';\nimport { Log } from '../../../log';\nimport { FileNotifier } from '../../../utils/FileNotifier';\nimport { env } from '../../../utils/env';\nimport { installExitHooks } from '../../../utils/exit';\nimport { isInteractive } from '../../../utils/interactive';\nimport { loadTsConfigPathsAsync, TsConfigPaths } from '../../../utils/tsconfig/loadTsConfigPaths';\nimport { resolveWithTsConfigPaths } from '../../../utils/tsconfig/resolveWithTsConfigPaths';\nimport { WebSupportProjectPrerequisite } from '../../doctor/web/WebSupportProjectPrerequisite';\nimport { PlatformBundlers } from '../platformBundlers';\n\ntype Mutable<T> = { -readonly [K in keyof T]: T[K] };\n\nconst debug = require('debug')('expo:start:server:metro:multi-platform') as typeof console.log;\n\nfunction withWebPolyfills(config: ConfigT, projectRoot: string): ConfigT {\n  const originalGetPolyfills = config.serializer.getPolyfills\n    ? config.serializer.getPolyfills.bind(config.serializer)\n    : () => [];\n\n  const getPolyfills = (ctx: { platform: string | null }): readonly string[] => {\n    if (ctx.platform === 'web') {\n      return [\n        // NOTE: We might need this for all platforms\n        path.join(projectRoot, EXTERNAL_REQUIRE_POLYFILL),\n        // TODO: runtime polyfills, i.e. Fast Refresh, error overlay, React Dev Tools...\n      ];\n    }\n    // Generally uses `rn-get-polyfills`\n    const polyfills = originalGetPolyfills(ctx);\n\n    return [...polyfills, EXTERNAL_REQUIRE_NATIVE_POLYFILL];\n  };\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      getPolyfills,\n    },\n  };\n}\n\nfunction normalizeSlashes(p: string) {\n  return p.replace(/\\\\/g, '/');\n}\n\nexport function getNodejsExtensions(srcExts: readonly string[]): string[] {\n  const mjsExts = srcExts.filter((ext) => /mjs$/.test(ext));\n  const nodejsSourceExtensions = srcExts.filter((ext) => !/mjs$/.test(ext));\n  // find index of last `*.js` extension\n  const jsIndex = nodejsSourceExtensions.reduce((index, ext, i) => {\n    return /jsx?$/.test(ext) ? i : index;\n  }, -1);\n\n  // insert `*.mjs` extensions after `*.js` extensions\n  nodejsSourceExtensions.splice(jsIndex + 1, 0, ...mjsExts);\n\n  return nodejsSourceExtensions;\n}\n\n/**\n * Apply custom resolvers to do the following:\n * - Disable `.native.js` extensions on web.\n * - Alias `react-native` to `react-native-web` on web.\n * - Redirect `react-native-web/dist/modules/AssetRegistry/index.js` to `@react-native/assets/registry.js` on web.\n * - Add support for `tsconfig.json`/`jsconfig.json` aliases via `compilerOptions.paths`.\n */\nexport function withExtendedResolver(\n  config: ConfigT,\n  {\n    projectRoot,\n    tsconfig,\n    platforms,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n  }: {\n    projectRoot: string;\n    tsconfig: TsConfigPaths | null;\n    platforms: string[];\n    isTsconfigPathsEnabled?: boolean;\n    isFastResolverEnabled?: boolean;\n  }\n) {\n  if (isFastResolverEnabled) {\n    Log.warn(`Experimental bundling features are enabled.`);\n  }\n\n  // Get the `transformer.assetRegistryPath`\n  // this needs to be unified since you can't dynamically\n  // swap out the transformer based on platform.\n  const assetRegistryPath = fs.realpathSync(\n    // This is the native asset registry alias for native.\n    path.resolve(resolveFrom(projectRoot, 'react-native/Libraries/Image/AssetRegistry'))\n    // NOTE(EvanBacon): This is the newer import but it doesn't work in the expo/expo monorepo.\n    // path.resolve(resolveFrom(projectRoot, '@react-native/assets-registry/registry.js'))\n  );\n\n  let reactNativeWebAppContainer: string | null = null;\n  try {\n    reactNativeWebAppContainer = fs.realpathSync(\n      // This is the native asset registry alias for native.\n      path.resolve(resolveFrom(projectRoot, 'expo-router/build/fork/react-native-web-container'))\n      // NOTE(EvanBacon): This is the newer import but it doesn't work in the expo/expo monorepo.\n      // path.resolve(resolveFrom(projectRoot, '@react-native/assets/registry.js'))\n    );\n  } catch {}\n\n  const isWebEnabled = platforms.includes('web');\n\n  const resolver = isFastResolverEnabled\n    ? createFastResolver({ preserveSymlinks: config.resolver?.unstable_enableSymlinks ?? false })\n    : importMetroResolverFromProject(projectRoot).resolve;\n\n  const extraNodeModules: { [key: string]: Record<string, string> } = {};\n\n  const aliases: { [key: string]: Record<string, string> } = {\n    web: {\n      'react-native': 'react-native-web',\n      'react-native/index': 'react-native-web',\n    },\n  };\n\n  if (isWebEnabled) {\n    // Allow `react-native-web` to be optional when web is not enabled but path aliases is.\n    extraNodeModules['web'] = {\n      'react-native': path.resolve(require.resolve('react-native-web/package.json'), '..'),\n    };\n  }\n\n  const preferredMainFields: { [key: string]: string[] } = {\n    // Defaults from Expo Webpack. Most packages using `react-native` don't support web\n    // in the `react-native` field, so we should prefer the `browser` field.\n    // https://github.com/expo/router/issues/37\n    web: ['browser', 'module', 'main'],\n  };\n\n  let tsConfigResolve = tsconfig?.paths\n    ? resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n        paths: tsconfig.paths ?? {},\n        baseUrl: tsconfig.baseUrl,\n      })\n    : null;\n\n  if (isTsconfigPathsEnabled && isInteractive()) {\n    // TODO: We should track all the files that used imports and invalidate them\n    // currently the user will need to save all the files that use imports to\n    // use the new aliases.\n    const configWatcher = new FileNotifier(projectRoot, ['./tsconfig.json', './jsconfig.json']);\n    configWatcher.startObserving(() => {\n      debug('Reloading tsconfig.json');\n      loadTsConfigPathsAsync(projectRoot).then((tsConfigPaths) => {\n        if (tsConfigPaths?.paths && !!Object.keys(tsConfigPaths.paths).length) {\n          debug('Enabling tsconfig.json paths support');\n          tsConfigResolve = resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n            paths: tsConfigPaths.paths ?? {},\n            baseUrl: tsConfigPaths.baseUrl,\n          });\n        } else {\n          debug('Disabling tsconfig.json paths support');\n          tsConfigResolve = null;\n        }\n      });\n    });\n\n    // TODO: This probably prevents the process from exiting.\n    installExitHooks(() => {\n      configWatcher.stopObserving();\n    });\n  } else {\n    debug('Skipping tsconfig.json paths support');\n  }\n\n  let nodejsSourceExtensions: string[] | null = null;\n\n  const shimsFolder = path.join(require.resolve('@expo/cli/package.json'), '..', 'static/shims');\n\n  return withMetroResolvers(config, projectRoot, [\n    // Add a resolver to alias the web asset resolver.\n    (immutableContext: ResolutionContext, moduleName: string, platform: string | null) => {\n      let context = {\n        ...immutableContext,\n      } as Mutable<ResolutionContext> & {\n        mainFields: string[];\n        customResolverOptions?: Record<string, string>;\n      };\n\n      const environment = context.customResolverOptions?.environment;\n      const isNode = environment === 'node';\n\n      // TODO: We need to prevent the require.context from including API routes as these use externals.\n      // Should be fine after async routes lands.\n      if (isNode) {\n        const moduleId = isNodeExternal(moduleName);\n        if (moduleId) {\n          moduleName = getNodeExternalModuleId(context.originModulePath, moduleId);\n          debug(`Redirecting Node.js external \"${moduleId}\" to \"${moduleName}\"`);\n        }\n\n        // Adjust nodejs source extensions to sort mjs after js, including platform variants.\n        if (nodejsSourceExtensions === null) {\n          nodejsSourceExtensions = getNodejsExtensions(context.sourceExts);\n        }\n        context.sourceExts = nodejsSourceExtensions;\n      }\n\n      // Conditionally remap `react-native` to `react-native-web` on web in\n      // a way that doesn't require Babel to resolve the alias.\n      if (platform && platform in aliases && aliases[platform][moduleName]) {\n        moduleName = aliases[platform][moduleName];\n      }\n\n      // TODO: We may be able to remove this in the future, it's doing no harm\n      // by staying here.\n      // Conditionally remap `react-native` to `react-native-web`\n      if (platform && platform in extraNodeModules) {\n        context.extraNodeModules = {\n          ...extraNodeModules[platform],\n          ...context.extraNodeModules,\n        };\n      }\n\n      if (tsconfig?.baseUrl && isTsconfigPathsEnabled) {\n        context = {\n          ...context,\n          nodeModulesPaths: [\n            ...immutableContext.nodeModulesPaths,\n            // add last to ensure node modules are resolved first\n            tsconfig.baseUrl,\n          ],\n        };\n      }\n\n      let mainFields: string[] = context.mainFields;\n\n      if (isNode) {\n        // Node.js runtimes should only be importing main at the moment.\n        // This is a temporary fix until we can support the package.json exports.\n        mainFields = ['main', 'module'];\n      } else if (env.EXPO_METRO_NO_MAIN_FIELD_OVERRIDE) {\n        mainFields = context.mainFields;\n      } else if (platform && platform in preferredMainFields) {\n        mainFields = preferredMainFields[platform];\n      }\n      function doResolve(moduleName: string): Resolution | null {\n        return resolver(\n          {\n            ...context,\n            resolveRequest: undefined,\n            mainFields,\n            // Passing `mainFields` directly won't be considered (in certain version of Metro)\n            // we need to extend the `getPackageMainPath` directly to\n            // use platform specific `mainFields`.\n            // @ts-ignore\n            getPackageMainPath(packageJsonPath) {\n              // @ts-expect-error: mainFields is not on type\n              const package_ = context.moduleCache.getPackage(packageJsonPath);\n              return package_.getMain(mainFields);\n            },\n          },\n          moduleName,\n          platform\n        );\n      }\n\n      function optionalResolve(moduleName: string): Resolution | null {\n        try {\n          return doResolve(moduleName);\n        } catch (error) {\n          // If the error is directly related to a resolver not being able to resolve a module, then\n          // we can ignore the error and try the next resolver. Otherwise, we should throw the error.\n          const isResolutionError =\n            isFailedToResolveNameError(error) || isFailedToResolvePathError(error);\n          if (!isResolutionError) {\n            throw error;\n          }\n        }\n        return null;\n      }\n\n      let result: Resolution | null = null;\n\n      // React Native uses `event-target-shim` incorrectly and this causes the native runtime\n      // to fail to load. This is a temporary workaround until we can fix this upstream.\n      // https://github.com/facebook/react-native/pull/38628\n      if (\n        moduleName.includes('event-target-shim') &&\n        context.originModulePath.includes(path.sep + 'react-native' + path.sep)\n      ) {\n        context.sourceExts = context.sourceExts.filter((f) => !f.includes('mjs'));\n        debug('Skip mjs support for event-target-shim in:', context.originModulePath);\n      }\n\n      if (tsConfigResolve) {\n        result = tsConfigResolve(\n          {\n            originModulePath: context.originModulePath,\n            moduleName,\n          },\n          optionalResolve\n        );\n      }\n\n      if (\n        !isFastResolverEnabled &&\n        // is web\n        platform === 'web' &&\n        // Not server runtime\n        !isNode &&\n        // Is Node.js built-in\n        isNodeExternal(moduleName)\n      ) {\n        // Perform optional resolve first. If the module doesn't exist (no module in the node_modules)\n        // then we can mock the file to use an empty module.\n        result ??= optionalResolve(moduleName);\n\n        if (!result) {\n          // In this case, mock the file to use an empty module.\n          return {\n            type: 'empty',\n          };\n        }\n      }\n\n      result ??= doResolve(moduleName);\n\n      if (result?.type === 'sourceFile') {\n        // Replace the web resolver with the original one.\n        // This is basically an alias for web-only.\n        if (shouldAliasAssetRegistryForWeb(platform, result)) {\n          // @ts-expect-error: `readonly` for some reason.\n          result.filePath = assetRegistryPath;\n        }\n\n        // React Native Web adds a couple extra divs for no reason, these\n        // make static rendering much harder as we expect the root element to be `<html>`.\n        // This resolution will alias to a simple in-out component to avoid React Native web.\n        if (\n          // Only apply the transform if expo-router is present.\n          reactNativeWebAppContainer &&\n          shouldAliasModule(\n            {\n              platform,\n              result,\n            },\n            {\n              platform: 'web',\n              output: 'react-native-web/dist/exports/AppRegistry/AppContainer.js',\n            }\n          )\n        ) {\n          // @ts-expect-error: `readonly` for some reason.\n          result.filePath = reactNativeWebAppContainer;\n        } else if (platform === 'web' && result.filePath.includes('node_modules')) {\n          // Replace with static shims\n\n          const normalName = normalizeSlashes(result.filePath)\n            // Drop everything up until the `node_modules` folder.\n            .replace(/.*node_modules\\//, '');\n\n          const shimPath = path.join(shimsFolder, normalName);\n          if (fs.existsSync(shimPath)) {\n            // @ts-expect-error: `readonly` for some reason.\n            result.filePath = shimPath;\n          }\n        }\n      }\n      return result;\n    },\n  ]);\n}\n\n/** @returns `true` if the incoming resolution should be swapped on web. */\nexport function shouldAliasAssetRegistryForWeb(\n  platform: string | null,\n  result: Resolution\n): boolean {\n  return (\n    platform === 'web' &&\n    result?.type === 'sourceFile' &&\n    typeof result?.filePath === 'string' &&\n    normalizeSlashes(result.filePath).endsWith(\n      'react-native-web/dist/modules/AssetRegistry/index.js'\n    )\n  );\n}\n/** @returns `true` if the incoming resolution should be swapped. */\nexport function shouldAliasModule(\n  input: {\n    platform: string | null;\n    result: Resolution;\n  },\n  alias: { platform: string; output: string }\n): boolean {\n  return (\n    input.platform === alias.platform &&\n    input.result?.type === 'sourceFile' &&\n    typeof input.result?.filePath === 'string' &&\n    normalizeSlashes(input.result.filePath).endsWith(alias.output)\n  );\n}\n\n/** Add support for `react-native-web` and the Web platform. */\nexport async function withMetroMultiPlatformAsync(\n  projectRoot: string,\n  {\n    config,\n    platformBundlers,\n    isTsconfigPathsEnabled,\n    webOutput,\n    routerDirectory,\n    isFastResolverEnabled,\n  }: {\n    config: ConfigT;\n    isTsconfigPathsEnabled: boolean;\n    platformBundlers: PlatformBundlers;\n    webOutput?: 'single' | 'static' | 'server';\n    routerDirectory: string;\n    isFastResolverEnabled?: boolean;\n  }\n) {\n  // Auto pick app entry for router.\n  process.env.EXPO_ROUTER_APP_ROOT = getAppRouterRelativeEntryPath(projectRoot, routerDirectory);\n\n  // Required for @expo/metro-runtime to format paths in the web LogBox.\n  process.env.EXPO_PUBLIC_PROJECT_ROOT = process.env.EXPO_PUBLIC_PROJECT_ROOT ?? projectRoot;\n\n  if (['static', 'server'].includes(webOutput ?? '')) {\n    // Enable static rendering in runtime space.\n    process.env.EXPO_PUBLIC_USE_STATIC = '1';\n  }\n\n  // Ensure the cache is invalidated if these values change.\n  // @ts-expect-error\n  config.transformer._expoRouterRootDirectory = process.env.EXPO_ROUTER_APP_ROOT;\n  // @ts-expect-error\n  config.transformer._expoRouterWebRendering = webOutput;\n  // TODO: import mode\n\n  if (platformBundlers.web === 'metro') {\n    await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n  }\n\n  let tsconfig: null | TsConfigPaths = null;\n\n  if (isTsconfigPathsEnabled) {\n    tsconfig = await loadTsConfigPathsAsync(projectRoot);\n  }\n\n  await setupNodeExternals(projectRoot);\n\n  return withMetroMultiPlatform(projectRoot, {\n    config,\n    platformBundlers,\n    tsconfig,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n  });\n}\n\nfunction withMetroMultiPlatform(\n  projectRoot: string,\n  {\n    config,\n    platformBundlers,\n    isTsconfigPathsEnabled,\n    tsconfig,\n    isFastResolverEnabled,\n  }: {\n    config: ConfigT;\n    isTsconfigPathsEnabled: boolean;\n    platformBundlers: PlatformBundlers;\n    tsconfig: TsConfigPaths | null;\n    isFastResolverEnabled?: boolean;\n  }\n) {\n  let expoConfigPlatforms = Object.entries(platformBundlers)\n    .filter(([, bundler]) => bundler === 'metro')\n    .map(([platform]) => platform);\n\n  if (Array.isArray(config.resolver.platforms)) {\n    expoConfigPlatforms = [...new Set(expoConfigPlatforms.concat(config.resolver.platforms))];\n  }\n\n  // @ts-expect-error: typed as `readonly`.\n  config.resolver.platforms = expoConfigPlatforms;\n\n  if (expoConfigPlatforms.includes('web')) {\n    config = withWebPolyfills(config, projectRoot);\n  }\n\n  return withExtendedResolver(config, {\n    projectRoot,\n    tsconfig,\n    isTsconfigPathsEnabled,\n    platforms: expoConfigPlatforms,\n    isFastResolverEnabled,\n  });\n}\n"],"names":["getNodejsExtensions","withExtendedResolver","shouldAliasAssetRegistryForWeb","shouldAliasModule","withMetroMultiPlatformAsync","debug","require","withWebPolyfills","config","projectRoot","originalGetPolyfills","serializer","getPolyfills","bind","ctx","platform","path","join","EXTERNAL_REQUIRE_POLYFILL","polyfills","EXTERNAL_REQUIRE_NATIVE_POLYFILL","normalizeSlashes","p","replace","srcExts","mjsExts","filter","ext","test","nodejsSourceExtensions","jsIndex","reduce","index","i","splice","tsconfig","platforms","isTsconfigPathsEnabled","isFastResolverEnabled","Log","warn","assetRegistryPath","fs","realpathSync","resolve","resolveFrom","reactNativeWebAppContainer","isWebEnabled","includes","resolver","createFastResolver","preserveSymlinks","unstable_enableSymlinks","importMetroResolverFromProject","extraNodeModules","aliases","web","preferredMainFields","tsConfigResolve","paths","resolveWithTsConfigPaths","baseUrl","isInteractive","configWatcher","FileNotifier","startObserving","loadTsConfigPathsAsync","then","tsConfigPaths","Object","keys","length","installExitHooks","stopObserving","shimsFolder","withMetroResolvers","immutableContext","moduleName","context","environment","customResolverOptions","isNode","moduleId","isNodeExternal","getNodeExternalModuleId","originModulePath","sourceExts","nodeModulesPaths","mainFields","env","EXPO_METRO_NO_MAIN_FIELD_OVERRIDE","doResolve","resolveRequest","undefined","getPackageMainPath","packageJsonPath","package_","moduleCache","getPackage","getMain","optionalResolve","error","isResolutionError","isFailedToResolveNameError","isFailedToResolvePathError","result","sep","f","type","filePath","output","normalName","shimPath","existsSync","endsWith","input","alias","platformBundlers","webOutput","routerDirectory","process","EXPO_ROUTER_APP_ROOT","getAppRouterRelativeEntryPath","EXPO_PUBLIC_PROJECT_ROOT","EXPO_PUBLIC_USE_STATIC","transformer","_expoRouterRootDirectory","_expoRouterWebRendering","WebSupportProjectPrerequisite","assertAsync","setupNodeExternals","withMetroMultiPlatform","expoConfigPlatforms","entries","bundler","map","Array","isArray","Set","concat"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/withMetroMultiPlatform.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport { ConfigT } from 'metro-config';\nimport { Resolution, ResolutionContext, CustomResolutionContext } from 'metro-resolver';\nimport * as metroResolver from 'metro-resolver';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { createFastResolver } from './createExpoMetroResolver';\nimport {\n  EXTERNAL_REQUIRE_NATIVE_POLYFILL,\n  EXTERNAL_REQUIRE_POLYFILL,\n  METRO_SHIMS_FOLDER,\n  getNodeExternalModuleId,\n  isNodeExternal,\n  setupNodeExternals,\n  setupShimFiles,\n} from './externals';\nimport { isFailedToResolveNameError, isFailedToResolvePathError } from './metroErrors';\nimport { getAppRouterRelativeEntryPath } from './router';\nimport {\n  withMetroErrorReportingResolver,\n  withMetroMutatedResolverContext,\n  withMetroResolvers,\n} from './withMetroResolvers';\nimport { Log } from '../../../log';\nimport { FileNotifier } from '../../../utils/FileNotifier';\nimport { env } from '../../../utils/env';\nimport { installExitHooks } from '../../../utils/exit';\nimport { isInteractive } from '../../../utils/interactive';\nimport { loadTsConfigPathsAsync, TsConfigPaths } from '../../../utils/tsconfig/loadTsConfigPaths';\nimport { resolveWithTsConfigPaths } from '../../../utils/tsconfig/resolveWithTsConfigPaths';\nimport { WebSupportProjectPrerequisite } from '../../doctor/web/WebSupportProjectPrerequisite';\nimport { PlatformBundlers } from '../platformBundlers';\n\ntype Mutable<T> = { -readonly [K in keyof T]: T[K] };\n\nconst debug = require('debug')('expo:start:server:metro:multi-platform') as typeof console.log;\n\nfunction withWebPolyfills(config: ConfigT): ConfigT {\n  const originalGetPolyfills = config.serializer.getPolyfills\n    ? config.serializer.getPolyfills.bind(config.serializer)\n    : () => [];\n\n  const getPolyfills = (ctx: { platform: string | null }): readonly string[] => {\n    if (ctx.platform === 'web') {\n      return [\n        // NOTE: We might need this for all platforms\n        path.join(config.projectRoot, EXTERNAL_REQUIRE_POLYFILL),\n        // TODO: runtime polyfills, i.e. Fast Refresh, error overlay, React Dev Tools...\n      ];\n    }\n    // Generally uses `rn-get-polyfills`\n    const polyfills = originalGetPolyfills(ctx);\n\n    return [...polyfills, EXTERNAL_REQUIRE_NATIVE_POLYFILL];\n  };\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      getPolyfills,\n    },\n  };\n}\n\nfunction normalizeSlashes(p: string) {\n  return p.replace(/\\\\/g, '/');\n}\n\nexport function getNodejsExtensions(srcExts: readonly string[]): string[] {\n  const mjsExts = srcExts.filter((ext) => /mjs$/.test(ext));\n  const nodejsSourceExtensions = srcExts.filter((ext) => !/mjs$/.test(ext));\n  // find index of last `*.js` extension\n  const jsIndex = nodejsSourceExtensions.reduce((index, ext, i) => {\n    return /jsx?$/.test(ext) ? i : index;\n  }, -1);\n\n  // insert `*.mjs` extensions after `*.js` extensions\n  nodejsSourceExtensions.splice(jsIndex + 1, 0, ...mjsExts);\n\n  return nodejsSourceExtensions;\n}\n\n/**\n * Apply custom resolvers to do the following:\n * - Disable `.native.js` extensions on web.\n * - Alias `react-native` to `react-native-web` on web.\n * - Redirect `react-native-web/dist/modules/AssetRegistry/index.js` to `@react-native/assets/registry.js` on web.\n * - Add support for `tsconfig.json`/`jsconfig.json` aliases via `compilerOptions.paths`.\n */\nexport function withExtendedResolver(\n  config: ConfigT,\n  {\n    tsconfig,\n    platforms,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isExporting,\n  }: {\n    tsconfig: TsConfigPaths | null;\n    platforms: string[];\n    isTsconfigPathsEnabled?: boolean;\n    isFastResolverEnabled?: boolean;\n    isExporting?: boolean;\n  }\n) {\n  if (isFastResolverEnabled) {\n    Log.warn(`Experimental bundling features are enabled.`);\n  }\n\n  // Get the `transformer.assetRegistryPath`\n  // this needs to be unified since you can't dynamically\n  // swap out the transformer based on platform.\n  const assetRegistryPath = fs.realpathSync(\n    // This is the native asset registry alias for native.\n    path.resolve(resolveFrom(config.projectRoot, 'react-native/Libraries/Image/AssetRegistry'))\n    // NOTE(EvanBacon): This is the newer import but it doesn't work in the expo/expo monorepo.\n    // path.resolve(resolveFrom(projectRoot, '@react-native/assets-registry/registry.js'))\n  );\n\n  const defaultResolver = metroResolver.resolve;\n  const resolver = isFastResolverEnabled\n    ? createFastResolver({ preserveSymlinks: config.resolver?.unstable_enableSymlinks ?? false })\n    : defaultResolver;\n\n  const extraNodeModules: { [key: string]: Record<string, string> } = {};\n\n  const aliases: { [key: string]: Record<string, string> } = {\n    web: {\n      'react-native': 'react-native-web',\n      'react-native/index': 'react-native-web',\n    },\n  };\n\n  // TODO: We can probably drop this resolution hack.\n  const isWebEnabled = platforms.includes('web');\n  if (isWebEnabled) {\n    // Allow `react-native-web` to be optional when web is not enabled but path aliases is.\n    extraNodeModules['web'] = {\n      'react-native': path.resolve(require.resolve('react-native-web/package.json'), '..'),\n    };\n  }\n\n  const preferredMainFields: { [key: string]: string[] } = {\n    // Defaults from Expo Webpack. Most packages using `react-native` don't support web\n    // in the `react-native` field, so we should prefer the `browser` field.\n    // https://github.com/expo/router/issues/37\n    web: ['browser', 'module', 'main'],\n  };\n\n  let tsConfigResolve = tsconfig?.paths\n    ? resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n        paths: tsconfig.paths ?? {},\n        baseUrl: tsconfig.baseUrl,\n      })\n    : null;\n\n  // TODO: Move this to be a transform key for invalidation.\n  if (!isExporting && isInteractive()) {\n    if (isTsconfigPathsEnabled) {\n      // TODO: We should track all the files that used imports and invalidate them\n      // currently the user will need to save all the files that use imports to\n      // use the new aliases.\n      const configWatcher = new FileNotifier(config.projectRoot, [\n        './tsconfig.json',\n        './jsconfig.json',\n      ]);\n      configWatcher.startObserving(() => {\n        debug('Reloading tsconfig.json');\n        loadTsConfigPathsAsync(config.projectRoot).then((tsConfigPaths) => {\n          if (tsConfigPaths?.paths && !!Object.keys(tsConfigPaths.paths).length) {\n            debug('Enabling tsconfig.json paths support');\n            tsConfigResolve = resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n              paths: tsConfigPaths.paths ?? {},\n              baseUrl: tsConfigPaths.baseUrl,\n            });\n          } else {\n            debug('Disabling tsconfig.json paths support');\n            tsConfigResolve = null;\n          }\n        });\n      });\n\n      // TODO: This probably prevents the process from exiting.\n      installExitHooks(() => {\n        configWatcher.stopObserving();\n      });\n    } else {\n      debug('Skipping tsconfig.json paths support');\n    }\n  }\n\n  let nodejsSourceExtensions: string[] | null = null;\n\n  const shimsFolder = path.join(config.projectRoot, METRO_SHIMS_FOLDER);\n\n  function getStrictResolver(context: ResolutionContext, platform: string | null) {\n    const isNode = context.customResolverOptions?.environment === 'node';\n\n    return function doResolve(moduleName: string): Resolution {\n      // Workaround for Node.js having package exports enabled by default and\n      // the fast resolver not having package exports support yet.\n      const resolverToUse = isNode ? defaultResolver : resolver;\n      return resolverToUse(\n        {\n          ...context,\n          resolveRequest: undefined,\n        },\n        moduleName,\n        platform\n      );\n    };\n  }\n\n  function getOptionalResolver(context: ResolutionContext, platform: string | null) {\n    const doResolve = getStrictResolver(context, platform);\n    return function optionalResolve(moduleName: string): Resolution | null {\n      try {\n        return doResolve(moduleName);\n      } catch (error) {\n        // If the error is directly related to a resolver not being able to resolve a module, then\n        // we can ignore the error and try the next resolver. Otherwise, we should throw the error.\n        const isResolutionError =\n          isFailedToResolveNameError(error) || isFailedToResolvePathError(error);\n        if (!isResolutionError) {\n          throw error;\n        }\n      }\n      return null;\n    };\n  }\n\n  const metroConfigWithCustomResolver = withMetroResolvers(config, [\n    // tsconfig paths\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      return (\n        tsConfigResolve?.(\n          {\n            originModulePath: context.originModulePath,\n            moduleName,\n          },\n          getOptionalResolver(context, platform)\n        ) ?? null\n      );\n    },\n\n    // Node.js built-ins get empty externals on web\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      if (\n        isFastResolverEnabled ||\n        // is web\n        platform !== 'web' ||\n        // Skip when targeting server runtimes\n        context.customResolverOptions?.environment === 'node' ||\n        // This transform only applies to Node.js built-ins\n        !isNodeExternal(moduleName)\n      ) {\n        return null;\n      }\n\n      // Perform optional resolve first. If the module doesn't exist (no module in the node_modules)\n      // then we can mock the file to use an empty module.\n      const result = getOptionalResolver(context, platform)(moduleName);\n      return (\n        result ?? {\n          // In this case, mock the file to use an empty module.\n          type: 'empty',\n        }\n      );\n    },\n\n    // Node.js externals support\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      if (\n        // is web\n        platform !== 'web' ||\n        // Only apply to server runtimes\n        context.customResolverOptions?.environment !== 'node'\n      ) {\n        return null;\n      }\n\n      const moduleId = isNodeExternal(moduleName);\n      if (!moduleId) {\n        return null;\n      }\n      const redirectedModuleName = getNodeExternalModuleId(context.originModulePath, moduleId);\n      debug(`Redirecting Node.js external \"${moduleId}\" to \"${redirectedModuleName}\"`);\n      const doResolve = getStrictResolver(context, platform);\n      return doResolve(redirectedModuleName);\n    },\n\n    // Basic moduleId aliases\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // Conditionally remap `react-native` to `react-native-web` on web in\n      // a way that doesn't require Babel to resolve the alias.\n      if (platform && platform in aliases && aliases[platform][moduleName]) {\n        const redirectedModuleName = aliases[platform][moduleName];\n        const doResolve = getStrictResolver(context, platform);\n        return doResolve(redirectedModuleName);\n      }\n\n      return null;\n    },\n\n    // HACK(EvanBacon):\n    // React Native uses `event-target-shim` incorrectly and this causes the native runtime\n    // to fail to load. This is a temporary workaround until we can fix this upstream.\n    // https://github.com/facebook/react-native/pull/38628\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      if (platform !== 'web' && moduleName === 'event-target-shim') {\n        debug('For event-target-shim to use js:', context.originModulePath);\n        const doResolve = getStrictResolver(context, platform);\n        return doResolve('event-target-shim/dist/event-target-shim.js');\n      }\n\n      return null;\n    },\n\n    // TODO: Reduce these as much as possible in the future.\n    // Complex post-resolution rewrites.\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      const doResolve = getStrictResolver(context, platform);\n\n      const result = doResolve(moduleName);\n\n      if (result.type !== 'sourceFile') {\n        return result;\n      }\n\n      // Replace the web resolver with the original one.\n      // This is basically an alias for web-only.\n      // TODO: Drop this in favor of the standalone asset registry module.\n      if (shouldAliasAssetRegistryForWeb(platform, result)) {\n        // @ts-expect-error: `readonly` for some reason.\n        result.filePath = assetRegistryPath;\n      }\n\n      if (platform === 'web' && result.filePath.includes('node_modules')) {\n        // Replace with static shims\n\n        const normalName = normalizeSlashes(result.filePath)\n          // Drop everything up until the `node_modules` folder.\n          .replace(/.*node_modules\\//, '');\n\n        const shimPath = path.join(shimsFolder, normalName);\n        if (fs.existsSync(shimPath)) {\n          // @ts-expect-error: `readonly` for some reason.\n          result.filePath = shimPath;\n        }\n      }\n\n      return result;\n    },\n  ]);\n\n  // Ensure we mutate the resolution context to include the custom resolver options for server and web.\n  const metroConfigWithCustomContext = withMetroMutatedResolverContext(\n    metroConfigWithCustomResolver,\n    (\n      immutableContext: CustomResolutionContext,\n      moduleName: string,\n      platform: string | null\n    ): CustomResolutionContext => {\n      const context = {\n        ...immutableContext,\n      } as Mutable<ResolutionContext> & {\n        mainFields: string[];\n        customResolverOptions?: Record<string, string>;\n      };\n\n      if (context.customResolverOptions?.environment === 'node') {\n        // Adjust nodejs source extensions to sort mjs after js, including platform variants.\n        if (nodejsSourceExtensions === null) {\n          nodejsSourceExtensions = getNodejsExtensions(context.sourceExts);\n        }\n        context.sourceExts = nodejsSourceExtensions;\n\n        context.unstable_enablePackageExports = true;\n        context.unstable_conditionNames = ['node', 'require'];\n        // Node.js runtimes should only be importing main at the moment.\n        // This is a temporary fix until we can support the package.json exports.\n        context.mainFields = ['main', 'module'];\n      } else {\n        // Non-server changes\n\n        if (!env.EXPO_METRO_NO_MAIN_FIELD_OVERRIDE && platform && platform in preferredMainFields) {\n          context.mainFields = preferredMainFields[platform];\n        }\n      }\n\n      // TODO: We may be able to remove this in the future, it's doing no harm\n      // by staying here.\n      // Conditionally remap `react-native` to `react-native-web`\n      if (platform && platform in extraNodeModules) {\n        context.extraNodeModules = {\n          ...extraNodeModules[platform],\n          ...context.extraNodeModules,\n        };\n      }\n\n      if (tsconfig?.baseUrl && isTsconfigPathsEnabled) {\n        const nodeModulesPaths: string[] = [...immutableContext.nodeModulesPaths];\n\n        if (!nodeModulesPaths.length) {\n          nodeModulesPaths.push(path.join(config.projectRoot, 'node_modules'));\n        }\n\n        // add last to ensure node modules are resolved first\n        nodeModulesPaths.push(tsconfig.baseUrl);\n\n        context.nodeModulesPaths = nodeModulesPaths;\n      }\n\n      // TODO: We can drop this in the next version upgrade (SDK 50).\n      const mainFields: string[] = context.mainFields;\n\n      return {\n        ...context,\n        preferNativePlatform: platform !== 'web',\n        // Passing `mainFields` directly won't be considered (in certain version of Metro)\n        // we need to extend the `getPackageMainPath` directly to\n        // use platform specific `mainFields`.\n        // @ts-ignore\n        getPackageMainPath(packageJsonPath) {\n          // @ts-expect-error: mainFields is not on type\n          const package_ = context.moduleCache.getPackage(packageJsonPath);\n          return package_.getMain(mainFields);\n        },\n      };\n    }\n  );\n\n  return withMetroErrorReportingResolver(metroConfigWithCustomContext);\n}\n\n/** @returns `true` if the incoming resolution should be swapped on web. */\nexport function shouldAliasAssetRegistryForWeb(\n  platform: string | null,\n  result: Resolution\n): boolean {\n  return (\n    platform === 'web' &&\n    result?.type === 'sourceFile' &&\n    typeof result?.filePath === 'string' &&\n    normalizeSlashes(result.filePath).endsWith(\n      'react-native-web/dist/modules/AssetRegistry/index.js'\n    )\n  );\n}\n/** @returns `true` if the incoming resolution should be swapped. */\nexport function shouldAliasModule(\n  input: {\n    platform: string | null;\n    result: Resolution;\n  },\n  alias: { platform: string; output: string }\n): boolean {\n  return (\n    input.platform === alias.platform &&\n    input.result?.type === 'sourceFile' &&\n    typeof input.result?.filePath === 'string' &&\n    normalizeSlashes(input.result.filePath).endsWith(alias.output)\n  );\n}\n\n/** Add support for `react-native-web` and the Web platform. */\nexport async function withMetroMultiPlatformAsync(\n  projectRoot: string,\n  {\n    config,\n    platformBundlers,\n    isTsconfigPathsEnabled,\n    webOutput,\n    routerDirectory,\n    isFastResolverEnabled,\n    isExporting,\n  }: {\n    config: ConfigT;\n    isTsconfigPathsEnabled: boolean;\n    platformBundlers: PlatformBundlers;\n    webOutput?: 'single' | 'static' | 'server';\n    routerDirectory: string;\n    isFastResolverEnabled?: boolean;\n    isExporting?: boolean;\n  }\n) {\n  if (!config.projectRoot) {\n    // @ts-expect-error: read-only types\n    config.projectRoot = projectRoot;\n  }\n  // Auto pick app entry for router.\n  process.env.EXPO_ROUTER_APP_ROOT = getAppRouterRelativeEntryPath(projectRoot, routerDirectory);\n\n  // Required for @expo/metro-runtime to format paths in the web LogBox.\n  process.env.EXPO_PUBLIC_PROJECT_ROOT = process.env.EXPO_PUBLIC_PROJECT_ROOT ?? projectRoot;\n\n  if (['static', 'server'].includes(webOutput ?? '')) {\n    // Enable static rendering in runtime space.\n    process.env.EXPO_PUBLIC_USE_STATIC = '1';\n  }\n\n  // This is used for running Expo CLI in development against projects outside the monorepo.\n  if (!isDirectoryIn(__dirname, projectRoot)) {\n    if (!config.watchFolders) {\n      // @ts-expect-error: watchFolders is readonly\n      config.watchFolders = [];\n    }\n    // @ts-expect-error: watchFolders is readonly\n    config.watchFolders.push(path.join(require.resolve('metro-runtime/package.json'), '../..'));\n  }\n\n  // Ensure the cache is invalidated if these values change.\n  // @ts-expect-error\n  config.transformer._expoRouterRootDirectory = process.env.EXPO_ROUTER_APP_ROOT;\n  // @ts-expect-error\n  config.transformer._expoRouterWebRendering = webOutput;\n  // TODO: import mode\n\n  if (platformBundlers.web === 'metro') {\n    await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n  }\n\n  let tsconfig: null | TsConfigPaths = null;\n\n  if (isTsconfigPathsEnabled) {\n    tsconfig = await loadTsConfigPathsAsync(projectRoot);\n  }\n\n  await setupShimFiles(projectRoot);\n  await setupNodeExternals(projectRoot);\n\n  let expoConfigPlatforms = Object.entries(platformBundlers)\n    .filter(([, bundler]) => bundler === 'metro')\n    .map(([platform]) => platform);\n\n  if (Array.isArray(config.resolver.platforms)) {\n    expoConfigPlatforms = [...new Set(expoConfigPlatforms.concat(config.resolver.platforms))];\n  }\n\n  // @ts-expect-error: typed as `readonly`.\n  config.resolver.platforms = expoConfigPlatforms;\n\n  config = withWebPolyfills(config);\n\n  return withExtendedResolver(config, {\n    tsconfig,\n    isExporting,\n    isTsconfigPathsEnabled,\n    platforms: expoConfigPlatforms,\n    isFastResolverEnabled,\n  });\n}\n\nfunction isDirectoryIn(a: string, b: string) {\n  return b.startsWith(a) && b.length > a.length;\n}\n"],"names":["getNodejsExtensions","withExtendedResolver","shouldAliasAssetRegistryForWeb","shouldAliasModule","withMetroMultiPlatformAsync","metroResolver","debug","require","withWebPolyfills","config","originalGetPolyfills","serializer","getPolyfills","bind","ctx","platform","path","join","projectRoot","EXTERNAL_REQUIRE_POLYFILL","polyfills","EXTERNAL_REQUIRE_NATIVE_POLYFILL","normalizeSlashes","p","replace","srcExts","mjsExts","filter","ext","test","nodejsSourceExtensions","jsIndex","reduce","index","i","splice","tsconfig","platforms","isTsconfigPathsEnabled","isFastResolverEnabled","isExporting","Log","warn","assetRegistryPath","fs","realpathSync","resolve","resolveFrom","defaultResolver","resolver","createFastResolver","preserveSymlinks","unstable_enableSymlinks","extraNodeModules","aliases","web","isWebEnabled","includes","preferredMainFields","tsConfigResolve","paths","resolveWithTsConfigPaths","baseUrl","isInteractive","configWatcher","FileNotifier","startObserving","loadTsConfigPathsAsync","then","tsConfigPaths","Object","keys","length","installExitHooks","stopObserving","shimsFolder","METRO_SHIMS_FOLDER","getStrictResolver","context","isNode","customResolverOptions","environment","doResolve","moduleName","resolverToUse","resolveRequest","undefined","getOptionalResolver","optionalResolve","error","isResolutionError","isFailedToResolveNameError","isFailedToResolvePathError","metroConfigWithCustomResolver","withMetroResolvers","originModulePath","isNodeExternal","result","type","moduleId","redirectedModuleName","getNodeExternalModuleId","filePath","normalName","shimPath","existsSync","metroConfigWithCustomContext","withMetroMutatedResolverContext","immutableContext","sourceExts","unstable_enablePackageExports","unstable_conditionNames","mainFields","env","EXPO_METRO_NO_MAIN_FIELD_OVERRIDE","nodeModulesPaths","push","preferNativePlatform","getPackageMainPath","packageJsonPath","package_","moduleCache","getPackage","getMain","withMetroErrorReportingResolver","endsWith","input","alias","output","platformBundlers","webOutput","routerDirectory","process","EXPO_ROUTER_APP_ROOT","getAppRouterRelativeEntryPath","EXPO_PUBLIC_PROJECT_ROOT","EXPO_PUBLIC_USE_STATIC","isDirectoryIn","__dirname","watchFolders","transformer","_expoRouterRootDirectory","_expoRouterWebRendering","WebSupportProjectPrerequisite","assertAsync","setupShimFiles","setupNodeExternals","expoConfigPlatforms","entries","bundler","map","Array","isArray","Set","concat","a","b","startsWith"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js b/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js
index dbf8ba2..afc2528 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js
@@ -4,21 +4,43 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.getDefaultMetroResolver = getDefaultMetroResolver;
 exports.withMetroResolvers = withMetroResolvers;
+exports.withMetroMutatedResolverContext = withMetroMutatedResolverContext;
+exports.withMetroErrorReportingResolver = withMetroErrorReportingResolver;
 var _chalk = _interopRequireDefault(require("chalk"));
+var metroResolver = _interopRequireWildcard(require("metro-resolver"));
 var _path = _interopRequireDefault(require("path"));
 var _metroErrors = require("./metroErrors");
-var _resolveFromProject = require("./resolveFromProject");
 var _env = require("../../../utils/env");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
         default: obj
     };
 }
+function _interopRequireWildcard(obj) {
+    if (obj && obj.__esModule) {
+        return obj;
+    } else {
+        var newObj = {};
+        if (obj != null) {
+            for(var key in obj){
+                if (Object.prototype.hasOwnProperty.call(obj, key)) {
+                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
+                    if (desc.get || desc.set) {
+                        Object.defineProperty(newObj, key, desc);
+                    } else {
+                        newObj[key] = obj[key];
+                    }
+                }
+            }
+        }
+        newObj.default = obj;
+        return newObj;
+    }
+}
 const debug = require("debug")("expo:metro:withMetroResolvers");
 function getDefaultMetroResolver(projectRoot) {
-    const { resolve  } = (0, _resolveFromProject).importMetroResolverFromProject(projectRoot);
     return (context, moduleName, platform)=>{
-        return resolve(context, moduleName, platform);
+        return metroResolver.resolve(context, moduleName, platform);
     };
 }
 function optionsKeyForContext(context) {
@@ -27,13 +49,82 @@ function optionsKeyForContext(context) {
     // Compound key for the resolver cache
     return (ref = JSON.stringify((_customResolverOptions = context.customResolverOptions) != null ? _customResolverOptions : {}, canonicalize)) != null ? ref : "";
 }
-function withMetroResolvers(config, projectRoot, resolvers) {
-    var ref4, ref1;
-    debug(`Appending ${resolvers.length} custom resolvers to Metro config. (has custom resolver: ${!!((ref4 = config.resolver) == null ? void 0 : ref4.resolveRequest)})`);
-    const originalResolveRequest = ((ref1 = config.resolver) == null ? void 0 : ref1.resolveRequest) || getDefaultMetroResolver(projectRoot);
+function withMetroResolvers(config, resolvers) {
+    var ref, ref1;
+    debug(`Appending ${resolvers.length} custom resolvers to Metro config. (has custom resolver: ${!!((ref = config.resolver) == null ? void 0 : ref.resolveRequest)})`);
+    // const hasUserDefinedResolver = !!config.resolver?.resolveRequest;
+    // const defaultResolveRequest = getDefaultMetroResolver(projectRoot);
+    const originalResolveRequest = (ref1 = config.resolver) == null ? void 0 : ref1.resolveRequest;
+    return {
+        ...config,
+        resolver: {
+            ...config.resolver,
+            resolveRequest (context, moduleName1, platform1) {
+                const upstreamResolveRequest = context.resolveRequest;
+                const universalContext = {
+                    ...context,
+                    resolveRequest (ctx, moduleName, platform) {
+                        for (const resolver of resolvers){
+                            try {
+                                const res = resolver(ctx, moduleName, platform);
+                                if (res) {
+                                    return res;
+                                }
+                            } catch (error) {
+                                // If the error is directly related to a resolver not being able to resolve a module, then
+                                // we can ignore the error and try the next resolver. Otherwise, we should throw the error.
+                                const isResolutionError = (0, _metroErrors).isFailedToResolveNameError(error) || (0, _metroErrors).isFailedToResolvePathError(error);
+                                if (!isResolutionError) {
+                                    throw error;
+                                }
+                                debug(`Custom resolver threw: ${error.constructor.name}. (module: ${moduleName}, platform: ${platform})`);
+                            }
+                        }
+                        // If we haven't returned by now, use the original resolver or upstream resolver.
+                        return upstreamResolveRequest(ctx, moduleName, platform);
+                    }
+                };
+                // If the user defined a resolver, run it first and depend on the documented
+                // chaining logic: https://facebook.github.io/metro/docs/resolution/#resolution-algorithm
+                //
+                // config.resolver.resolveRequest = (context, moduleName, platform) => {
+                //
+                //  // Do work...
+                //
+                //  return context.resolveRequest(context, moduleName, platform);
+                // };
+                const firstResolver = originalResolveRequest != null ? originalResolveRequest : universalContext.resolveRequest;
+                return firstResolver(universalContext, moduleName1, platform1);
+            }
+        }
+    };
+}
+function withMetroMutatedResolverContext(config, getContext) {
+    var ref2;
+    const defaultResolveRequest = getDefaultMetroResolver(config.projectRoot);
+    const originalResolveRequest = (ref2 = config.resolver) == null ? void 0 : ref2.resolveRequest;
+    return {
+        ...config,
+        resolver: {
+            ...config.resolver,
+            resolveRequest (context, moduleName, platform) {
+                const universalContext = getContext(context, moduleName, platform);
+                var ref;
+                const firstResolver = (ref = originalResolveRequest != null ? originalResolveRequest : universalContext.resolveRequest) != null ? ref : defaultResolveRequest;
+                return firstResolver(universalContext, moduleName, platform);
+            }
+        }
+    };
+}
+function withMetroErrorReportingResolver(config) {
+    var ref4;
+    if (!_env.env.EXPO_METRO_UNSTABLE_ERRORS) {
+        return config;
+    }
+    const originalResolveRequest = (ref4 = config.resolver) == null ? void 0 : ref4.resolveRequest;
     function mutateResolutionError(error, context, moduleName, platform) {
         var ref;
-        if (!_env.env.EXPO_METRO_UNSTABLE_ERRORS || !platform) {
+        if (!platform) {
             debug("Cannot mutate resolution error");
             return error;
         }
@@ -67,8 +158,8 @@ function withMetroResolvers(config, projectRoot, resolvers) {
         const pad = (num)=>{
             return new Array(num).fill(" ").join("");
         };
-        var ref2, ref3;
-        const root = (ref3 = (ref2 = (ref = config.server) == null ? void 0 : ref.unstable_serverRoot) != null ? ref2 : config.projectRoot) != null ? ref3 : projectRoot;
+        var ref3;
+        const root = (ref3 = (ref = config.server) == null ? void 0 : ref.unstable_serverRoot) != null ? ref3 : config.projectRoot;
         const recurseBackWithLimit = (req, limit, count = 0)=>{
             const results = {
                 origin: req.origin,
@@ -142,7 +233,7 @@ function withMetroResolvers(config, projectRoot, resolvers) {
             ...config.resolver,
             resolveRequest (context, moduleName, platform) {
                 const storeResult = (res)=>{
-                    if (!_env.env.EXPO_METRO_UNSTABLE_ERRORS || !platform) return;
+                    if (!platform) return;
                     const key = optionsKeyForContext(context);
                     if (!depGraph.has(key)) depGraph.set(key, new Map());
                     const mapByTarget = depGraph.get(key);
@@ -156,39 +247,22 @@ function withMetroResolvers(config, projectRoot, resolvers) {
                         request: moduleName
                     });
                 };
-                const universalContext = {
-                    ...context,
-                    preferNativePlatform: platform !== "web"
-                };
+                // If the user defined a resolver, run it first and depend on the documented
+                // chaining logic: https://facebook.github.io/metro/docs/resolution/#resolution-algorithm
+                //
+                // config.resolver.resolveRequest = (context, moduleName, platform) => {
+                //
+                //  // Do work...
+                //
+                //  return context.resolveRequest(context, moduleName, platform);
+                // };
                 try {
-                    for (const resolver of resolvers){
-                        try {
-                            const resolution = resolver(universalContext, moduleName, platform);
-                            if (resolution) {
-                                storeResult(resolution);
-                                return resolution;
-                            }
-                        } catch (error) {
-                            // If no user-defined resolver, use Expo's default behavior.
-                            // This prevents extraneous resolution attempts on failure.
-                            if (!config.resolver.resolveRequest) {
-                                throw error;
-                            }
-                            // If the error is directly related to a resolver not being able to resolve a module, then
-                            // we can ignore the error and try the next resolver. Otherwise, we should throw the error.
-                            const isResolutionError = (0, _metroErrors).isFailedToResolveNameError(error) || (0, _metroErrors).isFailedToResolvePathError(error);
-                            if (!isResolutionError) {
-                                throw error;
-                            }
-                            debug(`Custom resolver threw: ${error.constructor.name}. (module: ${moduleName}, platform: ${platform})`);
-                        }
-                    }
-                    // If we haven't returned by now, use the original resolver or upstream resolver.
-                    const res = originalResolveRequest(universalContext, moduleName, platform);
+                    const firstResolver = originalResolveRequest != null ? originalResolveRequest : context.resolveRequest;
+                    const res = firstResolver(context, moduleName, platform);
                     storeResult(res);
                     return res;
                 } catch (error) {
-                    throw mutateResolutionError(error, universalContext, moduleName, platform);
+                    throw mutateResolutionError(error, context, moduleName, platform);
                 }
             }
         }
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js.map b/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js.map
index 69ae2ac..ac39dd9 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/withMetroResolvers.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/withMetroResolvers.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport chalk from 'chalk';\nimport { ConfigT as MetroConfig } from 'metro-config';\nimport { ResolutionContext } from 'metro-resolver';\nimport path from 'path';\n\nimport { isFailedToResolveNameError, isFailedToResolvePathError } from './metroErrors';\nimport { importMetroResolverFromProject } from './resolveFromProject';\nimport { env } from '../../../utils/env';\n\nconst debug = require('debug')('expo:metro:withMetroResolvers') as typeof console.log;\n\nexport type MetroResolver = NonNullable<MetroConfig['resolver']['resolveRequest']>;\n\n/** Expo Metro Resolvers can return `null` to skip without throwing an error. Metro Resolvers will throw either a `FailedToResolveNameError` or `FailedToResolvePathError`. */\nexport type ExpoCustomMetroResolver = (\n  ...args: Parameters<MetroResolver>\n) => ReturnType<MetroResolver> | null;\n\n/** @returns `MetroResolver` utilizing the upstream `resolve` method. */\nexport function getDefaultMetroResolver(projectRoot: string): MetroResolver {\n  const { resolve } = importMetroResolverFromProject(projectRoot);\n  return (context: ResolutionContext, moduleName: string, platform: string | null) => {\n    return resolve(context, moduleName, platform);\n  };\n}\n\nfunction optionsKeyForContext(context: ResolutionContext) {\n  const canonicalize = require('metro-core/src/canonicalize');\n\n  // Compound key for the resolver cache\n  return JSON.stringify(context.customResolverOptions ?? {}, canonicalize) ?? '';\n}\n\n/**\n * Extend the Metro config `resolver.resolveRequest` method with additional resolvers that can\n * exit early by returning a `Resolution` or skip to the next resolver by returning `null`.\n *\n * @param config Metro config.\n * @param projectRoot path to the project root used to resolve the default Metro resolver.\n * @param resolvers custom MetroResolver to chain.\n * @returns a new `MetroConfig` with the `resolver.resolveRequest` method chained.\n */\nexport function withMetroResolvers(\n  config: MetroConfig,\n  projectRoot: string,\n  resolvers: ExpoCustomMetroResolver[]\n): MetroConfig {\n  debug(\n    `Appending ${\n      resolvers.length\n    } custom resolvers to Metro config. (has custom resolver: ${!!config.resolver?.resolveRequest})`\n  );\n  const originalResolveRequest =\n    config.resolver?.resolveRequest || getDefaultMetroResolver(projectRoot);\n\n  function mutateResolutionError(\n    error: Error,\n    context: ResolutionContext,\n    moduleName: string,\n    platform: string | null\n  ) {\n    if (!env.EXPO_METRO_UNSTABLE_ERRORS || !platform) {\n      debug('Cannot mutate resolution error');\n      return error;\n    }\n\n    const mapByOrigin = depGraph.get(optionsKeyForContext(context));\n    const mapByPlatform = mapByOrigin?.get(platform);\n\n    if (!mapByPlatform) {\n      return error;\n    }\n\n    // collect all references inversely using some expensive lookup\n\n    const getReferences = (origin: string) => {\n      const inverseOrigin: { origin: string; previous: string; request: string }[] = [];\n\n      if (!mapByPlatform) {\n        return inverseOrigin;\n      }\n\n      for (const [originKey, mapByTarget] of mapByPlatform) {\n        // search comparing origin to path\n\n        const found = [...mapByTarget.values()].find((resolution) => resolution.path === origin);\n        if (found) {\n          inverseOrigin.push({\n            origin,\n            previous: originKey,\n            request: found.request,\n          });\n        }\n      }\n\n      return inverseOrigin;\n    };\n\n    const pad = (num: number) => {\n      return new Array(num).fill(' ').join('');\n    };\n\n    const root = config.server?.unstable_serverRoot ?? config.projectRoot ?? projectRoot;\n\n    type InverseDepResult = {\n      origin: string;\n      request: string;\n      previous: InverseDepResult[];\n    };\n    const recurseBackWithLimit = (\n      req: { origin: string; request: string },\n      limit: number,\n      count: number = 0\n    ) => {\n      const results: InverseDepResult = {\n        origin: req.origin,\n        request: req.request,\n        previous: [],\n      };\n\n      if (count >= limit) {\n        return results;\n      }\n\n      const inverse = getReferences(req.origin);\n      for (const match of inverse) {\n        // Use more qualified name if possible\n        // results.origin = match.origin;\n        // Found entry point\n        if (req.origin === match.previous) {\n          continue;\n        }\n        results.previous.push(\n          recurseBackWithLimit({ origin: match.previous, request: match.request }, limit, count + 1)\n        );\n      }\n      return results;\n    };\n\n    const inverseTree = recurseBackWithLimit(\n      { origin: context.originModulePath, request: moduleName },\n      // TODO: Do we need to expose this?\n      35\n    );\n\n    if (inverseTree.previous.length > 0) {\n      debug('Found inverse graph:', JSON.stringify(inverseTree, null, 2));\n      let extraMessage = chalk.bold('Import stack:');\n      const printRecursive = (tree: InverseDepResult, depth: number = 0) => {\n        let filename = path.relative(root, tree.origin);\n        if (filename.match(/\\?ctx=[\\w\\d]+$/)) {\n          filename = filename.replace(/\\?ctx=[\\w\\d]+$/, chalk.dim(' (require.context)'));\n        } else {\n          let formattedRequest = chalk.green(`\"${tree.request}\"`);\n\n          if (\n            // If bundling for web and the import is pulling internals from outside of react-native\n            // then mark it as an invalid import.\n            platform === 'web' &&\n            !/^(node_modules\\/)?react-native\\//.test(filename) &&\n            tree.request.match(/^react-native\\/.*/)\n          ) {\n            formattedRequest =\n              formattedRequest +\n              chalk`\\n          {yellow Importing react-native internals is not supported on web.}`;\n          }\n\n          filename = filename + chalk`\\n{gray  |} {cyan import} ${formattedRequest}\\n`;\n        }\n        let line = '\\n' + pad(depth) + chalk.gray(' ') + filename;\n        if (filename.match(/node_modules/)) {\n          line = chalk.gray(\n            // Bold the node module name\n            line.replace(/node_modules\\/([^/]+)/, (_match, p1) => {\n              return 'node_modules/' + chalk.bold(p1);\n            })\n          );\n        }\n        extraMessage += line;\n        for (const child of tree.previous) {\n          printRecursive(\n            child,\n            // Only add depth if there are multiple children\n            tree.previous.length > 1 ? depth + 1 : depth\n          );\n        }\n      };\n      printRecursive(inverseTree);\n\n      // @ts-expect-error\n      error._expoImportStack = extraMessage;\n    } else {\n      debug('Found no inverse tree for:', context.originModulePath);\n    }\n\n    return error;\n  }\n\n  const depGraph: Map<\n    // custom options\n    string,\n    Map<\n      // platform\n      string,\n      Map<\n        // origin module name\n        string,\n        Set<{\n          // required module name\n          path: string;\n          // This isn't entirely accurate since a module can be imported multiple times in a file,\n          // and use different names. But it's good enough for now.\n          request: string;\n        }>\n      >\n    >\n  > = new Map();\n\n  return {\n    ...config,\n    resolver: {\n      ...config.resolver,\n      resolveRequest(context, moduleName, platform) {\n        const storeResult = (res: NonNullable<ReturnType<ExpoCustomMetroResolver>>) => {\n          if (!env.EXPO_METRO_UNSTABLE_ERRORS || !platform) return;\n\n          const key = optionsKeyForContext(context);\n          if (!depGraph.has(key)) depGraph.set(key, new Map());\n          const mapByTarget = depGraph.get(key);\n          if (!mapByTarget!.has(platform)) mapByTarget!.set(platform, new Map());\n          const mapByPlatform = mapByTarget!.get(platform);\n          if (!mapByPlatform!.has(context.originModulePath))\n            mapByPlatform!.set(context.originModulePath, new Set());\n          const setForModule = mapByPlatform!.get(context.originModulePath)!;\n\n          const qualifiedModuleName = res?.type === 'sourceFile' ? res.filePath : moduleName;\n          setForModule.add({ path: qualifiedModuleName, request: moduleName });\n        };\n\n        const universalContext = {\n          ...context,\n          preferNativePlatform: platform !== 'web',\n        };\n\n        try {\n          for (const resolver of resolvers) {\n            try {\n              const resolution = resolver(universalContext, moduleName, platform);\n              if (resolution) {\n                storeResult(resolution);\n                return resolution;\n              }\n            } catch (error: any) {\n              // If no user-defined resolver, use Expo's default behavior.\n              // This prevents extraneous resolution attempts on failure.\n              if (!config.resolver.resolveRequest) {\n                throw error;\n              }\n\n              // If the error is directly related to a resolver not being able to resolve a module, then\n              // we can ignore the error and try the next resolver. Otherwise, we should throw the error.\n              const isResolutionError =\n                isFailedToResolveNameError(error) || isFailedToResolvePathError(error);\n              if (!isResolutionError) {\n                throw error;\n              }\n              debug(\n                `Custom resolver threw: ${error.constructor.name}. (module: ${moduleName}, platform: ${platform})`\n              );\n            }\n          }\n          // If we haven't returned by now, use the original resolver or upstream resolver.\n          const res = originalResolveRequest(universalContext, moduleName, platform);\n          storeResult(res);\n          return res;\n        } catch (error: any) {\n          throw mutateResolutionError(error, universalContext, moduleName, platform);\n        }\n      },\n    },\n  };\n}\n"],"names":["getDefaultMetroResolver","withMetroResolvers","debug","require","projectRoot","resolve","importMetroResolverFromProject","context","moduleName","platform","optionsKeyForContext","canonicalize","JSON","stringify","customResolverOptions","config","resolvers","length","resolver","resolveRequest","originalResolveRequest","mutateResolutionError","error","env","EXPO_METRO_UNSTABLE_ERRORS","mapByOrigin","depGraph","get","mapByPlatform","getReferences","origin","inverseOrigin","originKey","mapByTarget","found","values","find","resolution","path","push","previous","request","pad","num","Array","fill","join","root","server","unstable_serverRoot","recurseBackWithLimit","req","limit","count","results","inverse","match","inverseTree","originModulePath","extraMessage","chalk","bold","printRecursive","tree","depth","filename","relative","replace","dim","formattedRequest","green","test","line","gray","_match","p1","child","_expoImportStack","Map","storeResult","res","key","has","set","Set","setForModule","qualifiedModuleName","type","filePath","add","universalContext","preferNativePlatform","isResolutionError","isFailedToResolveNameError","isFailedToResolvePathError","constructor","name"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/withMetroResolvers.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport chalk from 'chalk';\nimport { ConfigT as MetroConfig } from 'metro-config';\nimport type { ResolutionContext, CustomResolutionContext } from 'metro-resolver';\nimport * as metroResolver from 'metro-resolver';\nimport path from 'path';\n\nimport { isFailedToResolveNameError, isFailedToResolvePathError } from './metroErrors';\nimport { env } from '../../../utils/env';\n\nconst debug = require('debug')('expo:metro:withMetroResolvers') as typeof console.log;\n\nexport type MetroResolver = NonNullable<MetroConfig['resolver']['resolveRequest']>;\n\n/** Expo Metro Resolvers can return `null` to skip without throwing an error. Metro Resolvers will throw either a `FailedToResolveNameError` or `FailedToResolvePathError`. */\nexport type ExpoCustomMetroResolver = (\n  ...args: Parameters<MetroResolver>\n) => ReturnType<MetroResolver> | null;\n\n/** @returns `MetroResolver` utilizing the upstream `resolve` method. */\nexport function getDefaultMetroResolver(projectRoot: string): MetroResolver {\n  return (context: ResolutionContext, moduleName: string, platform: string | null) => {\n    return metroResolver.resolve(context, moduleName, platform);\n  };\n}\n\nfunction optionsKeyForContext(context: ResolutionContext) {\n  const canonicalize = require('metro-core/src/canonicalize');\n\n  // Compound key for the resolver cache\n  return JSON.stringify(context.customResolverOptions ?? {}, canonicalize) ?? '';\n}\n\n/**\n * Extend the Metro config `resolver.resolveRequest` method with additional resolvers that can\n * exit early by returning a `Resolution` or skip to the next resolver by returning `null`.\n *\n * @param config Metro config.\n * @param resolvers custom MetroResolver to chain.\n * @returns a new `MetroConfig` with the `resolver.resolveRequest` method chained.\n */\nexport function withMetroResolvers(\n  config: MetroConfig,\n  resolvers: ExpoCustomMetroResolver[]\n): MetroConfig {\n  debug(\n    `Appending ${\n      resolvers.length\n    } custom resolvers to Metro config. (has custom resolver: ${!!config.resolver?.resolveRequest})`\n  );\n  // const hasUserDefinedResolver = !!config.resolver?.resolveRequest;\n  // const defaultResolveRequest = getDefaultMetroResolver(projectRoot);\n  const originalResolveRequest = config.resolver?.resolveRequest;\n\n  return {\n    ...config,\n    resolver: {\n      ...config.resolver,\n      resolveRequest(context, moduleName, platform) {\n        const upstreamResolveRequest = context.resolveRequest;\n\n        const universalContext = {\n          ...context,\n          resolveRequest(\n            ctx: CustomResolutionContext,\n            moduleName: string,\n            platform: string | null\n          ) {\n            for (const resolver of resolvers) {\n              try {\n                const res = resolver(ctx, moduleName, platform);\n                if (res) {\n                  return res;\n                }\n              } catch (error: any) {\n                // If the error is directly related to a resolver not being able to resolve a module, then\n                // we can ignore the error and try the next resolver. Otherwise, we should throw the error.\n                const isResolutionError =\n                  isFailedToResolveNameError(error) || isFailedToResolvePathError(error);\n                if (!isResolutionError) {\n                  throw error;\n                }\n                debug(\n                  `Custom resolver threw: ${error.constructor.name}. (module: ${moduleName}, platform: ${platform})`\n                );\n              }\n            }\n            // If we haven't returned by now, use the original resolver or upstream resolver.\n            return upstreamResolveRequest(ctx, moduleName, platform);\n          },\n        };\n\n        // If the user defined a resolver, run it first and depend on the documented\n        // chaining logic: https://facebook.github.io/metro/docs/resolution/#resolution-algorithm\n        //\n        // config.resolver.resolveRequest = (context, moduleName, platform) => {\n        //\n        //  // Do work...\n        //\n        //  return context.resolveRequest(context, moduleName, platform);\n        // };\n        const firstResolver = originalResolveRequest ?? universalContext.resolveRequest;\n        return firstResolver(universalContext, moduleName, platform);\n      },\n    },\n  };\n}\n\n/**\n * Hook into the Metro resolver chain and mutate the context so users can resolve against our custom assumptions.\n * For example, this will set `preferNativePlatform` to false when bundling for web.\n * */\nexport function withMetroMutatedResolverContext(\n  config: MetroConfig,\n  getContext: (\n    ctx: CustomResolutionContext,\n    moduleName: string,\n    platform: string | null\n  ) => CustomResolutionContext\n): MetroConfig {\n  const defaultResolveRequest = getDefaultMetroResolver(config.projectRoot);\n  const originalResolveRequest = config.resolver?.resolveRequest;\n\n  return {\n    ...config,\n    resolver: {\n      ...config.resolver,\n      resolveRequest(context, moduleName, platform) {\n        const universalContext = getContext(context, moduleName, platform);\n        const firstResolver =\n          originalResolveRequest ?? universalContext.resolveRequest ?? defaultResolveRequest;\n        return firstResolver(universalContext, moduleName, platform);\n      },\n    },\n  };\n}\n\nexport function withMetroErrorReportingResolver(config: MetroConfig): MetroConfig {\n  if (!env.EXPO_METRO_UNSTABLE_ERRORS) {\n    return config;\n  }\n\n  const originalResolveRequest = config.resolver?.resolveRequest;\n\n  function mutateResolutionError(\n    error: Error,\n    context: ResolutionContext,\n    moduleName: string,\n    platform: string | null\n  ) {\n    if (!platform) {\n      debug('Cannot mutate resolution error');\n      return error;\n    }\n\n    const mapByOrigin = depGraph.get(optionsKeyForContext(context));\n    const mapByPlatform = mapByOrigin?.get(platform);\n\n    if (!mapByPlatform) {\n      return error;\n    }\n\n    // collect all references inversely using some expensive lookup\n\n    const getReferences = (origin: string) => {\n      const inverseOrigin: { origin: string; previous: string; request: string }[] = [];\n\n      if (!mapByPlatform) {\n        return inverseOrigin;\n      }\n\n      for (const [originKey, mapByTarget] of mapByPlatform) {\n        // search comparing origin to path\n\n        const found = [...mapByTarget.values()].find((resolution) => resolution.path === origin);\n        if (found) {\n          inverseOrigin.push({\n            origin,\n            previous: originKey,\n            request: found.request,\n          });\n        }\n      }\n\n      return inverseOrigin;\n    };\n\n    const pad = (num: number) => {\n      return new Array(num).fill(' ').join('');\n    };\n\n    const root = config.server?.unstable_serverRoot ?? config.projectRoot;\n\n    type InverseDepResult = {\n      origin: string;\n      request: string;\n      previous: InverseDepResult[];\n    };\n    const recurseBackWithLimit = (\n      req: { origin: string; request: string },\n      limit: number,\n      count: number = 0\n    ) => {\n      const results: InverseDepResult = {\n        origin: req.origin,\n        request: req.request,\n        previous: [],\n      };\n\n      if (count >= limit) {\n        return results;\n      }\n\n      const inverse = getReferences(req.origin);\n      for (const match of inverse) {\n        // Use more qualified name if possible\n        // results.origin = match.origin;\n        // Found entry point\n        if (req.origin === match.previous) {\n          continue;\n        }\n        results.previous.push(\n          recurseBackWithLimit({ origin: match.previous, request: match.request }, limit, count + 1)\n        );\n      }\n      return results;\n    };\n\n    const inverseTree = recurseBackWithLimit(\n      { origin: context.originModulePath, request: moduleName },\n      // TODO: Do we need to expose this?\n      35\n    );\n\n    if (inverseTree.previous.length > 0) {\n      debug('Found inverse graph:', JSON.stringify(inverseTree, null, 2));\n      let extraMessage = chalk.bold('Import stack:');\n      const printRecursive = (tree: InverseDepResult, depth: number = 0) => {\n        let filename = path.relative(root, tree.origin);\n        if (filename.match(/\\?ctx=[\\w\\d]+$/)) {\n          filename = filename.replace(/\\?ctx=[\\w\\d]+$/, chalk.dim(' (require.context)'));\n        } else {\n          let formattedRequest = chalk.green(`\"${tree.request}\"`);\n\n          if (\n            // If bundling for web and the import is pulling internals from outside of react-native\n            // then mark it as an invalid import.\n            platform === 'web' &&\n            !/^(node_modules\\/)?react-native\\//.test(filename) &&\n            tree.request.match(/^react-native\\/.*/)\n          ) {\n            formattedRequest =\n              formattedRequest +\n              chalk`\\n          {yellow Importing react-native internals is not supported on web.}`;\n          }\n\n          filename = filename + chalk`\\n{gray  |} {cyan import} ${formattedRequest}\\n`;\n        }\n        let line = '\\n' + pad(depth) + chalk.gray(' ') + filename;\n        if (filename.match(/node_modules/)) {\n          line = chalk.gray(\n            // Bold the node module name\n            line.replace(/node_modules\\/([^/]+)/, (_match, p1) => {\n              return 'node_modules/' + chalk.bold(p1);\n            })\n          );\n        }\n        extraMessage += line;\n        for (const child of tree.previous) {\n          printRecursive(\n            child,\n            // Only add depth if there are multiple children\n            tree.previous.length > 1 ? depth + 1 : depth\n          );\n        }\n      };\n      printRecursive(inverseTree);\n\n      // @ts-expect-error\n      error._expoImportStack = extraMessage;\n    } else {\n      debug('Found no inverse tree for:', context.originModulePath);\n    }\n\n    return error;\n  }\n\n  const depGraph: Map<\n    // custom options\n    string,\n    Map<\n      // platform\n      string,\n      Map<\n        // origin module name\n        string,\n        Set<{\n          // required module name\n          path: string;\n          // This isn't entirely accurate since a module can be imported multiple times in a file,\n          // and use different names. But it's good enough for now.\n          request: string;\n        }>\n      >\n    >\n  > = new Map();\n\n  return {\n    ...config,\n    resolver: {\n      ...config.resolver,\n      resolveRequest(context, moduleName, platform) {\n        const storeResult = (res: NonNullable<ReturnType<ExpoCustomMetroResolver>>) => {\n          if (!platform) return;\n\n          const key = optionsKeyForContext(context);\n          if (!depGraph.has(key)) depGraph.set(key, new Map());\n          const mapByTarget = depGraph.get(key);\n          if (!mapByTarget!.has(platform)) mapByTarget!.set(platform, new Map());\n          const mapByPlatform = mapByTarget!.get(platform);\n          if (!mapByPlatform!.has(context.originModulePath))\n            mapByPlatform!.set(context.originModulePath, new Set());\n          const setForModule = mapByPlatform!.get(context.originModulePath)!;\n\n          const qualifiedModuleName = res?.type === 'sourceFile' ? res.filePath : moduleName;\n          setForModule.add({ path: qualifiedModuleName, request: moduleName });\n        };\n\n        // If the user defined a resolver, run it first and depend on the documented\n        // chaining logic: https://facebook.github.io/metro/docs/resolution/#resolution-algorithm\n        //\n        // config.resolver.resolveRequest = (context, moduleName, platform) => {\n        //\n        //  // Do work...\n        //\n        //  return context.resolveRequest(context, moduleName, platform);\n        // };\n        try {\n          const firstResolver = originalResolveRequest ?? context.resolveRequest;\n          const res = firstResolver(context, moduleName, platform);\n          storeResult(res);\n          return res;\n        } catch (error: any) {\n          throw mutateResolutionError(error, context, moduleName, platform);\n        }\n      },\n    },\n  };\n}\n"],"names":["getDefaultMetroResolver","withMetroResolvers","withMetroMutatedResolverContext","withMetroErrorReportingResolver","metroResolver","debug","require","projectRoot","context","moduleName","platform","resolve","optionsKeyForContext","canonicalize","JSON","stringify","customResolverOptions","config","resolvers","length","resolver","resolveRequest","originalResolveRequest","upstreamResolveRequest","universalContext","ctx","res","error","isResolutionError","isFailedToResolveNameError","isFailedToResolvePathError","constructor","name","firstResolver","getContext","defaultResolveRequest","env","EXPO_METRO_UNSTABLE_ERRORS","mutateResolutionError","mapByOrigin","depGraph","get","mapByPlatform","getReferences","origin","inverseOrigin","originKey","mapByTarget","found","values","find","resolution","path","push","previous","request","pad","num","Array","fill","join","root","server","unstable_serverRoot","recurseBackWithLimit","req","limit","count","results","inverse","match","inverseTree","originModulePath","extraMessage","chalk","bold","printRecursive","tree","depth","filename","relative","replace","dim","formattedRequest","green","test","line","gray","_match","p1","child","_expoImportStack","Map","storeResult","key","has","set","Set","setForModule","qualifiedModuleName","type","filePath","add"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js
new file mode 100644
index 0000000..4e4707d
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js
@@ -0,0 +1,61 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+Object.defineProperty(exports, "DevToolsPluginEndpoint", {
+    enumerable: true,
+    get: function() {
+        return _devToolsPluginManager.DevToolsPluginEndpoint;
+    }
+});
+var _assert = _interopRequireDefault(require("assert"));
+var _send = _interopRequireDefault(require("send"));
+var _expoMiddleware = require("./ExpoMiddleware");
+var _devToolsPluginManager = require("../DevToolsPluginManager");
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
+class DevToolsPluginMiddleware extends _expoMiddleware.ExpoMiddleware {
+    constructor(projectRoot, pluginManager){
+        super(projectRoot, [
+            _devToolsPluginManager.DevToolsPluginEndpoint
+        ]);
+        this.pluginManager = pluginManager;
+    }
+    shouldHandleRequest(req) {
+        var ref;
+        if (!((ref = req.url) == null ? void 0 : ref.startsWith(_devToolsPluginManager.DevToolsPluginEndpoint))) {
+            return false;
+        }
+        return true;
+    }
+    async handleRequestAsync(req, res) {
+        (0, _assert).default(req.headers.host, "Request headers must include host");
+        var _url;
+        const { pathname  } = new URL((_url = req.url) != null ? _url : "/", `http://${req.headers.host}`);
+        const pluginName = this.queryPossiblePluginName(pathname.substring(_devToolsPluginManager.DevToolsPluginEndpoint.length + 1));
+        const webpageRoot = await this.pluginManager.queryPluginWebpageRootAsync(pluginName);
+        if (!webpageRoot) {
+            res.statusCode = 404;
+            res.end();
+            return;
+        }
+        const pathInPluginRoot = pathname.substring(_devToolsPluginManager.DevToolsPluginEndpoint.length + pluginName.length + 1) || "/";
+        (0, _send).default(req, pathInPluginRoot, {
+            root: webpageRoot
+        }).pipe(res);
+    }
+    queryPossiblePluginName(pathname) {
+        const parts = pathname.split("/");
+        if (parts[0][0] === "@" && parts.length > 1) {
+            // Scoped package name
+            return `${parts[0]}/${parts[1]}`;
+        }
+        return parts[0];
+    }
+}
+exports.DevToolsPluginMiddleware = DevToolsPluginMiddleware;
+
+//# sourceMappingURL=DevToolsPluginMiddleware.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js.map b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js.map
new file mode 100644
index 0000000..caeb465
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../../../src/start/server/middleware/DevToolsPluginMiddleware.ts"],"sourcesContent":["import assert from 'assert';\nimport send from 'send';\n\nimport { ExpoMiddleware } from './ExpoMiddleware';\nimport { ServerRequest, ServerResponse } from './server.types';\nimport DevToolsPluginManager, { DevToolsPluginEndpoint } from '../DevToolsPluginManager';\n\nexport { DevToolsPluginEndpoint };\n\nexport class DevToolsPluginMiddleware extends ExpoMiddleware {\n  constructor(\n    projectRoot: string,\n    private readonly pluginManager: DevToolsPluginManager\n  ) {\n    super(projectRoot, [DevToolsPluginEndpoint]);\n  }\n\n  override shouldHandleRequest(req: ServerRequest): boolean {\n    if (!req.url?.startsWith(DevToolsPluginEndpoint)) {\n      return false;\n    }\n    return true;\n  }\n\n  async handleRequestAsync(req: ServerRequest, res: ServerResponse): Promise<void> {\n    assert(req.headers.host, 'Request headers must include host');\n    const { pathname } = new URL(req.url ?? '/', `http://${req.headers.host}`);\n    const pluginName = this.queryPossiblePluginName(\n      pathname.substring(DevToolsPluginEndpoint.length + 1)\n    );\n    const webpageRoot = await this.pluginManager.queryPluginWebpageRootAsync(pluginName);\n    if (!webpageRoot) {\n      res.statusCode = 404;\n      res.end();\n      return;\n    }\n\n    const pathInPluginRoot =\n      pathname.substring(DevToolsPluginEndpoint.length + pluginName.length + 1) || '/';\n    send(req, pathInPluginRoot, { root: webpageRoot }).pipe(res);\n  }\n\n  private queryPossiblePluginName(pathname: string): string {\n    const parts = pathname.split('/');\n    if (parts[0][0] === '@' && parts.length > 1) {\n      // Scoped package name\n      return `${parts[0]}/${parts[1]}`;\n    }\n    return parts[0];\n  }\n}\n"],"names":["DevToolsPluginEndpoint","DevToolsPluginMiddleware","ExpoMiddleware","constructor","projectRoot","pluginManager","shouldHandleRequest","req","url","startsWith","handleRequestAsync","res","assert","headers","host","pathname","URL","pluginName","queryPossiblePluginName","substring","length","webpageRoot","queryPluginWebpageRootAsync","statusCode","end","pathInPluginRoot","send","root","pipe","parts","split"],"mappings":"AAAA;;;;+BAOSA,wBAAsB;;;eAAtBA,sBAAsB,uBAAA;;;AAPZ,IAAA,OAAQ,kCAAR,QAAQ,EAAA;AACV,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEQ,IAAA,eAAkB,WAAlB,kBAAkB,CAAA;AAEa,IAAA,sBAA0B,WAA1B,0BAA0B,CAAA;;;;;;AAIjF,MAAMC,wBAAwB,SAASC,eAAc,eAAA;IAC1DC,YACEC,WAAmB,EACFC,aAAoC,CACrD;QACA,KAAK,CAACD,WAAW,EAAE;YAACJ,sBAAsB,uBAAA;SAAC,CAAC,CAAC;aAF5BK,aAAoC,GAApCA,aAAoC;KAGtD;IAED,AAASC,mBAAmB,CAACC,GAAkB,EAAW;YACnDA,GAAO;QAAZ,IAAI,EAACA,CAAAA,GAAO,GAAPA,GAAG,CAACC,GAAG,SAAY,GAAnBD,KAAAA,CAAmB,GAAnBA,GAAO,CAAEE,UAAU,CAACT,sBAAsB,uBAAA,CAAC,CAAA,EAAE;YAChD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IAED,MAAMU,kBAAkB,CAACH,GAAkB,EAAEI,GAAmB,EAAiB;QAC/EC,CAAAA,GAAAA,OAAM,AAAuD,CAAA,QAAvD,CAACL,GAAG,CAACM,OAAO,CAACC,IAAI,EAAE,mCAAmC,CAAC,CAAC;YACjCP,IAAO;QAApC,MAAM,EAAEQ,QAAQ,CAAA,EAAE,GAAG,IAAIC,GAAG,CAACT,CAAAA,IAAO,GAAPA,GAAG,CAACC,GAAG,YAAPD,IAAO,GAAI,GAAG,EAAE,CAAC,OAAO,EAAEA,GAAG,CAACM,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,AAAC;QAC3E,MAAMG,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAC7CH,QAAQ,CAACI,SAAS,CAACnB,sBAAsB,uBAAA,CAACoB,MAAM,GAAG,CAAC,CAAC,CACtD,AAAC;QACF,MAAMC,WAAW,GAAG,MAAM,IAAI,CAAChB,aAAa,CAACiB,2BAA2B,CAACL,UAAU,CAAC,AAAC;QACrF,IAAI,CAACI,WAAW,EAAE;YAChBV,GAAG,CAACY,UAAU,GAAG,GAAG,CAAC;YACrBZ,GAAG,CAACa,GAAG,EAAE,CAAC;YACV,OAAO;SACR;QAED,MAAMC,gBAAgB,GACpBV,QAAQ,CAACI,SAAS,CAACnB,sBAAsB,uBAAA,CAACoB,MAAM,GAAGH,UAAU,CAACG,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,AAAC;QACnFM,CAAAA,GAAAA,KAAI,AAA8C,CAAA,QAA9C,CAACnB,GAAG,EAAEkB,gBAAgB,EAAE;YAAEE,IAAI,EAAEN,WAAW;SAAE,CAAC,CAACO,IAAI,CAACjB,GAAG,CAAC,CAAC;KAC9D;IAED,AAAQO,uBAAuB,CAACH,QAAgB,EAAU;QACxD,MAAMc,KAAK,GAAGd,QAAQ,CAACe,KAAK,CAAC,GAAG,CAAC,AAAC;QAClC,IAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,KAAK,CAACT,MAAM,GAAG,CAAC,EAAE;YAC3C,sBAAsB;YACtB,OAAO,CAAC,EAAES,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,OAAOA,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;CACF;QAzCY5B,wBAAwB,GAAxBA,wBAAwB"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js
index 9babae5..05139d9 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js
@@ -34,7 +34,7 @@ class ExpoMiddleware {
     /**
    * Returns true when the middleware should handle the incoming server request.
    * Exposed for testing.
-   */ _shouldHandleRequest(req) {
+   */ shouldHandleRequest(req) {
         if (!req.url) {
             return false;
         }
@@ -63,7 +63,7 @@ class ExpoMiddleware {
             }
         };
         const middleware = async (req, res, next)=>{
-            if (!this._shouldHandleRequest(req)) {
+            if (!this.shouldHandleRequest(req)) {
                 return next();
             }
             return internalMiddleware(req, res, next);
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map
index 67dafc9..9ff9dab 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/middleware/ExpoMiddleware.ts"],"sourcesContent":["import { parse } from 'url';\n\nimport { ServerNext, ServerRequest, ServerResponse } from './server.types';\nimport * as Log from '../../../log';\n\n/** Base middleware creator for Expo dev servers. */\nexport abstract class ExpoMiddleware {\n  constructor(\n    protected projectRoot: string,\n    protected supportedPaths: string[]\n  ) {}\n\n  /**\n   * Returns true when the middleware should handle the incoming server request.\n   * Exposed for testing.\n   */\n  _shouldHandleRequest(req: ServerRequest): boolean {\n    if (!req.url) {\n      return false;\n    }\n    const parsed = parse(req.url);\n    // Strip the query params\n    if (!parsed.pathname) {\n      return false;\n    }\n\n    return this.supportedPaths.includes(parsed.pathname);\n  }\n\n  abstract handleRequestAsync(\n    req: ServerRequest,\n    res: ServerResponse,\n    next: ServerNext\n  ): Promise<void>;\n\n  /** Create a server middleware handler. */\n  public getHandler() {\n    const internalMiddleware = async (\n      req: ServerRequest,\n      res: ServerResponse,\n      next: ServerNext\n    ) => {\n      try {\n        return await this.handleRequestAsync(req, res, next);\n      } catch (error: any) {\n        Log.exception(error);\n        // 5xx = Server Error HTTP code\n        res.statusCode = 500;\n        if (typeof error === 'object' && error !== null) {\n          res.end(\n            JSON.stringify({\n              error: error.toString(),\n            })\n          );\n        } else {\n          res.end(`Unexpected error: ${error}`);\n        }\n      }\n    };\n    const middleware = async (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n      if (!this._shouldHandleRequest(req)) {\n        return next();\n      }\n      return internalMiddleware(req, res, next);\n    };\n\n    middleware.internal = internalMiddleware;\n\n    return middleware;\n  }\n}\n\nexport function disableResponseCache(res: ServerResponse): ServerResponse {\n  res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n  res.setHeader('Expires', '-1');\n  res.setHeader('Pragma', 'no-cache');\n  return res;\n}\n"],"names":["disableResponseCache","Log","ExpoMiddleware","constructor","projectRoot","supportedPaths","_shouldHandleRequest","req","url","parsed","parse","pathname","includes","getHandler","internalMiddleware","res","next","handleRequestAsync","error","exception","statusCode","end","JSON","stringify","toString","middleware","internal","setHeader"],"mappings":"AAAA;;;;QAwEgBA,oBAAoB,GAApBA,oBAAoB;AAxEd,IAAA,IAAK,WAAL,KAAK,CAAA;AAGfC,IAAAA,GAAG,mCAAM,cAAc,EAApB;;;;;;;;;;;;;;;;;;;;;;AAGR,MAAeC,cAAc;IAClCC,YACYC,WAAmB,EACnBC,cAAwB,CAClC;aAFUD,WAAmB,GAAnBA,WAAmB;aACnBC,cAAwB,GAAxBA,cAAwB;KAChC;IAEJ;;;KAGG,CACHC,oBAAoB,CAACC,GAAkB,EAAW;QAChD,IAAI,CAACA,GAAG,CAACC,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QACD,MAAMC,MAAM,GAAGC,CAAAA,GAAAA,IAAK,AAAS,CAAA,MAAT,CAACH,GAAG,CAACC,GAAG,CAAC,AAAC;QAC9B,yBAAyB;QACzB,IAAI,CAACC,MAAM,CAACE,QAAQ,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACH,MAAM,CAACE,QAAQ,CAAC,CAAC;KACtD;IAQD,0CAA0C,CAC1C,AAAOE,UAAU,GAAG;QAClB,MAAMC,kBAAkB,GAAG,OACzBP,GAAkB,EAClBQ,GAAmB,EACnBC,IAAgB,GACb;YACH,IAAI;gBACF,OAAO,MAAM,IAAI,CAACC,kBAAkB,CAACV,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;aACtD,CAAC,OAAOE,KAAK,EAAO;gBACnBjB,GAAG,CAACkB,SAAS,CAACD,KAAK,CAAC,CAAC;gBACrB,+BAA+B;gBAC/BH,GAAG,CAACK,UAAU,GAAG,GAAG,CAAC;gBACrB,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;oBAC/CH,GAAG,CAACM,GAAG,CACLC,IAAI,CAACC,SAAS,CAAC;wBACbL,KAAK,EAAEA,KAAK,CAACM,QAAQ,EAAE;qBACxB,CAAC,CACH,CAAC;iBACH,MAAM;oBACLT,GAAG,CAACM,GAAG,CAAC,CAAC,kBAAkB,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC;iBACvC;aACF;SACF,AAAC;QACF,MAAMO,UAAU,GAAG,OAAOlB,GAAkB,EAAEQ,GAAmB,EAAEC,IAAgB,GAAK;YACtF,IAAI,CAAC,IAAI,CAACV,oBAAoB,CAACC,GAAG,CAAC,EAAE;gBACnC,OAAOS,IAAI,EAAE,CAAC;aACf;YACD,OAAOF,kBAAkB,CAACP,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;SAC3C,AAAC;QAEFS,UAAU,CAACC,QAAQ,GAAGZ,kBAAkB,CAAC;QAEzC,OAAOW,UAAU,CAAC;KACnB;CACF;QAhEqBvB,cAAc,GAAdA,cAAc;AAkE7B,SAASF,oBAAoB,CAACe,GAAmB,EAAkB;IACxEA,GAAG,CAACY,SAAS,CAAC,eAAe,EAAE,8CAA8C,CAAC,CAAC;IAC/EZ,GAAG,CAACY,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/BZ,GAAG,CAACY,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACpC,OAAOZ,GAAG,CAAC;CACZ"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/middleware/ExpoMiddleware.ts"],"sourcesContent":["import { parse } from 'url';\n\nimport { ServerNext, ServerRequest, ServerResponse } from './server.types';\nimport * as Log from '../../../log';\n\n/** Base middleware creator for Expo dev servers. */\nexport abstract class ExpoMiddleware {\n  constructor(\n    protected projectRoot: string,\n    protected supportedPaths: string[]\n  ) {}\n\n  /**\n   * Returns true when the middleware should handle the incoming server request.\n   * Exposed for testing.\n   */\n  public shouldHandleRequest(req: ServerRequest): boolean {\n    if (!req.url) {\n      return false;\n    }\n    const parsed = parse(req.url);\n    // Strip the query params\n    if (!parsed.pathname) {\n      return false;\n    }\n\n    return this.supportedPaths.includes(parsed.pathname);\n  }\n\n  abstract handleRequestAsync(\n    req: ServerRequest,\n    res: ServerResponse,\n    next: ServerNext\n  ): Promise<void>;\n\n  /** Create a server middleware handler. */\n  public getHandler() {\n    const internalMiddleware = async (\n      req: ServerRequest,\n      res: ServerResponse,\n      next: ServerNext\n    ) => {\n      try {\n        return await this.handleRequestAsync(req, res, next);\n      } catch (error: any) {\n        Log.exception(error);\n        // 5xx = Server Error HTTP code\n        res.statusCode = 500;\n        if (typeof error === 'object' && error !== null) {\n          res.end(\n            JSON.stringify({\n              error: error.toString(),\n            })\n          );\n        } else {\n          res.end(`Unexpected error: ${error}`);\n        }\n      }\n    };\n    const middleware = async (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n      if (!this.shouldHandleRequest(req)) {\n        return next();\n      }\n      return internalMiddleware(req, res, next);\n    };\n\n    middleware.internal = internalMiddleware;\n\n    return middleware;\n  }\n}\n\nexport function disableResponseCache(res: ServerResponse): ServerResponse {\n  res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n  res.setHeader('Expires', '-1');\n  res.setHeader('Pragma', 'no-cache');\n  return res;\n}\n"],"names":["disableResponseCache","Log","ExpoMiddleware","constructor","projectRoot","supportedPaths","shouldHandleRequest","req","url","parsed","parse","pathname","includes","getHandler","internalMiddleware","res","next","handleRequestAsync","error","exception","statusCode","end","JSON","stringify","toString","middleware","internal","setHeader"],"mappings":"AAAA;;;;QAwEgBA,oBAAoB,GAApBA,oBAAoB;AAxEd,IAAA,IAAK,WAAL,KAAK,CAAA;AAGfC,IAAAA,GAAG,mCAAM,cAAc,EAApB;;;;;;;;;;;;;;;;;;;;;;AAGR,MAAeC,cAAc;IAClCC,YACYC,WAAmB,EACnBC,cAAwB,CAClC;aAFUD,WAAmB,GAAnBA,WAAmB;aACnBC,cAAwB,GAAxBA,cAAwB;KAChC;IAEJ;;;KAGG,CACH,AAAOC,mBAAmB,CAACC,GAAkB,EAAW;QACtD,IAAI,CAACA,GAAG,CAACC,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QACD,MAAMC,MAAM,GAAGC,CAAAA,GAAAA,IAAK,AAAS,CAAA,MAAT,CAACH,GAAG,CAACC,GAAG,CAAC,AAAC;QAC9B,yBAAyB;QACzB,IAAI,CAACC,MAAM,CAACE,QAAQ,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACH,MAAM,CAACE,QAAQ,CAAC,CAAC;KACtD;IAQD,0CAA0C,CAC1C,AAAOE,UAAU,GAAG;QAClB,MAAMC,kBAAkB,GAAG,OACzBP,GAAkB,EAClBQ,GAAmB,EACnBC,IAAgB,GACb;YACH,IAAI;gBACF,OAAO,MAAM,IAAI,CAACC,kBAAkB,CAACV,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;aACtD,CAAC,OAAOE,KAAK,EAAO;gBACnBjB,GAAG,CAACkB,SAAS,CAACD,KAAK,CAAC,CAAC;gBACrB,+BAA+B;gBAC/BH,GAAG,CAACK,UAAU,GAAG,GAAG,CAAC;gBACrB,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;oBAC/CH,GAAG,CAACM,GAAG,CACLC,IAAI,CAACC,SAAS,CAAC;wBACbL,KAAK,EAAEA,KAAK,CAACM,QAAQ,EAAE;qBACxB,CAAC,CACH,CAAC;iBACH,MAAM;oBACLT,GAAG,CAACM,GAAG,CAAC,CAAC,kBAAkB,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC;iBACvC;aACF;SACF,AAAC;QACF,MAAMO,UAAU,GAAG,OAAOlB,GAAkB,EAAEQ,GAAmB,EAAEC,IAAgB,GAAK;YACtF,IAAI,CAAC,IAAI,CAACV,mBAAmB,CAACC,GAAG,CAAC,EAAE;gBAClC,OAAOS,IAAI,EAAE,CAAC;aACf;YACD,OAAOF,kBAAkB,CAACP,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;SAC3C,AAAC;QAEFS,UAAU,CAACC,QAAQ,GAAGZ,kBAAkB,CAAC;QAEzC,OAAOW,UAAU,CAAC;KACnB;CACF;QAhEqBvB,cAAc,GAAdA,cAAc;AAkE7B,SAASF,oBAAoB,CAACe,GAAmB,EAAkB;IACxEA,GAAG,CAACY,SAAS,CAAC,eAAe,EAAE,8CAA8C,CAAC,CAAC;IAC/EZ,GAAG,CAACY,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/BZ,GAAG,CAACY,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACpC,OAAOZ,GAAG,CAAC;CACZ"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/type-generation/__typetests__/fixtures/basic.js.map b/node_modules/@expo/cli/build/src/start/server/type-generation/__typetests__/fixtures/basic.js.map
index ba4cd44..d0904bc 100644
--- a/node_modules/@expo/cli/build/src/start/server/type-generation/__typetests__/fixtures/basic.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/type-generation/__typetests__/fixtures/basic.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../../../src/start/server/type-generation/__typetests__/fixtures/basic.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable import/export */\n/* eslint-disable @typescript-eslint/ban-types */\n\nimport type { LinkProps as OriginalLinkProps } from 'expo-router/build/link/Link';\nimport type { Router as OriginalRouter } from 'expo-router/src/types';\nexport * from 'expo-router/build';\n\n// prettier-ignore\ntype StaticRoutes = `/apple` | `/banana`;\n// prettier-ignore\ntype DynamicRoutes<T extends string> = `/colors/${SingleRoutePart<T>}` | `/animals/${CatchAllRoutePart<T>}` | `/mix/${SingleRoutePart<T>}/${SingleRoutePart<T>}/${CatchAllRoutePart<T>}`;\n// prettier-ignore\ntype DynamicRouteTemplate = `/colors/[color]` | `/animals/[...animal]` | `/mix/[fruit]/[color]/[...animals]`;\n\ntype RelativePathString = `./${string}` | `../${string}` | '..';\ntype AbsoluteRoute = DynamicRouteTemplate | StaticRoutes;\ntype ExternalPathString = `http${string}`;\ntype ExpoRouterRoutes = DynamicRouteTemplate | StaticRoutes | RelativePathString;\ntype AllRoutes = ExpoRouterRoutes | ExternalPathString;\n\n/****************\n * Route Utils  *\n ****************/\n\ntype SearchOrHash = `?${string}` | `#${string}`;\ntype UnknownInputParams = Record<string, string | number | (string | number)[]>;\ntype UnknownOutputParams = Record<string, string | string[]>;\n\n/**\n * Return only the RoutePart of a string. If the string has multiple parts return never\n *\n * string   | type\n * ---------|------\n * 123      | 123\n * /123/abc | never\n * 123?abc  | never\n * ./123    | never\n * /123     | never\n * 123/../  | never\n */\ntype SingleRoutePart<S extends string> = S extends `${string}/${string}`\n  ? never\n  : S extends `${string}${SearchOrHash}`\n  ? never\n  : S extends ''\n  ? never\n  : S extends `(${string})`\n  ? never\n  : S extends `[${string}]`\n  ? never\n  : S;\n\n/**\n * Return only the CatchAll router part. If the string has search parameters or a hash return never\n */\ntype CatchAllRoutePart<S extends string> = S extends `${string}${SearchOrHash}`\n  ? never\n  : S extends ''\n  ? never\n  : S extends `${string}(${string})${string}`\n  ? never\n  : S extends `${string}[${string}]${string}`\n  ? never\n  : S;\n\n// type OptionalCatchAllRoutePart<S extends string> = S extends `${string}${SearchOrHash}` ? never : S\n\n/**\n * Return the name of a route parameter\n * '[test]'    -> 'test'\n * 'test'      -> never\n * '[...test]' -> '...test'\n */\ntype IsParameter<Part> = Part extends `[${infer ParamName}]` ? ParamName : never;\n\n/**\n * Return a union of all parameter names. If there are no names return never\n *\n * /[test]         -> 'test'\n * /[abc]/[...def] -> 'abc'|'...def'\n */\ntype ParameterNames<Path> = Path extends `${infer PartA}/${infer PartB}`\n  ? IsParameter<PartA> | ParameterNames<PartB>\n  : IsParameter<Path>;\n\n/**\n * Returns all segements of a route.\n *\n * /(group)/123/abc/[id]/[...rest] -> ['(group)', '123', 'abc', '[id]', '[...rest]'\n */\ntype RouteSegments<Path> = Path extends `${infer PartA}/${infer PartB}`\n  ? PartA extends '' | '.'\n    ? [...RouteSegments<PartB>]\n    : [PartA, ...RouteSegments<PartB>]\n  : Path extends ''\n  ? []\n  : [Path];\n\n/**\n * Returns a Record of the routes parameters as strings and CatchAll parameters\n *\n * There are two versions, input and output, as you can input 'string | number' but\n *  the output will always be 'string'\n *\n * /[id]/[...rest] -> { id: string, rest: string[] }\n * /no-params      -> {}\n */\ntype InputRouteParams<Path> = {\n  [Key in ParameterNames<Path> as Key extends `...${infer Name}`\n    ? Name\n    : Key]: Key extends `...${string}` ? (string | number)[] : string | number;\n} & UnknownInputParams;\n\ntype OutputRouteParams<Path> = {\n  [Key in ParameterNames<Path> as Key extends `...${infer Name}`\n    ? Name\n    : Key]: Key extends `...${string}` ? string[] : string;\n} & UnknownOutputParams;\n\n/**\n * Returns the search parameters for a route.\n */\nexport type SearchParams<T extends AllRoutes> = T extends DynamicRouteTemplate\n  ? OutputRouteParams<T>\n  : T extends StaticRoutes\n  ? never\n  : UnknownOutputParams;\n\n/**\n * Route is mostly used as part of Href to ensure that a valid route is provided\n *\n * Given a dynamic route, this will return never. This is helpful for conditional logic\n *\n * /test         -> /test, /test2, etc\n * /test/[abc]   -> never\n * /test/resolve -> /test, /test2, etc\n *\n * Note that if we provide a value for [abc] then the route is allowed\n *\n * This is named Route to prevent confusion, as users they will often see it in tooltips\n */\nexport type Route<T> = T extends string\n  ? T extends DynamicRouteTemplate\n    ? never\n    :\n        | StaticRoutes\n        | RelativePathString\n        | ExternalPathString\n        | (T extends `${infer P}${SearchOrHash}`\n            ? P extends DynamicRoutes<infer _>\n              ? T\n              : never\n            : T extends DynamicRoutes<infer _>\n            ? T\n            : never)\n  : never;\n\n/*********\n * Href  *\n *********/\n\nexport type Href<T> = T extends Record<'pathname', string> ? HrefObject<T> : Route<T>;\n\nexport type HrefObject<\n  R extends Record<'pathname', string>,\n  P = R['pathname'],\n> = P extends DynamicRouteTemplate\n  ? { pathname: P; params: InputRouteParams<P> }\n  : P extends Route<P>\n  ? { pathname: Route<P> | DynamicRouteTemplate; params?: never | InputRouteParams<never> }\n  : never;\n\n/***********************\n * Expo Router Exports *\n ***********************/\n\nexport type Router = Omit<OriginalRouter, 'push' | 'replace' | 'setParams'> & {\n  /** Navigate to the provided href. */\n  push: <T>(href: Href<T>) => void;\n  /** Navigate to route without appending to the history. */\n  replace: <T>(href: Href<T>) => void;\n  /** Update the current route query params. */\n  setParams: <T = ''>(params?: T extends '' ? Record<string, string> : InputRouteParams<T>) => void;\n};\n\n/** The imperative router. */\nexport declare const router: Router;\n\n/************\n * <Link /> *\n ************/\nexport interface LinkProps<T> extends OriginalLinkProps {\n  href: Href<T>;\n}\n\nexport interface LinkComponent {\n  <T>(props: React.PropsWithChildren<LinkProps<T>>): JSX.Element;\n  /** Helper method to resolve an Href object into a string. */\n  resolveHref: <T>(href: Href<T>) => string;\n}\n\n/**\n * Component to render link to another route using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.href Absolute path to route (e.g. `/feeds/hot`).\n * @param props.replace Should replace the current route without adding to the history.\n * @param props.asChild Forward props to child component. Useful for custom buttons.\n * @param props.children Child elements to render the content.\n */\nexport declare const Link: LinkComponent;\n\n/** Redirects to the href as soon as the component is mounted. */\nexport declare const Redirect: <T>(\n  props: React.PropsWithChildren<{ href: Href<T> }>\n) => JSX.Element;\n\n/************\n * Hooks *\n ************/\nexport declare function useRouter(): Router;\n\nexport declare function useLocalSearchParams<\n  T extends AllRoutes | UnknownOutputParams = UnknownOutputParams,\n>(): T extends AllRoutes ? SearchParams<T> : T;\n\n/** @deprecated renamed to `useGlobalSearchParams` */\nexport declare function useSearchParams<\n  T extends AllRoutes | UnknownOutputParams = UnknownOutputParams,\n>(): T extends AllRoutes ? SearchParams<T> : T;\n\nexport declare function useGlobalSearchParams<\n  T extends AllRoutes | UnknownOutputParams = UnknownOutputParams,\n>(): T extends AllRoutes ? SearchParams<T> : T;\n\nexport declare function useSegments<\n  T extends AbsoluteRoute | RouteSegments<AbsoluteRoute> | RelativePathString,\n>(): T extends AbsoluteRoute ? RouteSegments<T> : T extends string ? string[] : T;\n"],"names":[],"mappings":"AAIA;;;;6CAEc,mBAAmB;AAAjC,YAAA,MAAkC;;2CAAlC,MAAkC;;;;mBAAlC,MAAkC;;;EAAA"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../../../src/start/server/type-generation/__typetests__/fixtures/basic.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable import/export */\n/* eslint-disable @typescript-eslint/ban-types */\n\nimport type { LinkProps as OriginalLinkProps } from 'expo-router/build/link/Link';\nimport type { Router as OriginalRouter } from 'expo-router/src/types';\nexport * from 'expo-router/build';\n\n// prettier-ignore\ntype StaticRoutes = `/apple` | `/banana`;\n// prettier-ignore\ntype DynamicRoutes<T extends string> = `/colors/${SingleRoutePart<T>}` | `/animals/${CatchAllRoutePart<T>}` | `/mix/${SingleRoutePart<T>}/${SingleRoutePart<T>}/${CatchAllRoutePart<T>}`;\n// prettier-ignore\ntype DynamicRouteTemplate = `/colors/[color]` | `/animals/[...animal]` | `/mix/[fruit]/[color]/[...animals]`;\n\ntype RelativePathString = `./${string}` | `../${string}` | '..';\ntype AbsoluteRoute = DynamicRouteTemplate | StaticRoutes;\ntype ExternalPathString = `http${string}`;\ntype ExpoRouterRoutes = DynamicRouteTemplate | StaticRoutes | RelativePathString;\ntype AllRoutes = ExpoRouterRoutes | ExternalPathString;\n\n/****************\n * Route Utils  *\n ****************/\n\ntype SearchOrHash = `?${string}` | `#${string}`;\ntype UnknownInputParams = Record<string, string | number | (string | number)[]>;\ntype UnknownOutputParams = Record<string, string | string[]>;\n\n/**\n * Return only the RoutePart of a string. If the string has multiple parts return never\n *\n * string   | type\n * ---------|------\n * 123      | 123\n * /123/abc | never\n * 123?abc  | never\n * ./123    | never\n * /123     | never\n * 123/../  | never\n */\ntype SingleRoutePart<S extends string> = S extends `${string}/${string}`\n  ? never\n  : S extends `${string}${SearchOrHash}`\n  ? never\n  : S extends ''\n  ? never\n  : S extends `(${string})`\n  ? never\n  : S extends `[${string}]`\n  ? never\n  : S;\n\n/**\n * Return only the CatchAll router part. If the string has search parameters or a hash return never\n */\ntype CatchAllRoutePart<S extends string> = S extends `${string}${SearchOrHash}`\n  ? never\n  : S extends ''\n  ? never\n  : S extends `${string}(${string})${string}`\n  ? never\n  : S extends `${string}[${string}]${string}`\n  ? never\n  : S;\n\n// type OptionalCatchAllRoutePart<S extends string> = S extends `${string}${SearchOrHash}` ? never : S\n\n/**\n * Return the name of a route parameter\n * '[test]'    -> 'test'\n * 'test'      -> never\n * '[...test]' -> '...test'\n */\ntype IsParameter<Part> = Part extends `[${infer ParamName}]` ? ParamName : never;\n\n/**\n * Return a union of all parameter names. If there are no names return never\n *\n * /[test]         -> 'test'\n * /[abc]/[...def] -> 'abc'|'...def'\n */\ntype ParameterNames<Path> = Path extends `${infer PartA}/${infer PartB}`\n  ? IsParameter<PartA> | ParameterNames<PartB>\n  : IsParameter<Path>;\n\n/**\n * Returns all segements of a route.\n *\n * /(group)/123/abc/[id]/[...rest] -> ['(group)', '123', 'abc', '[id]', '[...rest]'\n */\ntype RouteSegments<Path> = Path extends `${infer PartA}/${infer PartB}`\n  ? PartA extends '' | '.'\n    ? [...RouteSegments<PartB>]\n    : [PartA, ...RouteSegments<PartB>]\n  : Path extends ''\n  ? []\n  : [Path];\n\n/**\n * Returns a Record of the routes parameters as strings and CatchAll parameters\n *\n * There are two versions, input and output, as you can input 'string | number' but\n *  the output will always be 'string'\n *\n * /[id]/[...rest] -> { id: string, rest: string[] }\n * /no-params      -> {}\n */\ntype InputRouteParams<Path> = {\n  [Key in ParameterNames<Path> as Key extends `...${infer Name}`\n    ? Name\n    : Key]: Key extends `...${string}` ? (string | number)[] : string | number;\n} & UnknownInputParams;\n\ntype OutputRouteParams<Path> = {\n  [Key in ParameterNames<Path> as Key extends `...${infer Name}`\n    ? Name\n    : Key]: Key extends `...${string}` ? string[] : string;\n} & UnknownOutputParams;\n\n/**\n * Returns the search parameters for a route.\n */\nexport type SearchParams<T extends AllRoutes> = T extends DynamicRouteTemplate\n  ? OutputRouteParams<T>\n  : T extends StaticRoutes\n  ? never\n  : UnknownOutputParams;\n\n/**\n * Route is mostly used as part of Href to ensure that a valid route is provided\n *\n * Given a dynamic route, this will return never. This is helpful for conditional logic\n *\n * /test         -> /test, /test2, etc\n * /test/[abc]   -> never\n * /test/resolve -> /test, /test2, etc\n *\n * Note that if we provide a value for [abc] then the route is allowed\n *\n * This is named Route to prevent confusion, as users they will often see it in tooltips\n */\nexport type Route<T> = T extends string\n  ? T extends DynamicRouteTemplate\n    ? never\n    :\n        | StaticRoutes\n        | RelativePathString\n        | ExternalPathString\n        | (T extends `${infer P}${SearchOrHash}`\n            ? P extends DynamicRoutes<infer _>\n              ? T\n              : never\n            : T extends DynamicRoutes<infer _>\n            ? T\n            : never)\n  : never;\n\n/*********\n * Href  *\n *********/\n\nexport type Href<T> = T extends Record<'pathname', string> ? HrefObject<T> : Route<T>;\n\nexport type HrefObject<\n  R extends Record<'pathname', string>,\n  P = R['pathname'],\n> = P extends DynamicRouteTemplate\n  ? { pathname: P; params: InputRouteParams<P> }\n  : P extends Route<P>\n  ? { pathname: Route<P> | DynamicRouteTemplate; params?: never | InputRouteParams<never> }\n  : never;\n\n/***********************\n * Expo Router Exports *\n ***********************/\n\nexport type Router = Omit<OriginalRouter, 'push' | 'replace' | 'setParams'> & {\n  /** Navigate to the provided href. */\n  push: <T>(href: Href<T>) => void;\n  /** Navigate to route without appending to the history. */\n  replace: <T>(href: Href<T>) => void;\n  /** Update the current route query params. */\n  setParams: <T = ''>(params?: T extends '' ? Record<string, string> : InputRouteParams<T>) => void;\n};\n\n/** The imperative router. */\nexport declare const router: Router;\n\n/************\n * <Link /> *\n ************/\nexport interface LinkProps<T> extends OriginalLinkProps {\n  href: Href<T>;\n}\n\nexport interface LinkComponent {\n  <T>(props: React.PropsWithChildren<LinkProps<T>>): JSX.Element;\n  /** Helper method to resolve an Href object into a string. */\n  resolveHref: <T>(href: Href<T>) => string;\n}\n\n/**\n * Component to render link to another route using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.href Absolute path to route (e.g. `/feeds/hot`).\n * @param props.replace Should replace the current route without adding to the history.\n * @param props.asChild Forward props to child component. Useful for custom buttons.\n * @param props.children Child elements to render the content.\n * @param props.className On web, this sets the HTML `class` directly. On native, this can be used with CSS interop tools like Nativewind.\n */\nexport declare const Link: LinkComponent;\n\n/** Redirects to the href as soon as the component is mounted. */\nexport declare const Redirect: <T>(\n  props: React.PropsWithChildren<{ href: Href<T> }>\n) => JSX.Element;\n\n/************\n * Hooks *\n ************/\nexport declare function useRouter(): Router;\n\nexport declare function useLocalSearchParams<\n  T extends AllRoutes | UnknownOutputParams = UnknownOutputParams,\n>(): T extends AllRoutes ? SearchParams<T> : T;\n\n/** @deprecated renamed to `useGlobalSearchParams` */\nexport declare function useSearchParams<\n  T extends AllRoutes | UnknownOutputParams = UnknownOutputParams,\n>(): T extends AllRoutes ? SearchParams<T> : T;\n\nexport declare function useGlobalSearchParams<\n  T extends AllRoutes | UnknownOutputParams = UnknownOutputParams,\n>(): T extends AllRoutes ? SearchParams<T> : T;\n\nexport declare function useSegments<\n  T extends AbsoluteRoute | RouteSegments<AbsoluteRoute> | RelativePathString,\n>(): T extends AbsoluteRoute ? RouteSegments<T> : T extends string ? string[] : T;\n"],"names":[],"mappings":"AAIA;;;;6CAEc,mBAAmB;AAAjC,YAAA,MAAkC;;2CAAlC,MAAkC;;;;mBAAlC,MAAkC;;;EAAA"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js b/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js
index 76c7157..5e8631b 100644
--- a/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js
+++ b/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js
@@ -3,11 +3,10 @@ Object.defineProperty(exports, "__esModule", {
     value: true
 });
 exports.getMetroDebugProperties = getMetroDebugProperties;
-var _resolveFromProject = require("../../start/server/metro/resolveFromProject");
 function getMetroDebugProperties(projectRoot, exp, debugTool) {
     return {
         sdkVersion: exp.sdkVersion,
-        metroVersion: (0, _resolveFromProject).resolveMetroVersionFromProject(projectRoot),
+        metroVersion: require("metro/package.json").version,
         toolName: debugTool.name,
         toolVersion: debugTool.version
     };
diff --git a/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js.map b/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js.map
index 1026e9a..1e51672 100644
--- a/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js.map
+++ b/node_modules/@expo/cli/build/src/utils/analytics/getMetroDebugProperties.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/utils/analytics/getMetroDebugProperties.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\n\nimport { resolveMetroVersionFromProject } from '../../start/server/metro/resolveFromProject';\n\nexport type DebugTool = {\n  name: string;\n  version?: string;\n};\n\nexport function getMetroDebugProperties(\n  projectRoot: string,\n  exp: ExpoConfig,\n  debugTool: DebugTool\n) {\n  return {\n    sdkVersion: exp.sdkVersion,\n    metroVersion: resolveMetroVersionFromProject(projectRoot),\n    toolName: debugTool.name,\n    toolVersion: debugTool.version,\n  };\n}\n"],"names":["getMetroDebugProperties","projectRoot","exp","debugTool","sdkVersion","metroVersion","resolveMetroVersionFromProject","toolName","name","toolVersion","version"],"mappings":"AAAA;;;;QASgBA,uBAAuB,GAAvBA,uBAAuB;AAPQ,IAAA,mBAA6C,WAA7C,6CAA6C,CAAA;AAOrF,SAASA,uBAAuB,CACrCC,WAAmB,EACnBC,GAAe,EACfC,SAAoB,EACpB;IACA,OAAO;QACLC,UAAU,EAAEF,GAAG,CAACE,UAAU;QAC1BC,YAAY,EAAEC,CAAAA,GAAAA,mBAA8B,AAAa,CAAA,+BAAb,CAACL,WAAW,CAAC;QACzDM,QAAQ,EAAEJ,SAAS,CAACK,IAAI;QACxBC,WAAW,EAAEN,SAAS,CAACO,OAAO;KAC/B,CAAC;CACH"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/utils/analytics/getMetroDebugProperties.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\n\nexport type DebugTool = {\n  name: string;\n  version?: string;\n};\n\nexport function getMetroDebugProperties(\n  projectRoot: string,\n  exp: ExpoConfig,\n  debugTool: DebugTool\n) {\n  return {\n    sdkVersion: exp.sdkVersion,\n    metroVersion: require('metro/package.json').version,\n    toolName: debugTool.name,\n    toolVersion: debugTool.version,\n  };\n}\n"],"names":["getMetroDebugProperties","projectRoot","exp","debugTool","sdkVersion","metroVersion","require","version","toolName","name","toolVersion"],"mappings":"AAAA;;;;QAOgBA,uBAAuB,GAAvBA,uBAAuB;AAAhC,SAASA,uBAAuB,CACrCC,WAAmB,EACnBC,GAAe,EACfC,SAAoB,EACpB;IACA,OAAO;QACLC,UAAU,EAAEF,GAAG,CAACE,UAAU;QAC1BC,YAAY,EAAEC,OAAO,CAAC,oBAAoB,CAAC,CAACC,OAAO;QACnDC,QAAQ,EAAEL,SAAS,CAACM,IAAI;QACxBC,WAAW,EAAEP,SAAS,CAACI,OAAO;KAC/B,CAAC;CACH"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js b/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js
index 6cc11b1..b8547c8 100644
--- a/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js
+++ b/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js
@@ -3,12 +3,11 @@ Object.defineProperty(exports, "__esModule", {
     value: true
 });
 exports.getMetroProperties = getMetroProperties;
-var _resolveFromProject = require("../../start/server/metro/resolveFromProject");
 function getMetroProperties(projectRoot, exp, metroConfig = {}) {
     var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11;
     return {
         sdkVersion: exp.sdkVersion,
-        metroVersion: (0, _resolveFromProject).resolveMetroVersionFromProject(projectRoot),
+        metroVersion: require("metro/package.json").version,
         fileMapCacheManagerFactory: Boolean(metroConfig.unstable_fileMapCacheManagerFactory) || undefined,
         perfLogger: Boolean(metroConfig.unstable_perfLogger) || undefined,
         resolverEnableSymlinks: (ref = metroConfig.resolver) == null ? void 0 : ref.unstable_enableSymlinks,
diff --git a/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js.map b/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js.map
index 948eb3c..db8add7 100644
--- a/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js.map
+++ b/node_modules/@expo/cli/build/src/utils/analytics/getMetroProperties.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/utils/analytics/getMetroProperties.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { resolveMetroVersionFromProject } from '../../start/server/metro/resolveFromProject';\n\n/**\n * Get the unstable / experimental properties used within the Metro config.\n * Note that this should match `metro-config`, but uses newer features that are not yet typed.\n *\n * @see https://github.com/facebook/metro/blob/1d51ffd33f54dba25c54b49ff059543dac519f21/packages/metro-config/src/configTypes.flow.js\n */\nexport function getMetroProperties(\n  projectRoot: string,\n  exp: ExpoConfig,\n  metroConfig: Record<string, any> = {}\n) {\n  return {\n    sdkVersion: exp.sdkVersion,\n    metroVersion: resolveMetroVersionFromProject(projectRoot),\n\n    fileMapCacheManagerFactory:\n      Boolean(metroConfig.unstable_fileMapCacheManagerFactory) || undefined, // CacheManagerFactory\n    perfLogger: Boolean(metroConfig.unstable_perfLogger) || undefined, // PerfLoggerFactory\n\n    resolverEnableSymlinks: metroConfig.resolver?.unstable_enableSymlinks, // boolean\n    resolverConditionNames: metroConfig.resolver?.unstable_conditionNames, // string[]\n    resolverConditionsByPlatform: metroConfig.resolver?.unstable_conditionsByPlatform, // { [platform: string]: string[] }\n    resolverEnablePackageExports: metroConfig.resolver?.unstable_enablePackageExports, // boolean\n\n    serverImportBundleSupport: metroConfig.server?.experimentalImportBundleSupport, // boolean\n    serverServerRoot: Boolean(metroConfig.server?.unstable_serverRoot) || undefined, // string | null\n\n    transformerCollectDependenciesPath: metroConfig.transformer?.unstable_collectDependenciesPath, // string\n    transformerDependencyMapReservedName:\n      metroConfig.transformer?.unstable_dependencyMapReservedName, // string | null\n    transformerDisableModuleWrapping: metroConfig.transformer?.unstable_disableModuleWrapping, // boolean\n    transformerDisableNormalizePseudoGlobals:\n      metroConfig.transformer?.unstable_disableNormalizePseudoGlobals, // boolean\n    transformerCompactOutput: metroConfig.transformer?.unstable_compactOutput, // boolean\n    transformerAllowRequireContext: metroConfig.transformer?.unstable_allowRequireContext, // boolean\n  };\n}\n"],"names":["getMetroProperties","projectRoot","exp","metroConfig","sdkVersion","metroVersion","resolveMetroVersionFromProject","fileMapCacheManagerFactory","Boolean","unstable_fileMapCacheManagerFactory","undefined","perfLogger","unstable_perfLogger","resolverEnableSymlinks","resolver","unstable_enableSymlinks","resolverConditionNames","unstable_conditionNames","resolverConditionsByPlatform","unstable_conditionsByPlatform","resolverEnablePackageExports","unstable_enablePackageExports","serverImportBundleSupport","server","experimentalImportBundleSupport","serverServerRoot","unstable_serverRoot","transformerCollectDependenciesPath","transformer","unstable_collectDependenciesPath","transformerDependencyMapReservedName","unstable_dependencyMapReservedName","transformerDisableModuleWrapping","unstable_disableModuleWrapping","transformerDisableNormalizePseudoGlobals","unstable_disableNormalizePseudoGlobals","transformerCompactOutput","unstable_compactOutput","transformerAllowRequireContext","unstable_allowRequireContext"],"mappings":"AAAA;;;;QAUgBA,kBAAkB,GAAlBA,kBAAkB;AARa,IAAA,mBAA6C,WAA7C,6CAA6C,CAAA;AAQrF,SAASA,kBAAkB,CAChCC,WAAmB,EACnBC,GAAe,EACfC,WAAgC,GAAG,EAAE,EACrC;QAS0BA,GAAoB,EACpBA,IAAoB,EACdA,IAAoB,EACpBA,IAAoB,EAEvBA,IAAkB,EACnBA,IAAkB,EAERA,IAAuB,EAEzDA,IAAuB,EACSA,IAAuB,EAEvDA,IAAuB,EACCA,KAAuB,EACjBA,KAAuB;IAvBzD,OAAO;QACLC,UAAU,EAAEF,GAAG,CAACE,UAAU;QAC1BC,YAAY,EAAEC,CAAAA,GAAAA,mBAA8B,AAAa,CAAA,+BAAb,CAACL,WAAW,CAAC;QAEzDM,0BAA0B,EACxBC,OAAO,CAACL,WAAW,CAACM,mCAAmC,CAAC,IAAIC,SAAS;QACvEC,UAAU,EAAEH,OAAO,CAACL,WAAW,CAACS,mBAAmB,CAAC,IAAIF,SAAS;QAEjEG,sBAAsB,EAAEV,CAAAA,GAAoB,GAApBA,WAAW,CAACW,QAAQ,SAAyB,GAA7CX,KAAAA,CAA6C,GAA7CA,GAAoB,CAAEY,uBAAuB;QACrEC,sBAAsB,EAAEb,CAAAA,IAAoB,GAApBA,WAAW,CAACW,QAAQ,SAAyB,GAA7CX,KAAAA,CAA6C,GAA7CA,IAAoB,CAAEc,uBAAuB;QACrEC,4BAA4B,EAAEf,CAAAA,IAAoB,GAApBA,WAAW,CAACW,QAAQ,SAA+B,GAAnDX,KAAAA,CAAmD,GAAnDA,IAAoB,CAAEgB,6BAA6B;QACjFC,4BAA4B,EAAEjB,CAAAA,IAAoB,GAApBA,WAAW,CAACW,QAAQ,SAA+B,GAAnDX,KAAAA,CAAmD,GAAnDA,IAAoB,CAAEkB,6BAA6B;QAEjFC,yBAAyB,EAAEnB,CAAAA,IAAkB,GAAlBA,WAAW,CAACoB,MAAM,SAAiC,GAAnDpB,KAAAA,CAAmD,GAAnDA,IAAkB,CAAEqB,+BAA+B;QAC9EC,gBAAgB,EAAEjB,OAAO,CAACL,CAAAA,IAAkB,GAAlBA,WAAW,CAACoB,MAAM,SAAqB,GAAvCpB,KAAAA,CAAuC,GAAvCA,IAAkB,CAAEuB,mBAAmB,CAAC,IAAIhB,SAAS;QAE/EiB,kCAAkC,EAAExB,CAAAA,IAAuB,GAAvBA,WAAW,CAACyB,WAAW,SAAkC,GAAzDzB,KAAAA,CAAyD,GAAzDA,IAAuB,CAAE0B,gCAAgC;QAC7FC,oCAAoC,EAClC3B,CAAAA,IAAuB,GAAvBA,WAAW,CAACyB,WAAW,SAAoC,GAA3DzB,KAAAA,CAA2D,GAA3DA,IAAuB,CAAE4B,kCAAkC;QAC7DC,gCAAgC,EAAE7B,CAAAA,IAAuB,GAAvBA,WAAW,CAACyB,WAAW,SAAgC,GAAvDzB,KAAAA,CAAuD,GAAvDA,IAAuB,CAAE8B,8BAA8B;QACzFC,wCAAwC,EACtC/B,CAAAA,IAAuB,GAAvBA,WAAW,CAACyB,WAAW,SAAwC,GAA/DzB,KAAAA,CAA+D,GAA/DA,IAAuB,CAAEgC,sCAAsC;QACjEC,wBAAwB,EAAEjC,CAAAA,KAAuB,GAAvBA,WAAW,CAACyB,WAAW,SAAwB,GAA/CzB,KAAAA,CAA+C,GAA/CA,KAAuB,CAAEkC,sBAAsB;QACzEC,8BAA8B,EAAEnC,CAAAA,KAAuB,GAAvBA,WAAW,CAACyB,WAAW,SAA8B,GAArDzB,KAAAA,CAAqD,GAArDA,KAAuB,CAAEoC,4BAA4B;KACtF,CAAC;CACH"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/utils/analytics/getMetroProperties.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\n/**\n * Get the unstable / experimental properties used within the Metro config.\n * Note that this should match `metro-config`, but uses newer features that are not yet typed.\n *\n * @see https://github.com/facebook/metro/blob/1d51ffd33f54dba25c54b49ff059543dac519f21/packages/metro-config/src/configTypes.flow.js\n */\nexport function getMetroProperties(\n  projectRoot: string,\n  exp: ExpoConfig,\n  metroConfig: Record<string, any> = {}\n) {\n  return {\n    sdkVersion: exp.sdkVersion,\n    metroVersion: require('metro/package.json').version,\n\n    fileMapCacheManagerFactory:\n      Boolean(metroConfig.unstable_fileMapCacheManagerFactory) || undefined, // CacheManagerFactory\n    perfLogger: Boolean(metroConfig.unstable_perfLogger) || undefined, // PerfLoggerFactory\n\n    resolverEnableSymlinks: metroConfig.resolver?.unstable_enableSymlinks, // boolean\n    resolverConditionNames: metroConfig.resolver?.unstable_conditionNames, // string[]\n    resolverConditionsByPlatform: metroConfig.resolver?.unstable_conditionsByPlatform, // { [platform: string]: string[] }\n    resolverEnablePackageExports: metroConfig.resolver?.unstable_enablePackageExports, // boolean\n\n    serverImportBundleSupport: metroConfig.server?.experimentalImportBundleSupport, // boolean\n    serverServerRoot: Boolean(metroConfig.server?.unstable_serverRoot) || undefined, // string | null\n\n    transformerCollectDependenciesPath: metroConfig.transformer?.unstable_collectDependenciesPath, // string\n    transformerDependencyMapReservedName:\n      metroConfig.transformer?.unstable_dependencyMapReservedName, // string | null\n    transformerDisableModuleWrapping: metroConfig.transformer?.unstable_disableModuleWrapping, // boolean\n    transformerDisableNormalizePseudoGlobals:\n      metroConfig.transformer?.unstable_disableNormalizePseudoGlobals, // boolean\n    transformerCompactOutput: metroConfig.transformer?.unstable_compactOutput, // boolean\n    transformerAllowRequireContext: metroConfig.transformer?.unstable_allowRequireContext, // boolean\n  };\n}\n"],"names":["getMetroProperties","projectRoot","exp","metroConfig","sdkVersion","metroVersion","require","version","fileMapCacheManagerFactory","Boolean","unstable_fileMapCacheManagerFactory","undefined","perfLogger","unstable_perfLogger","resolverEnableSymlinks","resolver","unstable_enableSymlinks","resolverConditionNames","unstable_conditionNames","resolverConditionsByPlatform","unstable_conditionsByPlatform","resolverEnablePackageExports","unstable_enablePackageExports","serverImportBundleSupport","server","experimentalImportBundleSupport","serverServerRoot","unstable_serverRoot","transformerCollectDependenciesPath","transformer","unstable_collectDependenciesPath","transformerDependencyMapReservedName","unstable_dependencyMapReservedName","transformerDisableModuleWrapping","unstable_disableModuleWrapping","transformerDisableNormalizePseudoGlobals","unstable_disableNormalizePseudoGlobals","transformerCompactOutput","unstable_compactOutput","transformerAllowRequireContext","unstable_allowRequireContext"],"mappings":"AAAA;;;;QAQgBA,kBAAkB,GAAlBA,kBAAkB;AAA3B,SAASA,kBAAkB,CAChCC,WAAmB,EACnBC,GAAe,EACfC,WAAgC,GAAG,EAAE,EACrC;QAS0BA,GAAoB,EACpBA,IAAoB,EACdA,IAAoB,EACpBA,IAAoB,EAEvBA,IAAkB,EACnBA,IAAkB,EAERA,IAAuB,EAEzDA,IAAuB,EACSA,IAAuB,EAEvDA,IAAuB,EACCA,KAAuB,EACjBA,KAAuB;IAvBzD,OAAO;QACLC,UAAU,EAAEF,GAAG,CAACE,UAAU;QAC1BC,YAAY,EAAEC,OAAO,CAAC,oBAAoB,CAAC,CAACC,OAAO;QAEnDC,0BAA0B,EACxBC,OAAO,CAACN,WAAW,CAACO,mCAAmC,CAAC,IAAIC,SAAS;QACvEC,UAAU,EAAEH,OAAO,CAACN,WAAW,CAACU,mBAAmB,CAAC,IAAIF,SAAS;QAEjEG,sBAAsB,EAAEX,CAAAA,GAAoB,GAApBA,WAAW,CAACY,QAAQ,SAAyB,GAA7CZ,KAAAA,CAA6C,GAA7CA,GAAoB,CAAEa,uBAAuB;QACrEC,sBAAsB,EAAEd,CAAAA,IAAoB,GAApBA,WAAW,CAACY,QAAQ,SAAyB,GAA7CZ,KAAAA,CAA6C,GAA7CA,IAAoB,CAAEe,uBAAuB;QACrEC,4BAA4B,EAAEhB,CAAAA,IAAoB,GAApBA,WAAW,CAACY,QAAQ,SAA+B,GAAnDZ,KAAAA,CAAmD,GAAnDA,IAAoB,CAAEiB,6BAA6B;QACjFC,4BAA4B,EAAElB,CAAAA,IAAoB,GAApBA,WAAW,CAACY,QAAQ,SAA+B,GAAnDZ,KAAAA,CAAmD,GAAnDA,IAAoB,CAAEmB,6BAA6B;QAEjFC,yBAAyB,EAAEpB,CAAAA,IAAkB,GAAlBA,WAAW,CAACqB,MAAM,SAAiC,GAAnDrB,KAAAA,CAAmD,GAAnDA,IAAkB,CAAEsB,+BAA+B;QAC9EC,gBAAgB,EAAEjB,OAAO,CAACN,CAAAA,IAAkB,GAAlBA,WAAW,CAACqB,MAAM,SAAqB,GAAvCrB,KAAAA,CAAuC,GAAvCA,IAAkB,CAAEwB,mBAAmB,CAAC,IAAIhB,SAAS;QAE/EiB,kCAAkC,EAAEzB,CAAAA,IAAuB,GAAvBA,WAAW,CAAC0B,WAAW,SAAkC,GAAzD1B,KAAAA,CAAyD,GAAzDA,IAAuB,CAAE2B,gCAAgC;QAC7FC,oCAAoC,EAClC5B,CAAAA,IAAuB,GAAvBA,WAAW,CAAC0B,WAAW,SAAoC,GAA3D1B,KAAAA,CAA2D,GAA3DA,IAAuB,CAAE6B,kCAAkC;QAC7DC,gCAAgC,EAAE9B,CAAAA,IAAuB,GAAvBA,WAAW,CAAC0B,WAAW,SAAgC,GAAvD1B,KAAAA,CAAuD,GAAvDA,IAAuB,CAAE+B,8BAA8B;QACzFC,wCAAwC,EACtChC,CAAAA,IAAuB,GAAvBA,WAAW,CAAC0B,WAAW,SAAwC,GAA/D1B,KAAAA,CAA+D,GAA/DA,IAAuB,CAAEiC,sCAAsC;QACjEC,wBAAwB,EAAElC,CAAAA,KAAuB,GAAvBA,WAAW,CAAC0B,WAAW,SAAwB,GAA/C1B,KAAAA,CAA+C,GAA/CA,KAAuB,CAAEmC,sBAAsB;QACzEC,8BAA8B,EAAEpC,CAAAA,KAAuB,GAAvBA,WAAW,CAAC0B,WAAW,SAA8B,GAArD1B,KAAAA,CAAqD,GAArDA,KAAuB,CAAEqC,4BAA4B;KACtF,CAAC;CACH"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/prompts.js b/node_modules/@expo/cli/build/src/utils/prompts.js
index 256a993..69688d8 100644
--- a/node_modules/@expo/cli/build/src/utils/prompts.js
+++ b/node_modules/@expo/cli/build/src/utils/prompts.js
@@ -2,12 +2,6 @@
 Object.defineProperty(exports, "__esModule", {
     value: true
 });
-Object.defineProperty(exports, "PromptType", {
-    enumerable: true,
-    get: function() {
-        return _prompts.PromptType;
-    }
-});
 exports.default = prompt;
 exports.confirmAsync = confirmAsync;
 exports.selectAsync = selectAsync;
@@ -18,7 +12,7 @@ exports.resumeInteractions = resumeInteractions;
 exports.createSelectionFilter = createSelectionFilter;
 exports.promptAsync = void 0;
 var _assert = _interopRequireDefault(require("assert"));
-var _prompts = _interopRequireWildcard(require("prompts"));
+var _prompts = _interopRequireDefault(require("prompts"));
 var _errors = require("./errors");
 var _interactive = require("./interactive");
 async function prompt(questions, { nonInteractiveHelp , ...options } = {}) {
@@ -54,27 +48,6 @@ function _interopRequireDefault(obj) {
         default: obj
     };
 }
-function _interopRequireWildcard(obj) {
-    if (obj && obj.__esModule) {
-        return obj;
-    } else {
-        var newObj = {};
-        if (obj != null) {
-            for(var key in obj){
-                if (Object.prototype.hasOwnProperty.call(obj, key)) {
-                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
-                    if (desc.get || desc.set) {
-                        Object.defineProperty(newObj, key, desc);
-                    } else {
-                        newObj[key] = obj[key];
-                    }
-                }
-            }
-        }
-        newObj.default = obj;
-        return newObj;
-    }
-}
 const debug = require("debug")("expo:utils:prompts");
 /** Interaction observers for detecting when keystroke tracking should pause/resume. */ const listeners = [];
 async function confirmAsync(questions, options) {
diff --git a/node_modules/@expo/cli/build/src/utils/prompts.js.map b/node_modules/@expo/cli/build/src/utils/prompts.js.map
index 6296c20..369b4d0 100644
--- a/node_modules/@expo/cli/build/src/utils/prompts.js.map
+++ b/node_modules/@expo/cli/build/src/utils/prompts.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/utils/prompts.ts"],"sourcesContent":["import assert from 'assert';\nimport prompts, { Choice, Options, PromptObject, PromptType } from 'prompts';\n\nimport { AbortCommandError, CommandError } from './errors';\nimport { isInteractive } from './interactive';\n\nconst debug = require('debug')('expo:utils:prompts') as typeof console.log;\n\nexport type Question<V extends string = string> = PromptObject<V> & {\n  optionsPerPage?: number;\n};\n\nexport interface ExpoChoice<T> extends Choice {\n  value: T;\n}\n\nexport { PromptType };\n\ntype PromptOptions = { nonInteractiveHelp?: string } & Options;\n\nexport type NamelessQuestion = Omit<Question<'value'>, 'name' | 'type'>;\n\ntype InteractionOptions = { pause: boolean; canEscape?: boolean };\n\ntype InteractionCallback = (options: InteractionOptions) => void;\n\n/** Interaction observers for detecting when keystroke tracking should pause/resume. */\nconst listeners: InteractionCallback[] = [];\n\nexport default async function prompt(\n  questions: Question | Question[],\n  { nonInteractiveHelp, ...options }: PromptOptions = {}\n) {\n  questions = Array.isArray(questions) ? questions : [questions];\n  if (!isInteractive() && questions.length !== 0) {\n    let message = `Input is required, but 'npx expo' is in non-interactive mode.\\n`;\n    if (nonInteractiveHelp) {\n      message += nonInteractiveHelp;\n    } else {\n      const question = questions[0];\n      const questionMessage =\n        typeof question.message === 'function'\n          ? question.message(undefined, {}, question)\n          : question.message;\n\n      message += `Required input:\\n${(questionMessage || '').trim().replace(/^/gm, '> ')}`;\n    }\n    throw new CommandError('NON_INTERACTIVE', message);\n  }\n\n  pauseInteractions();\n  try {\n    const results = await prompts(questions, {\n      onCancel() {\n        throw new AbortCommandError();\n      },\n      ...options,\n    });\n\n    return results;\n  } finally {\n    resumeInteractions();\n  }\n}\n\n/**\n * Create a standard yes/no confirmation that can be cancelled.\n *\n * @param questions\n * @param options\n */\nexport async function confirmAsync(\n  questions: NamelessQuestion,\n  options?: PromptOptions\n): Promise<boolean> {\n  const { value } = await prompt(\n    {\n      initial: true,\n      ...questions,\n      name: 'value',\n      type: 'confirm',\n    },\n    options\n  );\n  return value ?? null;\n}\n\n/** Select an option from a list of options. */\nexport async function selectAsync<T>(\n  message: string,\n  choices: ExpoChoice<T>[],\n  options?: PromptOptions\n): Promise<T> {\n  const { value } = await prompt(\n    {\n      message,\n      choices,\n      name: 'value',\n      type: 'select',\n    },\n    options\n  );\n  return value ?? null;\n}\n\nexport const promptAsync = prompt;\n\n/** Used to pause/resume interaction observers while prompting (made for TerminalUI). */\nexport function addInteractionListener(callback: InteractionCallback) {\n  listeners.push(callback);\n}\n\nexport function removeInteractionListener(callback: InteractionCallback) {\n  const listenerIndex = listeners.findIndex((_callback) => _callback === callback);\n  assert(\n    listenerIndex >= 0,\n    'removeInteractionListener(): cannot remove an unregistered event listener.'\n  );\n  listeners.splice(listenerIndex, 1);\n}\n\n/** Notify all listeners that keypress observations must pause. */\nexport function pauseInteractions(options: Omit<InteractionOptions, 'pause'> = {}) {\n  debug('Interaction observers paused');\n  for (const listener of listeners) {\n    listener({ pause: true, ...options });\n  }\n}\n\n/** Notify all listeners that keypress observations can start.. */\nexport function resumeInteractions(options: Omit<InteractionOptions, 'pause'> = {}) {\n  debug('Interaction observers resumed');\n  for (const listener of listeners) {\n    listener({ pause: false, ...options });\n  }\n}\n\nexport function createSelectionFilter(): (input: any, choices: Choice[]) => Promise<any> {\n  function escapeRegex(string: string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  return async (input: any, choices: Choice[]) => {\n    try {\n      const regex = new RegExp(escapeRegex(input), 'i');\n      return choices.filter((choice: any) => regex.test(choice.title));\n    } catch (error: any) {\n      debug('Error filtering choices', error);\n      return [];\n    }\n  };\n}\n"],"names":["PromptType","prompt","confirmAsync","selectAsync","addInteractionListener","removeInteractionListener","pauseInteractions","resumeInteractions","createSelectionFilter","questions","nonInteractiveHelp","options","Array","isArray","isInteractive","length","message","question","questionMessage","undefined","trim","replace","CommandError","results","prompts","onCancel","AbortCommandError","debug","require","listeners","value","initial","name","type","choices","promptAsync","callback","push","listenerIndex","findIndex","_callback","assert","splice","listener","pause","escapeRegex","string","input","regex","RegExp","filter","choice","test","title","error"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/utils/prompts.ts"],"sourcesContent":["import assert from 'assert';\nimport prompts, { Choice, Options, PromptObject } from 'prompts';\n\nimport { AbortCommandError, CommandError } from './errors';\nimport { isInteractive } from './interactive';\n\nconst debug = require('debug')('expo:utils:prompts') as typeof console.log;\n\nexport type Question<V extends string = string> = PromptObject<V> & {\n  optionsPerPage?: number;\n};\n\nexport interface ExpoChoice<T> extends Choice {\n  value: T;\n}\n\ntype PromptOptions = { nonInteractiveHelp?: string } & Options;\n\nexport type NamelessQuestion = Omit<Question<'value'>, 'name' | 'type'>;\n\ntype InteractionOptions = { pause: boolean; canEscape?: boolean };\n\ntype InteractionCallback = (options: InteractionOptions) => void;\n\n/** Interaction observers for detecting when keystroke tracking should pause/resume. */\nconst listeners: InteractionCallback[] = [];\n\nexport default async function prompt(\n  questions: Question | Question[],\n  { nonInteractiveHelp, ...options }: PromptOptions = {}\n) {\n  questions = Array.isArray(questions) ? questions : [questions];\n  if (!isInteractive() && questions.length !== 0) {\n    let message = `Input is required, but 'npx expo' is in non-interactive mode.\\n`;\n    if (nonInteractiveHelp) {\n      message += nonInteractiveHelp;\n    } else {\n      const question = questions[0];\n      const questionMessage =\n        typeof question.message === 'function'\n          ? question.message(undefined, {}, question)\n          : question.message;\n\n      message += `Required input:\\n${(questionMessage || '').trim().replace(/^/gm, '> ')}`;\n    }\n    throw new CommandError('NON_INTERACTIVE', message);\n  }\n\n  pauseInteractions();\n  try {\n    const results = await prompts(questions, {\n      onCancel() {\n        throw new AbortCommandError();\n      },\n      ...options,\n    });\n\n    return results;\n  } finally {\n    resumeInteractions();\n  }\n}\n\n/**\n * Create a standard yes/no confirmation that can be cancelled.\n *\n * @param questions\n * @param options\n */\nexport async function confirmAsync(\n  questions: NamelessQuestion,\n  options?: PromptOptions\n): Promise<boolean> {\n  const { value } = await prompt(\n    {\n      initial: true,\n      ...questions,\n      name: 'value',\n      type: 'confirm',\n    },\n    options\n  );\n  return value ?? null;\n}\n\n/** Select an option from a list of options. */\nexport async function selectAsync<T>(\n  message: string,\n  choices: ExpoChoice<T>[],\n  options?: PromptOptions\n): Promise<T> {\n  const { value } = await prompt(\n    {\n      message,\n      choices,\n      name: 'value',\n      type: 'select',\n    },\n    options\n  );\n  return value ?? null;\n}\n\nexport const promptAsync = prompt;\n\n/** Used to pause/resume interaction observers while prompting (made for TerminalUI). */\nexport function addInteractionListener(callback: InteractionCallback) {\n  listeners.push(callback);\n}\n\nexport function removeInteractionListener(callback: InteractionCallback) {\n  const listenerIndex = listeners.findIndex((_callback) => _callback === callback);\n  assert(\n    listenerIndex >= 0,\n    'removeInteractionListener(): cannot remove an unregistered event listener.'\n  );\n  listeners.splice(listenerIndex, 1);\n}\n\n/** Notify all listeners that keypress observations must pause. */\nexport function pauseInteractions(options: Omit<InteractionOptions, 'pause'> = {}) {\n  debug('Interaction observers paused');\n  for (const listener of listeners) {\n    listener({ pause: true, ...options });\n  }\n}\n\n/** Notify all listeners that keypress observations can start.. */\nexport function resumeInteractions(options: Omit<InteractionOptions, 'pause'> = {}) {\n  debug('Interaction observers resumed');\n  for (const listener of listeners) {\n    listener({ pause: false, ...options });\n  }\n}\n\nexport function createSelectionFilter(): (input: any, choices: Choice[]) => Promise<any> {\n  function escapeRegex(string: string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  return async (input: any, choices: Choice[]) => {\n    try {\n      const regex = new RegExp(escapeRegex(input), 'i');\n      return choices.filter((choice: any) => regex.test(choice.title));\n    } catch (error: any) {\n      debug('Error filtering choices', error);\n      return [];\n    }\n  };\n}\n"],"names":["prompt","confirmAsync","selectAsync","addInteractionListener","removeInteractionListener","pauseInteractions","resumeInteractions","createSelectionFilter","questions","nonInteractiveHelp","options","Array","isArray","isInteractive","length","message","question","questionMessage","undefined","trim","replace","CommandError","results","prompts","onCancel","AbortCommandError","debug","require","listeners","value","initial","name","type","choices","promptAsync","callback","push","listenerIndex","findIndex","_callback","assert","splice","listener","pause","escapeRegex","string","input","regex","RegExp","filter","choice","test","title","error"],"mappings":"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"}
\ No newline at end of file
